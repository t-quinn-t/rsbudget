{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0","program":"/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_io","--edition=2018","/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fa34c2f8d209c2fb","-C","extra-filename=-fa34c2f8d209c2fb","--out-dir","/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","-L","dependency=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","--extern","concurrent_queue=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libconcurrent_queue-739157369336dc03.rmeta","--extern","futures_lite=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_lite-2189a78674f17351.rmeta","--extern","libc=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/liblibc-6797570d26064b09.rmeta","--extern","log=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/liblog-51da73d35704855d.rmeta","--extern","once_cell=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libonce_cell-58ce2c539dbc1068.rmeta","--extern","parking=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libparking-31cdf289401b9ff7.rmeta","--extern","polling=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libpolling-d8b93101bd98d1d6.rmeta","--extern","slab=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libslab-de332a61ef2f015a.rmeta","--extern","socket2=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libsocket2-ccbb019ce5f9d45c.rmeta","--extern","waker_fn=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libwaker_fn-fc6b93d5166944ef.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_io-fa34c2f8d209c2fb.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[14112864738572649116,0]},"crate_root":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src","external_crates":[{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-lite-1.12.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":20,"id":{"name":"futures_lite","disambiguator":[6251403588425934164,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[13303723133118847327,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","num":22,"id":{"name":"parking","disambiguator":[254795513502581005,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","num":23,"id":{"name":"waker_fn","disambiguator":[1636685816392815972,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":24,"id":{"name":"futures_core","disambiguator":[15444505974485443805,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":25,"id":{"name":"futures_io","disambiguator":[16762036240062565512,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":26,"id":{"name":"fastrand","disambiguator":[12992847879450994621,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":27,"id":{"name":"memchr","disambiguator":[15255469418595263440,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":28,"id":{"name":"socket2","disambiguator":[8063944930690722556,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","num":29,"id":{"name":"libc","disambiguator":[14730682284296605087,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","num":30,"id":{"name":"once_cell","disambiguator":[6982176268761646135,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":31,"id":{"name":"concurrent_queue","disambiguator":[13428994258662809567,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":32,"id":{"name":"cache_padded","disambiguator":[6020831112145092118,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":33,"id":{"name":"polling","disambiguator":[18052463595161999878,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":34,"id":{"name":"cfg_if","disambiguator":[16442455012885040314,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","num":35,"id":{"name":"log","disambiguator":[14789688952185382308,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":36,"id":{"name":"serde","disambiguator":[13353710497034489576,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":37,"id":{"name":"serde_derive","disambiguator":[12111812958458064915,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":38,"id":{"name":"value_bag","disambiguator":[4196463847300359276,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":39,"id":{"name":"ctor","disambiguator":[18104799359949978945,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":40,"id":{"name":"erased_serde","disambiguator":[16332757691032284507,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":41,"id":{"name":"serde_fmt","disambiguator":[15960062228164920546,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","num":42,"id":{"name":"slab","disambiguator":[17606039980974335472,0]}}],"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":0,"byte_end":58416,"line_start":1,"line_end":1786,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2982,"byte_end":2990,"line_start":87,"line_end":87,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3010,"byte_end":3018,"line_start":88,"line_end":88,"column_start":19,"column_end":27},"alias_span":null,"name":"Readable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3020,"byte_end":3033,"line_start":88,"line_end":88,"column_start":29,"column_end":42},"alias_span":null,"name":"ReadableOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3035,"byte_end":3043,"line_start":88,"line_end":88,"column_start":44,"column_end":52},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3045,"byte_end":3058,"line_start":88,"line_end":88,"column_start":54,"column_end":67},"alias_span":null,"name":"WritableOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":0,"byte_end":58416,"line_start":1,"line_end":1786,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":205},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":442},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":516},{"krate":0,"index":522},{"krate":0,"index":529},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":641}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future or stream that emits timed events.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":184,"byte_end":244,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":245,"byte_end":248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":249,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/smol-rs/async-io/tree/master/examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":340,"byte_end":414,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":415,"byte_end":459,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":460,"byte_end":463,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":464,"byte_end":484,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":485,"byte_end":488,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":489,"byte_end":582,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":583,"byte_end":682,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":683,"byte_end":762,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":763,"byte_end":766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":767,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":864,"byte_end":958,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":959,"byte_end":1014,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1019,"byte_end":1114,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1115,"byte_end":1204,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1205,"byte_end":1260,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1261,"byte_end":1264,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1265,"byte_end":1313,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1314,"byte_end":1364,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1365,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1420,"byte_end":1472,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1473,"byte_end":1513,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1518,"byte_end":1532,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1533,"byte_end":1536,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1537,"byte_end":1599,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1600,"byte_end":1603,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1604,"byte_end":1611,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1612,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1646,"byte_end":1692,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1693,"byte_end":1696,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1697,"byte_end":1742,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1743,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1772,"byte_end":1775,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1776,"byte_end":1820,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1821,"byte_end":1888,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1893,"byte_end":1954,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":1955,"byte_end":2007,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2008,"byte_end":2051,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2052,"byte_end":2058,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2059,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2072,"byte_end":2105,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2106,"byte_end":2113,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":2115,"byte_end":2186,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61595,"byte_end":61603,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\nT>>(impl Future<Output = T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61198,"byte_end":61273,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61274,"byte_end":61277,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61278,"byte_end":61292,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61293,"byte_end":61296,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61297,"byte_end":61304,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61305,"byte_end":61329,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61330,"byte_end":61358,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61359,"byte_end":61362,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61363,"byte_end":61393,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61394,"byte_end":61455,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61456,"byte_end":61517,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61518,"byte_end":61571,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61572,"byte_end":61579,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":61580,"byte_end":61587,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":82736,"byte_end":82744,"line_start":485,"line_end":485,"column_start":12,"column_end":20},"name":"Readable","qualname":"::reactor::Readable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable`](crate::Async::readable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable`](crate::Async::readable).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":82597,"byte_end":82656,"line_start":483,"line_end":483,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":82657,"byte_end":82724,"line_start":484,"line_end":484,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83401,"byte_end":83414,"line_start":505,"line_end":505,"column_start":12,"column_end":25},"name":"ReadableOwned","qualname":"::reactor::ReadableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable_owned`](crate::Async::readable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable_owned`](crate::Async::readable_owned).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83250,"byte_end":83321,"line_start":503,"line_end":503,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83322,"byte_end":83389,"line_start":504,"line_end":504,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84069,"byte_end":84077,"line_start":525,"line_end":525,"column_start":12,"column_end":20},"name":"Writable","qualname":"::reactor::Writable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable`](crate::Async::writable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable`](crate::Async::writable).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83930,"byte_end":83989,"line_start":523,"line_end":523,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83990,"byte_end":84057,"line_start":524,"line_end":524,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84734,"byte_end":84747,"line_start":545,"line_end":545,"column_start":12,"column_end":25},"name":"WritableOwned","qualname":"::reactor::WritableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable_owned`](crate::Async::writable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable_owned`](crate::Async::writable_owned).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84583,"byte_end":84654,"line_start":543,"line_end":543,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84655,"byte_end":84722,"line_start":544,"line_end":544,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4102,"byte_end":4107,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"decl_id":null,"docs":" A future or stream that emits timed events.","sig":null,"attributes":[{"value":"/ A future or stream that emits timed events.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3215,"byte_end":3262,"line_start":95,"line_end":95,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output a single [`Instant`] when they fire.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3267,"byte_end":3338,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Timers are also streams that can output [`Instant`]s periodically.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3343,"byte_end":3413,"line_start":99,"line_end":99,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3414,"byte_end":3417,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3418,"byte_end":3432,"line_start":101,"line_end":101,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3433,"byte_end":3436,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3437,"byte_end":3460,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3461,"byte_end":3464,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3465,"byte_end":3472,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3473,"byte_end":3497,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3498,"byte_end":3526,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3527,"byte_end":3530,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3531,"byte_end":3575,"line_start":109,"line_end":109,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3576,"byte_end":3623,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3624,"byte_end":3633,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3634,"byte_end":3641,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3642,"byte_end":3645,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3646,"byte_end":3673,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3674,"byte_end":3677,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3678,"byte_end":3685,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3686,"byte_end":3710,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3711,"byte_end":3743,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3744,"byte_end":3772,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3773,"byte_end":3776,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3777,"byte_end":3821,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3822,"byte_end":3873,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3874,"byte_end":3893,"line_start":123,"line_end":123,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3894,"byte_end":3950,"line_start":124,"line_end":124,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":3951,"byte_end":4003,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4004,"byte_end":4014,"line_start":126,"line_end":126,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4015,"byte_end":4031,"line_start":127,"line_end":127,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4032,"byte_end":4065,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4066,"byte_end":4073,"line_start":129,"line_end":129,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4771,"byte_end":4776,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"pub fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once after the given duration of time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4437,"byte_end":4515,"line_start":145,"line_end":145,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4520,"byte_end":4523,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4528,"byte_end":4542,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4555,"byte_end":4562,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4567,"byte_end":4591,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4596,"byte_end":4624,"line_start":151,"line_end":151,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4629,"byte_end":4632,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4637,"byte_end":4681,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4686,"byte_end":4733,"line_start":154,"line_end":154,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4738,"byte_end":4747,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4752,"byte_end":4759,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5264,"byte_end":5266,"line_start":175,"line_end":175,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"pub fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once at the given time instant.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4864,"byte_end":4935,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4940,"byte_end":4943,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4948,"byte_end":4962,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4967,"byte_end":4970,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4975,"byte_end":4982,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4987,"byte_end":5011,"line_start":166,"line_end":166,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5016,"byte_end":5055,"line_start":167,"line_end":167,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5060,"byte_end":5063,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5068,"byte_end":5112,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5117,"byte_end":5146,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5151,"byte_end":5195,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5200,"byte_end":5226,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5231,"byte_end":5240,"line_start":173,"line_end":173,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5245,"byte_end":5252,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5822,"byte_end":5830,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"interval","qualname":"<Timer>::interval","value":"pub fn interval(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5428,"byte_end":5479,"line_start":180,"line_end":180,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5484,"byte_end":5487,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5492,"byte_end":5506,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5511,"byte_end":5514,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5519,"byte_end":5526,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5531,"byte_end":5555,"line_start":185,"line_end":185,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5560,"byte_end":5592,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5597,"byte_end":5636,"line_start":187,"line_end":187,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5641,"byte_end":5644,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5649,"byte_end":5693,"line_start":189,"line_end":189,"column_start":5,"column_end":49}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5698,"byte_end":5738,"line_start":190,"line_end":190,"column_start":5,"column_end":45}},{"value":"/ Timer::interval(period).next().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5743,"byte_end":5784,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5789,"byte_end":5798,"line_start":192,"line_end":192,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5803,"byte_end":5810,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6392,"byte_end":6403,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"interval_at","qualname":"<Timer>::interval_at","value":"pub fn interval_at(Instant, Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically, starting at `start`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":5931,"byte_end":6003,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6008,"byte_end":6011,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6016,"byte_end":6030,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6035,"byte_end":6038,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6043,"byte_end":6050,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6055,"byte_end":6079,"line_start":203,"line_end":203,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6084,"byte_end":6116,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6121,"byte_end":6160,"line_start":205,"line_end":205,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6165,"byte_end":6168,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6173,"byte_end":6217,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6222,"byte_end":6253,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6258,"byte_end":6298,"line_start":209,"line_end":209,"column_start":5,"column_end":45}},{"value":"/ Timer::interval_at(start, period).next().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6303,"byte_end":6354,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6359,"byte_end":6368,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6373,"byte_end":6380,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7174,"byte_end":7183,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"pub fn set_after(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an en event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an en event once after the given duration of time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6563,"byte_end":6640,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6645,"byte_end":6648,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6653,"byte_end":6731,"line_start":223,"line_end":223,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6736,"byte_end":6828,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6833,"byte_end":6863,"line_start":225,"line_end":225,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6868,"byte_end":6871,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6876,"byte_end":6890,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6895,"byte_end":6898,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6903,"byte_end":6910,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6915,"byte_end":6939,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6944,"byte_end":6972,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":6985,"byte_end":7029,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7034,"byte_end":7087,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7092,"byte_end":7136,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7141,"byte_end":7150,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7155,"byte_end":7162,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7948,"byte_end":7954,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"pub fn set_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an event once at the given time instant.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7276,"byte_end":7343,"line_start":242,"line_end":242,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7348,"byte_end":7351,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7356,"byte_end":7434,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ [`set_at()`][`Timer::set_at()`] does not remove the waker associated with the task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7439,"byte_end":7525,"line_start":245,"line_end":245,"column_start":5,"column_end":91}},{"value":"/ that is polling the timer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7530,"byte_end":7560,"line_start":246,"line_end":246,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7565,"byte_end":7568,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7573,"byte_end":7587,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7592,"byte_end":7595,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7600,"byte_end":7607,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7612,"byte_end":7636,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7641,"byte_end":7680,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7685,"byte_end":7688,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7693,"byte_end":7737,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7742,"byte_end":7795,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7800,"byte_end":7803,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7808,"byte_end":7837,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7842,"byte_end":7886,"line_start":258,"line_end":258,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7891,"byte_end":7910,"line_start":259,"line_end":259,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7915,"byte_end":7924,"line_start":260,"line_end":260,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":7929,"byte_end":7936,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9109,"byte_end":9121,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Timer>::set_interval","value":"pub fn set_interval(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8438,"byte_end":8485,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8490,"byte_end":8493,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8498,"byte_end":8576,"line_start":279,"line_end":279,"column_start":5,"column_end":83}},{"value":"/ [`set_interval()`][`Timer::set_interval()`] does not remove the waker associated with the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8581,"byte_end":8674,"line_start":280,"line_end":280,"column_start":5,"column_end":98}},{"value":"/ task that is polling the timer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8679,"byte_end":8714,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8727,"byte_end":8741,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8746,"byte_end":8749,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8754,"byte_end":8761,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8766,"byte_end":8790,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8795,"byte_end":8827,"line_start":287,"line_end":287,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8832,"byte_end":8871,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8876,"byte_end":8879,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8884,"byte_end":8928,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8933,"byte_end":8986,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8991,"byte_end":8994,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":293,"line_end":293,"column_start":5,"column_end":45}},{"value":"/ t.set_interval(period);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9044,"byte_end":9071,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9076,"byte_end":9085,"line_start":295,"line_end":295,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9090,"byte_end":9097,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9971,"byte_end":9986,"line_start":322,"line_end":322,"column_start":12,"column_end":27},"name":"set_interval_at","qualname":"<Timer>::set_interval_at","value":"pub fn set_interval_at(&mut Self, Instant, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically, starting at `start`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9227,"byte_end":9295,"line_start":301,"line_end":301,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9300,"byte_end":9303,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9308,"byte_end":9386,"line_start":303,"line_end":303,"column_start":5,"column_end":83}},{"value":"/ [`set_interval_at()`][`Timer::set_interval_at()`] does not remove the waker associated with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9391,"byte_end":9486,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ the task that is polling the timer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9491,"byte_end":9530,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9535,"byte_end":9538,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9543,"byte_end":9557,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9562,"byte_end":9565,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9570,"byte_end":9577,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9582,"byte_end":9606,"line_start":310,"line_end":310,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9611,"byte_end":9643,"line_start":311,"line_end":311,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9648,"byte_end":9687,"line_start":312,"line_end":312,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9692,"byte_end":9695,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9700,"byte_end":9744,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9749,"byte_end":9802,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9807,"byte_end":9810,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9815,"byte_end":9846,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9851,"byte_end":9891,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/ t.set_interval_at(start, period);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9896,"byte_end":9933,"line_start":319,"line_end":319,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9938,"byte_end":9947,"line_start":320,"line_end":320,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":9952,"byte_end":9959,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16460,"byte_end":16465,"line_start":491,"line_end":491,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12729,"byte_end":12761,"line_start":399,"line_end":399,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12762,"byte_end":12765,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12766,"byte_end":12838,"line_start":401,"line_end":401,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12839,"byte_end":12928,"line_start":402,"line_end":402,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12929,"byte_end":12932,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12933,"byte_end":12981,"line_start":404,"line_end":404,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":12982,"byte_end":13032,"line_start":405,"line_end":405,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13033,"byte_end":13087,"line_start":406,"line_end":406,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13088,"byte_end":13140,"line_start":407,"line_end":407,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13141,"byte_end":13144,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13145,"byte_end":13158,"line_start":409,"line_end":409,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13159,"byte_end":13162,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13163,"byte_end":13242,"line_start":411,"line_end":411,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13243,"byte_end":13246,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13247,"byte_end":13332,"line_start":413,"line_end":413,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13333,"byte_end":13365,"line_start":414,"line_end":414,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13366,"byte_end":13369,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/smol-rs/async-net","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13370,"byte_end":13425,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/ [`async-process`]: https://github.com/smol-rs/async-process","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13426,"byte_end":13489,"line_start":417,"line_end":417,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13490,"byte_end":13493,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13494,"byte_end":13517,"line_start":419,"line_end":419,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13518,"byte_end":13521,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13522,"byte_end":13616,"line_start":421,"line_end":421,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13617,"byte_end":13645,"line_start":422,"line_end":422,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13646,"byte_end":13649,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13650,"byte_end":13726,"line_start":424,"line_end":424,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13727,"byte_end":13823,"line_start":425,"line_end":425,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13824,"byte_end":13910,"line_start":426,"line_end":426,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13911,"byte_end":13914,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/smol-rs/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":13915,"byte_end":14003,"line_start":428,"line_end":428,"column_start":1,"column_end":89}},{"value":"/ [inotify]: https://github.com/smol-rs/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14004,"byte_end":14092,"line_start":429,"line_end":429,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14093,"byte_end":14096,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14097,"byte_end":14119,"line_start":431,"line_end":431,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14120,"byte_end":14123,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14124,"byte_end":14212,"line_start":433,"line_end":433,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14213,"byte_end":14304,"line_start":434,"line_end":434,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14305,"byte_end":14320,"line_start":435,"line_end":435,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14321,"byte_end":14324,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14325,"byte_end":14423,"line_start":437,"line_end":437,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14424,"byte_end":14521,"line_start":438,"line_end":438,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14522,"byte_end":14619,"line_start":439,"line_end":439,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14620,"byte_end":14716,"line_start":440,"line_end":440,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14717,"byte_end":14726,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14727,"byte_end":14730,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ Besides [`AsyncRead`] and [`AsyncWrite`], this caveat also applies to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14731,"byte_end":14804,"line_start":443,"line_end":443,"column_start":1,"column_end":74}},{"value":"/ [`poll_readable()`][`Async::poll_readable()`] and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14805,"byte_end":14858,"line_start":444,"line_end":444,"column_start":1,"column_end":54}},{"value":"/ [`poll_writable()`][`Async::poll_writable()`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14859,"byte_end":14909,"line_start":445,"line_end":445,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14910,"byte_end":14913,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ However, any number of tasks can be concurrently calling other methods like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14914,"byte_end":14993,"line_start":447,"line_end":447,"column_start":1,"column_end":80}},{"value":"/ [`readable()`][`Async::readable()`] or [`read_with()`][`Async::read_with()`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":14994,"byte_end":15075,"line_start":448,"line_end":448,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15076,"byte_end":15079,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15080,"byte_end":15095,"line_start":450,"line_end":450,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15096,"byte_end":15099,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15100,"byte_end":15196,"line_start":452,"line_end":452,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15197,"byte_end":15266,"line_start":453,"line_end":453,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15267,"byte_end":15306,"line_start":454,"line_end":454,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15307,"byte_end":15310,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15311,"byte_end":15325,"line_start":456,"line_end":456,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15326,"byte_end":15329,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15330,"byte_end":15400,"line_start":458,"line_end":458,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15401,"byte_end":15404,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15405,"byte_end":15418,"line_start":460,"line_end":460,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15419,"byte_end":15443,"line_start":461,"line_end":461,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15444,"byte_end":15469,"line_start":462,"line_end":462,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15470,"byte_end":15498,"line_start":463,"line_end":463,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15499,"byte_end":15502,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15503,"byte_end":15547,"line_start":465,"line_end":465,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15548,"byte_end":15581,"line_start":466,"line_end":466,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15582,"byte_end":15658,"line_start":467,"line_end":467,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15659,"byte_end":15662,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15663,"byte_end":15741,"line_start":469,"line_end":469,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15742,"byte_end":15780,"line_start":470,"line_end":470,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15781,"byte_end":15814,"line_start":471,"line_end":471,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15815,"byte_end":15822,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15823,"byte_end":15826,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15827,"byte_end":15909,"line_start":474,"line_end":474,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15910,"byte_end":15994,"line_start":475,"line_end":475,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":15995,"byte_end":16027,"line_start":476,"line_end":476,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16028,"byte_end":16031,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16032,"byte_end":16045,"line_start":478,"line_end":478,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16046,"byte_end":16070,"line_start":479,"line_end":479,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16071,"byte_end":16101,"line_start":480,"line_end":480,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16102,"byte_end":16105,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16106,"byte_end":16150,"line_start":482,"line_end":482,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16151,"byte_end":16219,"line_start":483,"line_end":483,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16220,"byte_end":16223,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16224,"byte_end":16262,"line_start":485,"line_end":485,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16263,"byte_end":16313,"line_start":486,"line_end":486,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16314,"byte_end":16389,"line_start":487,"line_end":487,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16390,"byte_end":16423,"line_start":488,"line_end":488,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16424,"byte_end":16431,"line_start":489,"line_end":489,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17570,"byte_end":17573,"line_start":527,"line_end":527,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"pub fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16669,"byte_end":16701,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16706,"byte_end":16709,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This method will put the handle in non-blocking mode and register it in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16714,"byte_end":16789,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16794,"byte_end":16838,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16843,"byte_end":16846,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16851,"byte_end":16943,"line_start":508,"line_end":508,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16948,"byte_end":16966,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16971,"byte_end":16974,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16979,"byte_end":17027,"line_start":511,"line_end":511,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17032,"byte_end":17082,"line_start":512,"line_end":512,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17087,"byte_end":17141,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17146,"byte_end":17198,"line_start":514,"line_end":514,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17203,"byte_end":17206,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17211,"byte_end":17225,"line_start":516,"line_end":516,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17230,"byte_end":17233,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17238,"byte_end":17245,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17250,"byte_end":17274,"line_start":519,"line_end":519,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17279,"byte_end":17323,"line_start":520,"line_end":520,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17328,"byte_end":17331,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17336,"byte_end":17380,"line_start":522,"line_end":522,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17385,"byte_end":17462,"line_start":523,"line_end":523,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17467,"byte_end":17508,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17513,"byte_end":17546,"line_start":525,"line_end":525,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":17551,"byte_end":17558,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20409,"byte_end":20416,"line_start":628,"line_end":628,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20021,"byte_end":20066,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20071,"byte_end":20074,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20079,"byte_end":20093,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20098,"byte_end":20101,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20106,"byte_end":20113,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20118,"byte_end":20142,"line_start":620,"line_end":620,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20147,"byte_end":20177,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20182,"byte_end":20185,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20190,"byte_end":20234,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20239,"byte_end":20307,"line_start":624,"line_end":624,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20312,"byte_end":20347,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20352,"byte_end":20385,"line_start":626,"line_end":626,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20390,"byte_end":20397,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20877,"byte_end":20884,"line_start":645,"line_end":645,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20477,"byte_end":20530,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20535,"byte_end":20538,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20543,"byte_end":20557,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20562,"byte_end":20565,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20570,"byte_end":20577,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20582,"byte_end":20606,"line_start":637,"line_end":637,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20611,"byte_end":20641,"line_start":638,"line_end":638,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20646,"byte_end":20649,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20654,"byte_end":20698,"line_start":640,"line_end":640,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20703,"byte_end":20775,"line_start":641,"line_end":641,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20780,"byte_end":20815,"line_start":642,"line_end":642,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20820,"byte_end":20853,"line_start":643,"line_end":643,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20858,"byte_end":20865,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21518,"byte_end":21528,"line_start":667,"line_end":667,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20953,"byte_end":20986,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20991,"byte_end":20994,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20999,"byte_end":21071,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21076,"byte_end":21079,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21084,"byte_end":21098,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21103,"byte_end":21106,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21111,"byte_end":21118,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21123,"byte_end":21147,"line_start":656,"line_end":656,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21152,"byte_end":21182,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21187,"byte_end":21190,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21195,"byte_end":21239,"line_start":659,"line_end":659,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21244,"byte_end":21312,"line_start":660,"line_end":660,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21317,"byte_end":21356,"line_start":661,"line_end":661,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21361,"byte_end":21364,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21369,"byte_end":21417,"line_start":663,"line_end":663,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21422,"byte_end":21456,"line_start":664,"line_end":664,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21461,"byte_end":21494,"line_start":665,"line_end":665,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21499,"byte_end":21506,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22218,"byte_end":22226,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"readable","qualname":"<Async<T>>::readable","value":"pub fn readable(&Self) -> Readable<, T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21675,"byte_end":21718,"line_start":673,"line_end":673,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21723,"byte_end":21726,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21731,"byte_end":21813,"line_start":675,"line_end":675,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21818,"byte_end":21821,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21826,"byte_end":21840,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21845,"byte_end":21848,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21853,"byte_end":21866,"line_start":679,"line_end":679,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21871,"byte_end":21895,"line_start":680,"line_end":680,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21900,"byte_end":21930,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21935,"byte_end":21938,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21943,"byte_end":21987,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":21992,"byte_end":22064,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22069,"byte_end":22072,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22077,"byte_end":22120,"line_start":686,"line_end":686,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22125,"byte_end":22156,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22161,"byte_end":22194,"line_start":688,"line_end":688,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22199,"byte_end":22206,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22447,"byte_end":22461,"line_start":697,"line_end":697,"column_start":12,"column_end":26},"name":"readable_owned","qualname":"<Async<T>>::readable_owned","value":"pub fn readable_owned(Arc<Self>) -> ReadableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22297,"byte_end":22340,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22345,"byte_end":22348,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22353,"byte_end":22435,"line_start":696,"line_end":696,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23156,"byte_end":23164,"line_start":719,"line_end":719,"column_start":12,"column_end":20},"name":"writable","qualname":"<Async<T>>::writable","value":"pub fn writable(&Self) -> Writable<, T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22549,"byte_end":22592,"line_start":701,"line_end":701,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22597,"byte_end":22600,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22605,"byte_end":22688,"line_start":703,"line_end":703,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22693,"byte_end":22696,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22701,"byte_end":22715,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22720,"byte_end":22723,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22728,"byte_end":22735,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22740,"byte_end":22764,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22769,"byte_end":22814,"line_start":709,"line_end":709,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22819,"byte_end":22822,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22827,"byte_end":22871,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22876,"byte_end":22943,"line_start":712,"line_end":712,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":22948,"byte_end":23006,"line_start":713,"line_end":713,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23011,"byte_end":23014,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23019,"byte_end":23060,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23065,"byte_end":23094,"line_start":716,"line_end":716,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23099,"byte_end":23132,"line_start":717,"line_end":717,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23137,"byte_end":23144,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23386,"byte_end":23400,"line_start":726,"line_end":726,"column_start":12,"column_end":26},"name":"writable_owned","qualname":"<Async<T>>::writable_owned","value":"pub fn writable_owned(Arc<Self>) -> WritableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23235,"byte_end":23278,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23283,"byte_end":23286,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23291,"byte_end":23374,"line_start":725,"line_end":725,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24521,"byte_end":24534,"line_start":757,"line_end":757,"column_start":12,"column_end":25},"name":"poll_readable","qualname":"<Async<T>>::poll_readable","value":"pub fn poll_readable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for readability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for readability.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23488,"byte_end":23529,"line_start":730,"line_end":730,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23534,"byte_end":23537,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23542,"byte_end":23628,"line_start":732,"line_end":732,"column_start":5,"column_end":91}},{"value":"/ indicating readability since the last time this task has called the method and received","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23633,"byte_end":23724,"line_start":733,"line_end":733,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23729,"byte_end":23751,"line_start":734,"line_end":734,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23756,"byte_end":23759,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23764,"byte_end":23777,"line_start":736,"line_end":736,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23782,"byte_end":23785,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23790,"byte_end":23884,"line_start":738,"line_end":738,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23889,"byte_end":23957,"line_start":739,"line_end":739,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23962,"byte_end":23965,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncRead`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":23970,"byte_end":24053,"line_start":741,"line_end":741,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24058,"byte_end":24061,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24066,"byte_end":24080,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24085,"byte_end":24088,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24093,"byte_end":24106,"line_start":745,"line_end":745,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24111,"byte_end":24135,"line_start":746,"line_end":746,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24140,"byte_end":24169,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24174,"byte_end":24204,"line_start":748,"line_end":748,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24209,"byte_end":24212,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24217,"byte_end":24261,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24266,"byte_end":24338,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24343,"byte_end":24346,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24351,"byte_end":24394,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/ future::poll_fn(|cx| listener.poll_readable(cx)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24399,"byte_end":24459,"line_start":754,"line_end":754,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24464,"byte_end":24497,"line_start":755,"line_end":755,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24502,"byte_end":24509,"line_start":756,"line_end":756,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25736,"byte_end":25749,"line_start":789,"line_end":789,"column_start":12,"column_end":25},"name":"poll_writable","qualname":"<Async<T>>::poll_writable","value":"pub fn poll_writable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for writability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for writability.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24639,"byte_end":24680,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24685,"byte_end":24688,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24693,"byte_end":24779,"line_start":763,"line_end":763,"column_start":5,"column_end":91}},{"value":"/ indicating writability since the last time this task has called the method and received","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24784,"byte_end":24875,"line_start":764,"line_end":764,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24880,"byte_end":24902,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24907,"byte_end":24910,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24915,"byte_end":24928,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24933,"byte_end":24936,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":24941,"byte_end":25035,"line_start":769,"line_end":769,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25040,"byte_end":25108,"line_start":770,"line_end":770,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25113,"byte_end":25116,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncWrite`] implementation for [`Async`] also uses this method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25121,"byte_end":25205,"line_start":772,"line_end":772,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25210,"byte_end":25213,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25218,"byte_end":25232,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25237,"byte_end":25240,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25245,"byte_end":25252,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25257,"byte_end":25281,"line_start":777,"line_end":777,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25286,"byte_end":25315,"line_start":778,"line_end":778,"column_start":5,"column_end":34}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25320,"byte_end":25365,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25370,"byte_end":25373,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25378,"byte_end":25422,"line_start":781,"line_end":781,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25427,"byte_end":25494,"line_start":782,"line_end":782,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25499,"byte_end":25557,"line_start":783,"line_end":783,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25562,"byte_end":25565,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25570,"byte_end":25611,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ future::poll_fn(|cx| stream.poll_writable(cx)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25616,"byte_end":25674,"line_start":786,"line_end":786,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25679,"byte_end":25712,"line_start":787,"line_end":787,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25717,"byte_end":25724,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26768,"byte_end":26777,"line_start":815,"line_end":815,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"pub async fn read_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\nio::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25854,"byte_end":25899,"line_start":793,"line_end":793,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25904,"byte_end":25907,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":25912,"byte_end":26001,"line_start":795,"line_end":795,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26006,"byte_end":26093,"line_start":796,"line_end":796,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26098,"byte_end":26189,"line_start":797,"line_end":797,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26194,"byte_end":26251,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26256,"byte_end":26259,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26264,"byte_end":26326,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26331,"byte_end":26334,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26339,"byte_end":26353,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26358,"byte_end":26361,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26366,"byte_end":26379,"line_start":804,"line_end":804,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26384,"byte_end":26408,"line_start":805,"line_end":805,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26413,"byte_end":26443,"line_start":806,"line_end":806,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26448,"byte_end":26451,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26456,"byte_end":26500,"line_start":808,"line_end":808,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26505,"byte_end":26573,"line_start":809,"line_end":809,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26578,"byte_end":26581,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26586,"byte_end":26628,"line_start":811,"line_end":811,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26633,"byte_end":26700,"line_start":812,"line_end":812,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26705,"byte_end":26738,"line_start":813,"line_end":813,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":26743,"byte_end":26750,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28038,"byte_end":28051,"line_start":848,"line_end":848,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"pub async fn read_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T) ->\nio::Result<R>>(&'_ mut Self, impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27115,"byte_end":27160,"line_start":826,"line_end":826,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27165,"byte_end":27168,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27173,"byte_end":27262,"line_start":828,"line_end":828,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27267,"byte_end":27354,"line_start":829,"line_end":829,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27359,"byte_end":27450,"line_start":830,"line_end":830,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27455,"byte_end":27512,"line_start":831,"line_end":831,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27517,"byte_end":27520,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27525,"byte_end":27588,"line_start":833,"line_end":833,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27593,"byte_end":27596,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27601,"byte_end":27615,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27620,"byte_end":27623,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27628,"byte_end":27641,"line_start":837,"line_end":837,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27646,"byte_end":27670,"line_start":838,"line_end":838,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27675,"byte_end":27705,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27710,"byte_end":27713,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27718,"byte_end":27762,"line_start":841,"line_end":841,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27767,"byte_end":27839,"line_start":842,"line_end":842,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27844,"byte_end":27847,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27852,"byte_end":27894,"line_start":844,"line_end":844,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27899,"byte_end":27970,"line_start":845,"line_end":845,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":27975,"byte_end":28008,"line_start":846,"line_end":846,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28013,"byte_end":28020,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29355,"byte_end":29365,"line_start":885,"line_end":885,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"pub async fn write_with<R, '_, impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\nio::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28420,"byte_end":28466,"line_start":862,"line_end":862,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28471,"byte_end":28474,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28479,"byte_end":28568,"line_start":864,"line_end":864,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28573,"byte_end":28660,"line_start":865,"line_end":865,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28665,"byte_end":28756,"line_start":866,"line_end":866,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28761,"byte_end":28818,"line_start":867,"line_end":867,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28823,"byte_end":28826,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28831,"byte_end":28893,"line_start":869,"line_end":869,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28898,"byte_end":28901,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28906,"byte_end":28920,"line_start":871,"line_end":871,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28925,"byte_end":28928,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28933,"byte_end":28946,"line_start":873,"line_end":873,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28951,"byte_end":28975,"line_start":874,"line_end":874,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":28980,"byte_end":29008,"line_start":875,"line_end":875,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29013,"byte_end":29016,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29021,"byte_end":29065,"line_start":877,"line_end":877,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29070,"byte_end":29137,"line_start":878,"line_end":878,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29142,"byte_end":29190,"line_start":879,"line_end":879,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29195,"byte_end":29198,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29203,"byte_end":29226,"line_start":881,"line_end":881,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29231,"byte_end":29287,"line_start":882,"line_end":882,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29292,"byte_end":29325,"line_start":883,"line_end":883,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29330,"byte_end":29337,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30647,"byte_end":30661,"line_start":919,"line_end":919,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"pub async fn write_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T) ->\nio::Result<R>>(&'_ mut Self, impl FnMut(&mut T) -> io::Result<R>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29703,"byte_end":29749,"line_start":896,"line_end":896,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29754,"byte_end":29757,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29762,"byte_end":29851,"line_start":898,"line_end":898,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29856,"byte_end":29943,"line_start":899,"line_end":899,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":29948,"byte_end":30039,"line_start":900,"line_end":900,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30044,"byte_end":30101,"line_start":901,"line_end":901,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30106,"byte_end":30109,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30114,"byte_end":30177,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30182,"byte_end":30185,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30190,"byte_end":30204,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30217,"byte_end":30230,"line_start":907,"line_end":907,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30235,"byte_end":30259,"line_start":908,"line_end":908,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30264,"byte_end":30292,"line_start":909,"line_end":909,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30297,"byte_end":30300,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30305,"byte_end":30349,"line_start":911,"line_end":911,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30354,"byte_end":30425,"line_start":912,"line_end":912,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30430,"byte_end":30478,"line_start":913,"line_end":913,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30483,"byte_end":30486,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30491,"byte_end":30514,"line_start":915,"line_end":915,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30519,"byte_end":30579,"line_start":916,"line_end":916,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30584,"byte_end":30617,"line_start":917,"line_end":917,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":30622,"byte_end":30629,"line_start":918,"line_end":918,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36593,"byte_end":36597,"line_start":1128,"line_end":1128,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<TcpListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36074,"byte_end":36132,"line_start":1113,"line_end":1113,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36137,"byte_end":36140,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36145,"byte_end":36219,"line_start":1115,"line_end":1115,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36224,"byte_end":36227,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36232,"byte_end":36246,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36251,"byte_end":36254,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36259,"byte_end":36266,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36271,"byte_end":36295,"line_start":1120,"line_end":1120,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36300,"byte_end":36330,"line_start":1121,"line_end":1121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36335,"byte_end":36338,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36343,"byte_end":36387,"line_start":1123,"line_end":1123,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36392,"byte_end":36460,"line_start":1124,"line_end":1124,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36465,"byte_end":36531,"line_start":1125,"line_end":1125,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36536,"byte_end":36569,"line_start":1126,"line_end":1126,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36574,"byte_end":36581,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37342,"byte_end":37348,"line_start":1150,"line_end":1150,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36752,"byte_end":36794,"line_start":1133,"line_end":1133,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36799,"byte_end":36802,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36807,"byte_end":36898,"line_start":1135,"line_end":1135,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36903,"byte_end":36922,"line_start":1136,"line_end":1136,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36927,"byte_end":36930,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36935,"byte_end":36949,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36954,"byte_end":36957,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36962,"byte_end":36975,"line_start":1140,"line_end":1140,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36980,"byte_end":37004,"line_start":1141,"line_end":1141,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37009,"byte_end":37039,"line_start":1142,"line_end":1142,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37044,"byte_end":37047,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37052,"byte_end":37096,"line_start":1144,"line_end":1144,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37101,"byte_end":37172,"line_start":1145,"line_end":1145,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37177,"byte_end":37227,"line_start":1146,"line_end":1146,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37232,"byte_end":37274,"line_start":1147,"line_end":1147,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37279,"byte_end":37312,"line_start":1148,"line_end":1148,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37317,"byte_end":37324,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38268,"byte_end":38276,"line_start":1177,"line_end":1177,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37525,"byte_end":37574,"line_start":1155,"line_end":1155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37579,"byte_end":37582,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37587,"byte_end":37651,"line_start":1157,"line_end":1157,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37656,"byte_end":37659,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37664,"byte_end":37678,"line_start":1159,"line_end":1159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37683,"byte_end":37686,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37691,"byte_end":37704,"line_start":1161,"line_end":1161,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37709,"byte_end":37733,"line_start":1162,"line_end":1162,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37738,"byte_end":37785,"line_start":1163,"line_end":1163,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37790,"byte_end":37820,"line_start":1164,"line_end":1164,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37825,"byte_end":37828,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37833,"byte_end":37877,"line_start":1166,"line_end":1166,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37882,"byte_end":37953,"line_start":1167,"line_end":1167,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":37958,"byte_end":37997,"line_start":1168,"line_end":1168,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38002,"byte_end":38021,"line_start":1169,"line_end":1169,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38026,"byte_end":38029,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38034,"byte_end":38086,"line_start":1171,"line_end":1171,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38091,"byte_end":38120,"line_start":1172,"line_end":1172,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38125,"byte_end":38196,"line_start":1173,"line_end":1173,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38201,"byte_end":38206,"line_start":1174,"line_end":1174,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38211,"byte_end":38244,"line_start":1175,"line_end":1175,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38249,"byte_end":38256,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39207,"byte_end":39214,"line_start":1207,"line_end":1207,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"pub async fn connect<A: Into<SocketAddr>>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38767,"byte_end":38821,"line_start":1194,"line_end":1194,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38826,"byte_end":38829,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38834,"byte_end":38848,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38853,"byte_end":38856,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38861,"byte_end":38868,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38873,"byte_end":38897,"line_start":1199,"line_end":1199,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38902,"byte_end":38947,"line_start":1200,"line_end":1200,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38952,"byte_end":38955,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38960,"byte_end":39004,"line_start":1202,"line_end":1202,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39009,"byte_end":39076,"line_start":1203,"line_end":1203,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39081,"byte_end":39139,"line_start":1204,"line_end":1204,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39144,"byte_end":39177,"line_start":1205,"line_end":1205,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39182,"byte_end":39189,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40637,"byte_end":40641,"line_start":1247,"line_end":1247,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39806,"byte_end":39873,"line_start":1224,"line_end":1224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39878,"byte_end":39881,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39886,"byte_end":39975,"line_start":1226,"line_end":1226,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39980,"byte_end":39983,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":39988,"byte_end":40002,"line_start":1228,"line_end":1228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40007,"byte_end":40010,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40015,"byte_end":40022,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40027,"byte_end":40051,"line_start":1231,"line_end":1231,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40056,"byte_end":40117,"line_start":1232,"line_end":1232,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40122,"byte_end":40167,"line_start":1233,"line_end":1233,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40172,"byte_end":40175,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40180,"byte_end":40224,"line_start":1235,"line_end":1235,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40229,"byte_end":40296,"line_start":1236,"line_end":1236,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40301,"byte_end":40363,"line_start":1237,"line_end":1237,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40368,"byte_end":40371,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40376,"byte_end":40386,"line_start":1239,"line_end":1239,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40391,"byte_end":40457,"line_start":1240,"line_end":1240,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40462,"byte_end":40478,"line_start":1241,"line_end":1241,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40483,"byte_end":40486,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40491,"byte_end":40521,"line_start":1243,"line_end":1243,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40526,"byte_end":40569,"line_start":1244,"line_end":1244,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40574,"byte_end":40607,"line_start":1245,"line_end":1245,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40612,"byte_end":40619,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41477,"byte_end":41481,"line_start":1276,"line_end":1276,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"pub fn bind<A: Into<SocketAddr>>(A) -> io::Result<Async<UdpSocket>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40972,"byte_end":41028,"line_start":1261,"line_end":1261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41033,"byte_end":41036,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41041,"byte_end":41115,"line_start":1263,"line_end":1263,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41120,"byte_end":41123,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41128,"byte_end":41142,"line_start":1265,"line_end":1265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41147,"byte_end":41150,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41155,"byte_end":41162,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41167,"byte_end":41191,"line_start":1268,"line_end":1268,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41196,"byte_end":41224,"line_start":1269,"line_end":1269,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41229,"byte_end":41232,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41237,"byte_end":41281,"line_start":1271,"line_end":1271,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41286,"byte_end":41350,"line_start":1272,"line_end":1272,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41355,"byte_end":41415,"line_start":1273,"line_end":1273,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41420,"byte_end":41453,"line_start":1274,"line_end":1274,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41458,"byte_end":41465,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42357,"byte_end":42366,"line_start":1301,"line_end":1301,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41632,"byte_end":41671,"line_start":1281,"line_end":1281,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41676,"byte_end":41679,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41684,"byte_end":41759,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41764,"byte_end":41767,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41772,"byte_end":41866,"line_start":1285,"line_end":1285,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41871,"byte_end":41941,"line_start":1286,"line_end":1286,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41946,"byte_end":41949,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41954,"byte_end":41968,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41973,"byte_end":41976,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41981,"byte_end":41994,"line_start":1290,"line_end":1290,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":41999,"byte_end":42023,"line_start":1291,"line_end":1291,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42028,"byte_end":42056,"line_start":1292,"line_end":1292,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42061,"byte_end":42064,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42069,"byte_end":42113,"line_start":1294,"line_end":1294,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42118,"byte_end":42185,"line_start":1295,"line_end":1295,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42190,"byte_end":42193,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42198,"byte_end":42228,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42233,"byte_end":42289,"line_start":1298,"line_end":1298,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42294,"byte_end":42327,"line_start":1299,"line_end":1299,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42332,"byte_end":42339,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43251,"byte_end":43260,"line_start":1325,"line_end":1325,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42491,"byte_end":42565,"line_start":1305,"line_end":1305,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42570,"byte_end":42573,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42578,"byte_end":42653,"line_start":1307,"line_end":1307,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42658,"byte_end":42661,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42666,"byte_end":42760,"line_start":1309,"line_end":1309,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42765,"byte_end":42835,"line_start":1310,"line_end":1310,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42840,"byte_end":42843,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42848,"byte_end":42862,"line_start":1312,"line_end":1312,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42867,"byte_end":42870,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42875,"byte_end":42888,"line_start":1314,"line_end":1314,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42893,"byte_end":42917,"line_start":1315,"line_end":1315,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42922,"byte_end":42950,"line_start":1316,"line_end":1316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42955,"byte_end":42958,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":42963,"byte_end":43007,"line_start":1318,"line_end":1318,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43012,"byte_end":43079,"line_start":1319,"line_end":1319,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43084,"byte_end":43087,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43092,"byte_end":43122,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43127,"byte_end":43183,"line_start":1322,"line_end":1322,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43188,"byte_end":43221,"line_start":1323,"line_end":1323,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43226,"byte_end":43233,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43925,"byte_end":43932,"line_start":1347,"line_end":1347,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"pub async fn send_to<A: Into<SocketAddr>, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43385,"byte_end":43425,"line_start":1329,"line_end":1329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43430,"byte_end":43433,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43438,"byte_end":43477,"line_start":1331,"line_end":1331,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43482,"byte_end":43485,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43490,"byte_end":43504,"line_start":1333,"line_end":1333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43509,"byte_end":43512,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43517,"byte_end":43530,"line_start":1335,"line_end":1335,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43535,"byte_end":43559,"line_start":1336,"line_end":1336,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43564,"byte_end":43592,"line_start":1337,"line_end":1337,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43597,"byte_end":43600,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43605,"byte_end":43649,"line_start":1339,"line_end":1339,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43654,"byte_end":43718,"line_start":1340,"line_end":1340,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43723,"byte_end":43769,"line_start":1341,"line_end":1341,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43774,"byte_end":43777,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43782,"byte_end":43805,"line_start":1343,"line_end":1343,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43810,"byte_end":43857,"line_start":1344,"line_end":1344,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43862,"byte_end":43895,"line_start":1345,"line_end":1345,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":43900,"byte_end":43907,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45024,"byte_end":45028,"line_start":1376,"line_end":1376,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44106,"byte_end":44169,"line_start":1352,"line_end":1352,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44174,"byte_end":44177,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44182,"byte_end":44219,"line_start":1354,"line_end":1354,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44224,"byte_end":44227,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44232,"byte_end":44326,"line_start":1356,"line_end":1356,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44331,"byte_end":44401,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44406,"byte_end":44409,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44414,"byte_end":44506,"line_start":1359,"line_end":1359,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44511,"byte_end":44568,"line_start":1360,"line_end":1360,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44573,"byte_end":44576,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44581,"byte_end":44595,"line_start":1362,"line_end":1362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44600,"byte_end":44603,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44608,"byte_end":44621,"line_start":1364,"line_end":1364,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44626,"byte_end":44650,"line_start":1365,"line_end":1365,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44655,"byte_end":44683,"line_start":1366,"line_end":1366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44688,"byte_end":44691,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44696,"byte_end":44740,"line_start":1368,"line_end":1368,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44745,"byte_end":44812,"line_start":1369,"line_end":1369,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44817,"byte_end":44865,"line_start":1370,"line_end":1370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44870,"byte_end":44873,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44878,"byte_end":44908,"line_start":1372,"line_end":1372,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44913,"byte_end":44956,"line_start":1373,"line_end":1373,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44961,"byte_end":44994,"line_start":1374,"line_end":1374,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":44999,"byte_end":45006,"line_start":1375,"line_end":1375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46133,"byte_end":46137,"line_start":1405,"line_end":1405,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45134,"byte_end":45225,"line_start":1380,"line_end":1380,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45230,"byte_end":45240,"line_start":1381,"line_end":1381,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45245,"byte_end":45248,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45253,"byte_end":45328,"line_start":1383,"line_end":1383,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45333,"byte_end":45336,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45341,"byte_end":45435,"line_start":1385,"line_end":1385,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45440,"byte_end":45510,"line_start":1386,"line_end":1386,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45515,"byte_end":45518,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45523,"byte_end":45615,"line_start":1388,"line_end":1388,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45620,"byte_end":45677,"line_start":1389,"line_end":1389,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45682,"byte_end":45685,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45690,"byte_end":45704,"line_start":1391,"line_end":1391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45709,"byte_end":45712,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45717,"byte_end":45730,"line_start":1393,"line_end":1393,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45735,"byte_end":45759,"line_start":1394,"line_end":1394,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45764,"byte_end":45792,"line_start":1395,"line_end":1395,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45797,"byte_end":45800,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45805,"byte_end":45849,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45854,"byte_end":45921,"line_start":1398,"line_end":1398,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45926,"byte_end":45974,"line_start":1399,"line_end":1399,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45979,"byte_end":45982,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":45987,"byte_end":46017,"line_start":1401,"line_end":1401,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46022,"byte_end":46065,"line_start":1402,"line_end":1402,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46070,"byte_end":46103,"line_start":1403,"line_end":1403,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46108,"byte_end":46115,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46944,"byte_end":46948,"line_start":1430,"line_end":1430,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46243,"byte_end":46280,"line_start":1409,"line_end":1409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46285,"byte_end":46288,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46293,"byte_end":46333,"line_start":1411,"line_end":1411,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46338,"byte_end":46341,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46346,"byte_end":46438,"line_start":1413,"line_end":1413,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46443,"byte_end":46500,"line_start":1414,"line_end":1414,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46505,"byte_end":46508,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46513,"byte_end":46527,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46532,"byte_end":46535,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46540,"byte_end":46553,"line_start":1418,"line_end":1418,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46558,"byte_end":46582,"line_start":1419,"line_end":1419,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46587,"byte_end":46615,"line_start":1420,"line_end":1420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46620,"byte_end":46623,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46628,"byte_end":46672,"line_start":1422,"line_end":1422,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46677,"byte_end":46744,"line_start":1423,"line_end":1423,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46749,"byte_end":46797,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46802,"byte_end":46805,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46810,"byte_end":46833,"line_start":1426,"line_end":1426,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46838,"byte_end":46876,"line_start":1427,"line_end":1427,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46881,"byte_end":46914,"line_start":1428,"line_end":1428,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":46919,"byte_end":46926,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47735,"byte_end":47739,"line_start":1458,"line_end":1458,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixListener>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixListener>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS listener bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS listener bound to the specified path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47292,"byte_end":47347,"line_start":1445,"line_end":1445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47352,"byte_end":47355,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47360,"byte_end":47374,"line_start":1447,"line_end":1447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47379,"byte_end":47382,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47387,"byte_end":47400,"line_start":1449,"line_end":1449,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47405,"byte_end":47429,"line_start":1450,"line_end":1450,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47434,"byte_end":47475,"line_start":1451,"line_end":1451,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47480,"byte_end":47483,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47488,"byte_end":47532,"line_start":1453,"line_end":1453,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47537,"byte_end":47600,"line_start":1454,"line_end":1454,"column_start":5,"column_end":68}},{"value":"/ println!(\"Listening on {:?}\", listener.get_ref().local_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47605,"byte_end":47673,"line_start":1455,"line_end":1455,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47678,"byte_end":47711,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47716,"byte_end":47723,"line_start":1457,"line_end":1457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48502,"byte_end":48508,"line_start":1480,"line_end":1480,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<UnixListener>>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming UDS stream connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming UDS stream connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47904,"byte_end":47953,"line_start":1463,"line_end":1463,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47958,"byte_end":47961,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a stream together with its remote","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47966,"byte_end":48060,"line_start":1465,"line_end":1465,"column_start":5,"column_end":99}},{"value":"/ address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48065,"byte_end":48077,"line_start":1466,"line_end":1466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48082,"byte_end":48085,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48090,"byte_end":48104,"line_start":1468,"line_end":1468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48109,"byte_end":48112,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48117,"byte_end":48130,"line_start":1470,"line_end":1470,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48135,"byte_end":48159,"line_start":1471,"line_end":1471,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48164,"byte_end":48205,"line_start":1472,"line_end":1472,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48210,"byte_end":48213,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48218,"byte_end":48262,"line_start":1474,"line_end":1474,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48267,"byte_end":48330,"line_start":1475,"line_end":1475,"column_start":5,"column_end":68}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48335,"byte_end":48385,"line_start":1476,"line_end":1476,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {:?}\", addr);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48390,"byte_end":48434,"line_start":1477,"line_end":1477,"column_start":5,"column_end":49}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48439,"byte_end":48472,"line_start":1478,"line_end":1478,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48477,"byte_end":48484,"line_start":1479,"line_end":1479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49443,"byte_end":49451,"line_start":1507,"line_end":1507,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<UnixListener>>::incoming","value":"pub fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming UDS connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming UDS connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48690,"byte_end":48739,"line_start":1485,"line_end":1485,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48744,"byte_end":48747,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`] item.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48752,"byte_end":48821,"line_start":1487,"line_end":1487,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48826,"byte_end":48829,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48834,"byte_end":48848,"line_start":1489,"line_end":1489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48853,"byte_end":48856,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48861,"byte_end":48874,"line_start":1491,"line_end":1491,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48879,"byte_end":48903,"line_start":1492,"line_end":1492,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48908,"byte_end":48955,"line_start":1493,"line_end":1493,"column_start":5,"column_end":52}},{"value":"/ use std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":48960,"byte_end":49001,"line_start":1494,"line_end":1494,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49006,"byte_end":49009,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49014,"byte_end":49058,"line_start":1496,"line_end":1496,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<UnixListener>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49063,"byte_end":49126,"line_start":1497,"line_end":1497,"column_start":5,"column_end":68}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49131,"byte_end":49170,"line_start":1498,"line_end":1498,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49175,"byte_end":49194,"line_start":1499,"line_end":1499,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49199,"byte_end":49202,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49207,"byte_end":49259,"line_start":1501,"line_end":1501,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49264,"byte_end":49293,"line_start":1502,"line_end":1502,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {:?}\", stream.get_ref().peer_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49298,"byte_end":49371,"line_start":1503,"line_end":1503,"column_start":5,"column_end":78}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49376,"byte_end":49381,"line_start":1504,"line_end":1504,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49386,"byte_end":49419,"line_start":1505,"line_end":1505,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49424,"byte_end":49431,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50384,"byte_end":50391,"line_start":1538,"line_end":1538,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<UnixStream>>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS stream connected to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS stream connected to the specified path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50003,"byte_end":50060,"line_start":1526,"line_end":1526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50065,"byte_end":50068,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50073,"byte_end":50087,"line_start":1528,"line_end":1528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50092,"byte_end":50095,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50100,"byte_end":50113,"line_start":1530,"line_end":1530,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50118,"byte_end":50142,"line_start":1531,"line_end":1531,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50147,"byte_end":50186,"line_start":1532,"line_end":1532,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50191,"byte_end":50194,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50199,"byte_end":50243,"line_start":1534,"line_end":1534,"column_start":5,"column_end":49}},{"value":"/ let stream = Async::<UnixStream>::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50248,"byte_end":50316,"line_start":1535,"line_end":1535,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50321,"byte_end":50354,"line_start":1536,"line_end":1536,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50359,"byte_end":50366,"line_start":1537,"line_end":1537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51326,"byte_end":51330,"line_start":1564,"line_end":1564,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixStream>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixStream>, Async<UnixStream>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected UDS stream sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected UDS stream sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":50958,"byte_end":51018,"line_start":1552,"line_end":1552,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51023,"byte_end":51026,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51031,"byte_end":51045,"line_start":1554,"line_end":1554,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51050,"byte_end":51053,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51058,"byte_end":51071,"line_start":1556,"line_end":1556,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51076,"byte_end":51100,"line_start":1557,"line_end":1557,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51105,"byte_end":51144,"line_start":1558,"line_end":1558,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51149,"byte_end":51152,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51157,"byte_end":51201,"line_start":1560,"line_end":1560,"column_start":5,"column_end":49}},{"value":"/ let (stream1, stream2) = Async::<UnixStream>::pair()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51206,"byte_end":51264,"line_start":1561,"line_end":1561,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51269,"byte_end":51302,"line_start":1562,"line_end":1562,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51307,"byte_end":51314,"line_start":1563,"line_end":1563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52173,"byte_end":52177,"line_start":1593,"line_end":1593,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UnixDatagram>>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket bound to the specified path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51798,"byte_end":51860,"line_start":1581,"line_end":1581,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51865,"byte_end":51868,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51873,"byte_end":51887,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51892,"byte_end":51895,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51900,"byte_end":51913,"line_start":1585,"line_end":1585,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51918,"byte_end":51942,"line_start":1586,"line_end":1586,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51947,"byte_end":51988,"line_start":1587,"line_end":1587,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51993,"byte_end":51996,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52001,"byte_end":52045,"line_start":1589,"line_end":1589,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52050,"byte_end":52111,"line_start":1590,"line_end":1590,"column_start":5,"column_end":66}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52116,"byte_end":52149,"line_start":1591,"line_end":1591,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52154,"byte_end":52161,"line_start":1592,"line_end":1592,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52704,"byte_end":52711,"line_start":1610,"line_end":1610,"column_start":12,"column_end":19},"name":"unbound","qualname":"<Async<UnixDatagram>>::unbound","value":"pub fn unbound() -> io::Result<Async<UnixDatagram>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDS datagram socket not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a UDS datagram socket not bound to any address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52342,"byte_end":52401,"line_start":1598,"line_end":1598,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52406,"byte_end":52409,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52414,"byte_end":52428,"line_start":1600,"line_end":1600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52433,"byte_end":52436,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52441,"byte_end":52454,"line_start":1602,"line_end":1602,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52459,"byte_end":52483,"line_start":1603,"line_end":1603,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52488,"byte_end":52529,"line_start":1604,"line_end":1604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52534,"byte_end":52537,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52542,"byte_end":52586,"line_start":1606,"line_end":1606,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52591,"byte_end":52642,"line_start":1607,"line_end":1607,"column_start":5,"column_end":56}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52647,"byte_end":52680,"line_start":1608,"line_end":1608,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52685,"byte_end":52692,"line_start":1609,"line_end":1609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53182,"byte_end":53186,"line_start":1626,"line_end":1626,"column_start":12,"column_end":16},"name":"pair","qualname":"<Async<UnixDatagram>>::pair","value":"pub fn pair() -> io::Result<(Async<UnixDatagram>, Async<UnixDatagram>)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected Unix datagram sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected Unix datagram sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52807,"byte_end":52870,"line_start":1614,"line_end":1614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52875,"byte_end":52878,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52883,"byte_end":52897,"line_start":1616,"line_end":1616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52902,"byte_end":52905,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52910,"byte_end":52923,"line_start":1618,"line_end":1618,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52928,"byte_end":52952,"line_start":1619,"line_end":1619,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":52957,"byte_end":52998,"line_start":1620,"line_end":1620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53003,"byte_end":53006,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53011,"byte_end":53055,"line_start":1622,"line_end":1622,"column_start":5,"column_end":49}},{"value":"/ let (socket1, socket2) = Async::<UnixDatagram>::pair()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53060,"byte_end":53120,"line_start":1623,"line_end":1623,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53125,"byte_end":53158,"line_start":1624,"line_end":1624,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53163,"byte_end":53170,"line_start":1625,"line_end":1625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53918,"byte_end":53927,"line_start":1648,"line_end":1648,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UnixDatagram>>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53373,"byte_end":53407,"line_start":1631,"line_end":1631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53412,"byte_end":53415,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53420,"byte_end":53495,"line_start":1633,"line_end":1633,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53500,"byte_end":53503,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53508,"byte_end":53522,"line_start":1635,"line_end":1635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53527,"byte_end":53530,"line_start":1636,"line_end":1636,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53535,"byte_end":53548,"line_start":1637,"line_end":1637,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53553,"byte_end":53577,"line_start":1638,"line_end":1638,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53582,"byte_end":53623,"line_start":1639,"line_end":1639,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53628,"byte_end":53631,"line_start":1640,"line_end":1640,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53636,"byte_end":53680,"line_start":1641,"line_end":1641,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53685,"byte_end":53746,"line_start":1642,"line_end":1642,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53751,"byte_end":53754,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53759,"byte_end":53789,"line_start":1644,"line_end":1644,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53794,"byte_end":53850,"line_start":1645,"line_end":1645,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53855,"byte_end":53888,"line_start":1646,"line_end":1646,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":53893,"byte_end":53900,"line_start":1647,"line_end":1647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54580,"byte_end":54587,"line_start":1670,"line_end":1670,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UnixDatagram>>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54056,"byte_end":54096,"line_start":1652,"line_end":1652,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54101,"byte_end":54104,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54109,"byte_end":54149,"line_start":1654,"line_end":1654,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54154,"byte_end":54157,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54162,"byte_end":54176,"line_start":1656,"line_end":1656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54181,"byte_end":54184,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54189,"byte_end":54202,"line_start":1658,"line_end":1658,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54207,"byte_end":54231,"line_start":1659,"line_end":1659,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54236,"byte_end":54277,"line_start":1660,"line_end":1660,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54282,"byte_end":54285,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54290,"byte_end":54334,"line_start":1662,"line_end":1662,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54339,"byte_end":54390,"line_start":1663,"line_end":1663,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54395,"byte_end":54398,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54403,"byte_end":54426,"line_start":1665,"line_end":1665,"column_start":5,"column_end":28}},{"value":"/ let addr = \"/tmp/socket\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54431,"byte_end":54460,"line_start":1666,"line_end":1666,"column_start":5,"column_end":34}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54465,"byte_end":54512,"line_start":1667,"line_end":1667,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54517,"byte_end":54550,"line_start":1668,"line_end":1668,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54555,"byte_end":54562,"line_start":1669,"line_end":1669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55487,"byte_end":55491,"line_start":1695,"line_end":1695,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UnixDatagram>>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the connected peer.","sig":null,"attributes":[{"value":"/ Receives data from the connected peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54725,"byte_end":54767,"line_start":1674,"line_end":1674,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54772,"byte_end":54775,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54780,"byte_end":54855,"line_start":1676,"line_end":1676,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54860,"byte_end":54863,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54868,"byte_end":54963,"line_start":1678,"line_end":1678,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":54968,"byte_end":55025,"line_start":1679,"line_end":1679,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55030,"byte_end":55033,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55038,"byte_end":55052,"line_start":1681,"line_end":1681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55057,"byte_end":55060,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55065,"byte_end":55078,"line_start":1683,"line_end":1683,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55083,"byte_end":55107,"line_start":1684,"line_end":1684,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55112,"byte_end":55153,"line_start":1685,"line_end":1685,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55158,"byte_end":55161,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55166,"byte_end":55210,"line_start":1687,"line_end":1687,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55215,"byte_end":55277,"line_start":1688,"line_end":1688,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55282,"byte_end":55328,"line_start":1689,"line_end":1689,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55333,"byte_end":55336,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55341,"byte_end":55371,"line_start":1691,"line_end":1691,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55376,"byte_end":55419,"line_start":1692,"line_end":1692,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55424,"byte_end":55457,"line_start":1693,"line_end":1693,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55462,"byte_end":55469,"line_start":1694,"line_end":1694,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56307,"byte_end":56311,"line_start":1720,"line_end":1720,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UnixDatagram>>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55597,"byte_end":55634,"line_start":1699,"line_end":1699,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55639,"byte_end":55642,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55647,"byte_end":55687,"line_start":1701,"line_end":1701,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55692,"byte_end":55695,"line_start":1702,"line_end":1702,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UnixDatagram::connect()`] method connects this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55700,"byte_end":55795,"line_start":1703,"line_end":1703,"column_start":5,"column_end":100}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55800,"byte_end":55857,"line_start":1704,"line_end":1704,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55862,"byte_end":55865,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55870,"byte_end":55884,"line_start":1706,"line_end":1706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55889,"byte_end":55892,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55897,"byte_end":55910,"line_start":1708,"line_end":1708,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55915,"byte_end":55939,"line_start":1709,"line_end":1709,"column_start":5,"column_end":29}},{"value":"/ use std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55944,"byte_end":55985,"line_start":1710,"line_end":1710,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55990,"byte_end":55993,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":55998,"byte_end":56042,"line_start":1712,"line_end":1712,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UnixDatagram>::bind(\"/tmp/socket1\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56047,"byte_end":56109,"line_start":1713,"line_end":1713,"column_start":5,"column_end":67}},{"value":"/ socket.get_ref().connect(\"/tmp/socket2\")?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56114,"byte_end":56160,"line_start":1714,"line_end":1714,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56165,"byte_end":56168,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56173,"byte_end":56196,"line_start":1716,"line_end":1716,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56201,"byte_end":56239,"line_start":1717,"line_end":1717,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56244,"byte_end":56277,"line_start":1718,"line_end":1718,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56282,"byte_end":56289,"line_start":1719,"line_end":1719,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":66333,"byte_end":66343,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":68625,"byte_end":68632,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":74520,"byte_end":74531,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":78993,"byte_end":79002,"line_start":376,"line_end":376,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":79532,"byte_end":79538,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":82804,"byte_end":82812,"line_start":487,"line_end":487,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83116,"byte_end":83124,"line_start":497,"line_end":497,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83471,"byte_end":83484,"line_start":507,"line_end":507,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83790,"byte_end":83803,"line_start":517,"line_end":517,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84137,"byte_end":84145,"line_start":527,"line_end":527,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84449,"byte_end":84457,"line_start":537,"line_end":537,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84804,"byte_end":84817,"line_start":547,"line_end":547,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85123,"byte_end":85136,"line_start":557,"line_end":557,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85490,"byte_end":85495,"line_start":571,"line_end":571,"column_start":47,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85561,"byte_end":85566,"line_start":573,"line_end":573,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":87605,"byte_end":87617,"line_start":641,"line_end":641,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4425,"byte_end":4430,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":10495,"byte_end":10500,"line_start":338,"line_end":338,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":10731,"byte_end":10736,"line_start":347,"line_end":347,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":11068,"byte_end":11073,"line_start":359,"line_end":359,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16611,"byte_end":16616,"line_start":499,"line_end":499,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16654,"byte_end":16659,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":18158,"byte_end":18163,"line_start":549,"line_end":549,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20006,"byte_end":20011,"line_start":614,"line_end":614,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":483},{"krate":0,"index":488},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31049,"byte_end":31054,"line_start":934,"line_end":934,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31142,"byte_end":31147,"line_start":940,"line_end":940,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31239,"byte_end":31244,"line_start":946,"line_end":946,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31569,"byte_end":31574,"line_start":958,"line_end":958,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":33353,"byte_end":33358,"line_start":1021,"line_end":1021,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36049,"byte_end":36054,"line_start":1112,"line_end":1112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38570,"byte_end":38575,"line_start":1185,"line_end":1185,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38744,"byte_end":38749,"line_start":1193,"line_end":1193,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40783,"byte_end":40788,"line_start":1252,"line_end":1252,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40949,"byte_end":40954,"line_start":1260,"line_end":1260,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47087,"byte_end":47092,"line_start":1435,"line_end":1435,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47266,"byte_end":47271,"line_start":1444,"line_end":1444,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49770,"byte_end":49775,"line_start":1516,"line_end":1516,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49979,"byte_end":49984,"line_start":1525,"line_end":1525,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51571,"byte_end":51576,"line_start":1571,"line_end":1571,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51772,"byte_end":51777,"line_start":1580,"line_end":1580,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":620},{"krate":0,"index":625},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56476,"byte_end":56481,"line_start":1726,"line_end":1726,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/driver.rs","byte_start":66333,"byte_end":66343,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":68625,"byte_end":68632,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":74520,"byte_end":74531,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":78993,"byte_end":79002,"line_start":376,"line_end":376,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":79532,"byte_end":79538,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":82804,"byte_end":82812,"line_start":487,"line_end":487,"column_start":20,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83116,"byte_end":83124,"line_start":497,"line_end":497,"column_start":24,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83471,"byte_end":83484,"line_start":507,"line_end":507,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":83790,"byte_end":83803,"line_start":517,"line_end":517,"column_start":24,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84137,"byte_end":84145,"line_start":527,"line_end":527,"column_start":20,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84449,"byte_end":84457,"line_start":537,"line_end":537,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":84804,"byte_end":84817,"line_start":547,"line_end":547,"column_start":20,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85123,"byte_end":85136,"line_start":557,"line_end":557,"column_start":24,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85490,"byte_end":85495,"line_start":571,"line_end":571,"column_start":47,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":85561,"byte_end":85566,"line_start":573,"line_end":573,"column_start":56,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/reactor.rs","byte_start":87605,"byte_end":87617,"line_start":641,"line_end":641,"column_start":46,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":4425,"byte_end":4430,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":10495,"byte_end":10500,"line_start":338,"line_end":338,"column_start":15,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":10731,"byte_end":10736,"line_start":347,"line_end":347,"column_start":17,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":11068,"byte_end":11073,"line_start":359,"line_end":359,"column_start":17,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":663},"to":{"krate":24,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16611,"byte_end":16616,"line_start":499,"line_end":499,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":16654,"byte_end":16659,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":18158,"byte_end":18163,"line_start":549,"line_end":549,"column_start":30,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":669},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":20006,"byte_end":20011,"line_start":614,"line_end":614,"column_start":9,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31049,"byte_end":31054,"line_start":934,"line_end":934,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31142,"byte_end":31147,"line_start":940,"line_end":940,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2957}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31239,"byte_end":31244,"line_start":946,"line_end":946,"column_start":18,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":31569,"byte_end":31574,"line_start":958,"line_end":958,"column_start":29,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":669},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":33353,"byte_end":33358,"line_start":1021,"line_end":1021,"column_start":31,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":669},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":36049,"byte_end":36054,"line_start":1112,"line_end":1112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38570,"byte_end":38575,"line_start":1185,"line_end":1185,"column_start":41,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":38744,"byte_end":38749,"line_start":1193,"line_end":1193,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40783,"byte_end":40788,"line_start":1252,"line_end":1252,"column_start":39,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":40949,"byte_end":40954,"line_start":1260,"line_end":1260,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47087,"byte_end":47092,"line_start":1435,"line_end":1435,"column_start":39,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":47266,"byte_end":47271,"line_start":1444,"line_end":1444,"column_start":6,"column_end":11},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49770,"byte_end":49775,"line_start":1516,"line_end":1516,"column_start":52,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":49979,"byte_end":49984,"line_start":1525,"line_end":1525,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51571,"byte_end":51576,"line_start":1571,"line_end":1571,"column_start":50,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":51772,"byte_end":51777,"line_start":1580,"line_end":1580,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-io-1.7.0/src/lib.rs","byte_start":56476,"byte_end":56481,"line_start":1726,"line_end":1726,"column_start":52,"column_end":57},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":669},"to":{"krate":2,"index":2970}}]}