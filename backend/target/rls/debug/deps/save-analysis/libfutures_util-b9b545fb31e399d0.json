{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21","program":"/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=b9b545fb31e399d0","-C","extra-filename=-b9b545fb31e399d0","--out-dir","/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","-L","dependency=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","--extern","futures_core=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_core-f1562aab75d97baf.rmeta","--extern","futures_macro=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_macro-4ac6179af4a5648c.so","--extern","futures_sink=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_sink-0363b36aa31462a3.rmeta","--extern","futures_task=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_task-97a31ad3cb0d9bcf.rmeta","--extern","pin_project_lite=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libpin_project_lite-567c09aa5c2806c0.rmeta","--extern","pin_utils=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libpin_utils-7b37542bd86a85d7.rmeta","--extern","slab=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libslab-de332a61ef2f015a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_util-b9b545fb31e399d0.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[13572936267252077556,0]},"crate_root":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src","external_crates":[{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[15444505974485443805,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[3528726876228452287,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/join_mod.rs","num":22,"id":{"name":"futures_macro","disambiguator":[1289712658938494524,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","num":23,"id":{"name":"futures_task","disambiguator":[2831683866600436027,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","num":24,"id":{"name":"futures_sink","disambiguator":[3144669532223334746,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[13303723133118847327,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","num":26,"id":{"name":"slab","disambiguator":[17606039980974335472,0]}}],"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":11913,"byte_end":11914,"line_start":12,"line_end":12,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12042,"byte_end":12043,"line_start":17,"line_end":17,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/join_mod.rs","byte_start":18637,"byte_end":18650,"line_start":84,"line_end":84,"column_start":24,"column_end":37},"alias_span":null,"name":"join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":22,"index":171},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/join_mod.rs","byte_start":18717,"byte_end":18734,"line_start":88,"line_end":88,"column_start":24,"column_end":41},"alias_span":null,"name":"try_join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12265,"byte_end":12266,"line_start":24,"line_end":24,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":172},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/select_mod.rs","byte_start":31999,"byte_end":32014,"line_start":309,"line_end":309,"column_start":24,"column_end":39},"alias_span":null,"name":"select_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":22,"index":173},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/select_mod.rs","byte_start":32081,"byte_end":32103,"line_start":313,"line_end":313,"column_start":24,"column_end":46},"alias_span":null,"name":"select_biased_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12492,"byte_end":12493,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":175},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/stream_select_mod.rs","byte_start":32759,"byte_end":32781,"line_start":6,"line_end":6,"column_start":24,"column_end":46},"alias_span":null,"name":"stream_select_internal","value":"","parent":{"krate":0,"index":93}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12733,"byte_end":12734,"line_start":38,"line_end":38,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12971,"byte_end":12972,"line_start":46,"line_end":46,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1033,"byte_end":1034,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1142,"byte_end":1143,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46286},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1181,"byte_end":1187,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46288},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46290},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46291},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46405},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":46,"line_end":46,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46419},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46420},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46416},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":46417},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1332,"byte_end":1333,"line_start":51,"line_end":51,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35783,"byte_end":35789,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35849,"byte_end":35858,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35860,"byte_end":35874,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35908,"byte_end":35919,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35921,"byte_end":35930,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35956,"byte_end":35965,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35967,"byte_end":35981,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35983,"byte_end":35998,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8510},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":40072,"byte_end":40076,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":9106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":41796,"byte_end":41807,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42324,"byte_end":42330,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42332,"byte_end":42342,"line_start":117,"line_end":117,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":193}},{"kind":"Use","ref_id":{"krate":0,"index":8601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36113,"byte_end":36120,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8510},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36122,"byte_end":36126,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36128,"byte_end":36137,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8952},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36139,"byte_end":36146,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8767},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36148,"byte_end":36158,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8707},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36160,"byte_end":36163,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8817},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36165,"byte_end":36172,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36174,"byte_end":36184,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8879},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36186,"byte_end":36190,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9060},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36192,"byte_end":36201,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":8649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36297,"byte_end":36310,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36359,"byte_end":36370,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36570,"byte_end":36576,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36578,"byte_end":36588,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9142},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":83371,"byte_end":83381,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":668}},{"kind":"Use","ref_id":{"krate":0,"index":9526},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36640,"byte_end":36647,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9673},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36649,"byte_end":36656,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9856},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36658,"byte_end":36668,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36670,"byte_end":36679,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9142},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36681,"byte_end":36691,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9978},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36693,"byte_end":36699,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36701,"byte_end":36706,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10040},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36708,"byte_end":36719,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9734},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36721,"byte_end":36727,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9600},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36733,"byte_end":36739,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9275},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36741,"byte_end":36751,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9396},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36753,"byte_end":36769,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36771,"byte_end":36783,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10113},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36785,"byte_end":36797,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":9454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36902,"byte_end":36913,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36969,"byte_end":36973,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10171},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":36975,"byte_end":36979,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37020,"byte_end":37027,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10177},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37029,"byte_end":37036,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37083,"byte_end":37093,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10183},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37095,"byte_end":37104,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37159,"byte_end":37173,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10196},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37175,"byte_end":37187,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10209},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37225,"byte_end":37237,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37277,"byte_end":37284,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1212},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37286,"byte_end":37292,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37347,"byte_end":37361,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37363,"byte_end":37376,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37413,"byte_end":37416,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37418,"byte_end":37420,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37422,"byte_end":37427,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10287},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37429,"byte_end":37434,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37469,"byte_end":37473,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37475,"byte_end":37480,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1381},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37482,"byte_end":37487,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37489,"byte_end":37494,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10389},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37496,"byte_end":37500,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10434},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37502,"byte_end":37507,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10491},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37509,"byte_end":37514,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10560},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37516,"byte_end":37521,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37616,"byte_end":37624,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1467},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37626,"byte_end":37633,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37672,"byte_end":37678,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10641},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37680,"byte_end":37686,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37785,"byte_end":37795,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37797,"byte_end":37806,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37854,"byte_end":37862,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37864,"byte_end":37873,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37875,"byte_end":37884,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37886,"byte_end":37895,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10725},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37897,"byte_end":37904,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10770},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37906,"byte_end":37914,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10827},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37916,"byte_end":37924,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10896},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":37926,"byte_end":37934,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1736},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38039,"byte_end":38051,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1730},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38053,"byte_end":38063,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38110,"byte_end":38120,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38122,"byte_end":38131,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38228,"byte_end":38237,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10985},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38239,"byte_end":38247,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":10991},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38285,"byte_end":38291,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38458,"byte_end":38469,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15918},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38471,"byte_end":38488,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15875},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38490,"byte_end":38499,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15933},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":15934},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":38591,"byte_end":38600,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":165}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171022,"byte_end":171031,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171033,"byte_end":171047,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171081,"byte_end":171092,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171094,"byte_end":171100,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171102,"byte_end":171111,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11008},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175417,"byte_end":175422,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11057},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175537,"byte_end":175544,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175655,"byte_end":175660,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175773,"byte_end":175779,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11245},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176006,"byte_end":176011,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11285},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176130,"byte_end":176139,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11333},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176252,"byte_end":176258,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11402},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176379,"byte_end":176388,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11587},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176776,"byte_end":176780,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11901},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177494,"byte_end":177501,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11958},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177610,"byte_end":177614,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12006},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177737,"byte_end":177749,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12090},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178112,"byte_end":178115,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12236},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178498,"byte_end":178502,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12244},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178635,"byte_end":178649,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12382},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178759,"byte_end":178765,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12431},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178767,"byte_end":178775,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12300},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178777,"byte_end":178781,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178783,"byte_end":178790,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178792,"byte_end":178800,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12480},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178910,"byte_end":178914,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12528},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179035,"byte_end":179044,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179153,"byte_end":179157,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179278,"byte_end":179287,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12722},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179408,"byte_end":179417,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12783},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179526,"byte_end":179530,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12848},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179637,"byte_end":179640,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179805,"byte_end":179811,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":12957},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179988,"byte_end":179999,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13009},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180108,"byte_end":180112,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13082},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180367,"byte_end":180382,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13131},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180621,"byte_end":180629,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13377},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181571,"byte_end":181588,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":4210},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181968,"byte_end":181980,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":4211},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181968,"byte_end":181980,"line_start":237,"line_end":237,"column_start":23,"column_end":35},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13445},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181982,"byte_end":181991,"line_start":237,"line_end":237,"column_start":37,"column_end":46},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13438},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181993,"byte_end":182004,"line_start":237,"line_end":237,"column_start":48,"column_end":59},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":13454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182178,"byte_end":182189,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1995}},{"kind":"Use","ref_id":{"krate":0,"index":11008},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171227,"byte_end":171232,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11057},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171234,"byte_end":171241,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171243,"byte_end":171249,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11245},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171251,"byte_end":171256,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11285},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171258,"byte_end":171267,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11333},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171269,"byte_end":171275,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11402},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171277,"byte_end":171286,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12147},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171288,"byte_end":171295,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11526},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171297,"byte_end":171304,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11587},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171306,"byte_end":171310,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11901},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171312,"byte_end":171319,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11958},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171325,"byte_end":171329,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12015},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171331,"byte_end":171338,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12090},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171340,"byte_end":171343,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12236},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171345,"byte_end":171349,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12382},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171351,"byte_end":171357,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12431},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171359,"byte_end":171367,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12300},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171369,"byte_end":171373,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171375,"byte_end":171382,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171384,"byte_end":171392,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13009},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171394,"byte_end":171398,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12244},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171400,"byte_end":171414,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12480},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171420,"byte_end":171424,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12528},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171426,"byte_end":171435,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171437,"byte_end":171446,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12006},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171448,"byte_end":171460,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171462,"byte_end":171466,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12722},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171468,"byte_end":171477,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171479,"byte_end":171488,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12783},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171490,"byte_end":171494,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171496,"byte_end":171501,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12848},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171503,"byte_end":171506,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171558,"byte_end":171569,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171620,"byte_end":171626,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":12957},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171677,"byte_end":171688,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":11843},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171786,"byte_end":171793,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13082},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171880,"byte_end":171895,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13131},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171897,"byte_end":171905,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13377},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":171907,"byte_end":171924,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4210},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172085,"byte_end":172097,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":4211},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172085,"byte_end":172097,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13445},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172099,"byte_end":172108,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13438},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172110,"byte_end":172121,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13498},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353319,"byte_end":353326,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":13797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354321,"byte_end":354331,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":13997},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355011,"byte_end":355017,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14062},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355134,"byte_end":355141,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14070},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355266,"byte_end":355276,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355397,"byte_end":355406,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14196},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355535,"byte_end":355547,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14261},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355670,"byte_end":355680,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14309},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355803,"byte_end":355813,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14358},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355934,"byte_end":355943,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14398},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356117,"byte_end":356126,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14450},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356128,"byte_end":356142,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14451},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356128,"byte_end":356142,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14471},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356260,"byte_end":356267,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":5297},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356389,"byte_end":356399,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14540},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356401,"byte_end":356410,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14597},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356540,"byte_end":356552,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14670},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356681,"byte_end":356693,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14743},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356956,"byte_end":356974,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357221,"byte_end":357232,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":14847},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357501,"byte_end":357521,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":4515}},{"kind":"Use","ref_id":{"krate":0,"index":5297},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172173,"byte_end":172183,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13498},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172185,"byte_end":172192,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13566},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172194,"byte_end":172201,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13722},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172203,"byte_end":172213,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13644},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172215,"byte_end":172224,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172226,"byte_end":172236,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172238,"byte_end":172244,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13844},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172246,"byte_end":172251,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":13997},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172253,"byte_end":172259,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14309},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172265,"byte_end":172275,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14358},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172277,"byte_end":172286,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172288,"byte_end":172297,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14196},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172299,"byte_end":172311,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14261},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172313,"byte_end":172323,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14471},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172325,"byte_end":172332,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14070},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172334,"byte_end":172344,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14062},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172346,"byte_end":172353,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14597},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172359,"byte_end":172371,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5648},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172373,"byte_end":172385,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14670},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172387,"byte_end":172399,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14540},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172401,"byte_end":172410,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14743},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172639,"byte_end":172657,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172659,"byte_end":172670,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14847},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172672,"byte_end":172692,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14398},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172749,"byte_end":172758,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14450},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172760,"byte_end":172774,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14451},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172760,"byte_end":172774,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5801},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172831,"byte_end":172835,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14908},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172837,"byte_end":172841,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5836},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172880,"byte_end":172886,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172888,"byte_end":172894,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5889},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172943,"byte_end":172954,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14926},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":172956,"byte_end":172966,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5923},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173003,"byte_end":173008,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14935},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173010,"byte_end":173015,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":5975},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173050,"byte_end":173054,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14941},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173056,"byte_end":173060,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6019},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173101,"byte_end":173108,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173110,"byte_end":173117,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6069},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173158,"byte_end":173165,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6061},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173167,"byte_end":173173,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6110},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173228,"byte_end":173242,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":14983},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173244,"byte_end":173257,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6153},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173296,"byte_end":173302,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15022},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173304,"byte_end":173310,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6219},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173377,"byte_end":173397,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15067},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173399,"byte_end":173407,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15086},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173409,"byte_end":173427,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6301},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173466,"byte_end":173472,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15155},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173474,"byte_end":173480,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6401},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173658,"byte_end":173672,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15287},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475534,"byte_end":475542,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15278},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475544,"byte_end":475548,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15279},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475544,"byte_end":475548,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15258},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475550,"byte_end":475557,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15259},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475550,"byte_end":475557,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475559,"byte_end":475569,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":15267},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475571,"byte_end":475581,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6441}},{"kind":"Use","ref_id":{"krate":0,"index":6759},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173872,"byte_end":173888,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6919},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174075,"byte_end":174085,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15294},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174087,"byte_end":174096,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174264,"byte_end":174275,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15918},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174277,"byte_end":174294,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15875},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174296,"byte_end":174305,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15933},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174307,"byte_end":174314,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":15934},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174307,"byte_end":174314,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":0,"index":6990},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":174397,"byte_end":174406,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1977}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5648},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524246,"byte_end":524250,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524285,"byte_end":524290,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":7114},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524326,"byte_end":524331,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15363},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524333,"byte_end":524338,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15369},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524376,"byte_end":524382,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15414},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524415,"byte_end":524419,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15425},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524454,"byte_end":524459,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15436},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524500,"byte_end":524511,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15500},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524550,"byte_end":524560,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15559},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524593,"byte_end":524597,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":7434},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524638,"byte_end":524645,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":7496},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524683,"byte_end":524689,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15569},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524691,"byte_end":524697,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15627},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524731,"byte_end":524735,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15710},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524786,"byte_end":524797,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":0,"index":15797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524886,"byte_end":524892,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":7024}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10975,"byte_end":10979,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7739},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10981,"byte_end":10988,"line_start":307,"line_end":307,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13393},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564283,"byte_end":564290,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":2,"index":49135},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564292,"byte_end":564296,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":2,"index":49171},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564298,"byte_end":564306,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":2,"index":49180},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564308,"byte_end":564322,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":2,"index":13403},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564324,"byte_end":564329,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564356,"byte_end":564365,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564367,"byte_end":564381,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":18},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564383,"byte_end":564393,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":15},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564395,"byte_end":564400,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":21},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564402,"byte_end":564412,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564414,"byte_end":564429,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":378},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564455,"byte_end":564465,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":379},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564489,"byte_end":564503,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":94},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564589,"byte_end":564596,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":122},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564682,"byte_end":564687,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":170},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564774,"byte_end":564783,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":23,"index":407},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564785,"byte_end":564793,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564872,"byte_end":564883,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":0,"index":7873},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564919,"byte_end":564932,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":0,"index":7870},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564934,"byte_end":564942,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":7784}},{"kind":"Use","ref_id":{"krate":0,"index":8019},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":572107,"byte_end":572123,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":7885}},{"kind":"Use","ref_id":{"krate":0,"index":7940},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":572125,"byte_end":572130,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":7885}},{"kind":"Use","ref_id":{"krate":0,"index":7996},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":572132,"byte_end":572142,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":7885}},{"kind":"Use","ref_id":{"krate":0,"index":7977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":572144,"byte_end":572159,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":7885}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7015},{"krate":0,"index":7018},{"krate":0,"index":7021},{"krate":0,"index":7024},{"krate":0,"index":7777},{"krate":0,"index":7778},{"krate":0,"index":7781},{"krate":0,"index":7784},{"krate":0,"index":7883},{"krate":0,"index":7885},{"krate":0,"index":8166},{"krate":0,"index":8228},{"krate":0,"index":8442}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","byte_start":14000,"byte_end":14004,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","byte_start":14145,"byte_end":14153,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","byte_start":14079,"byte_end":14118,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/pending.rs","byte_start":15214,"byte_end":15226,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/pending.rs","byte_start":15351,"byte_end":15362,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/pending.rs","byte_start":15285,"byte_end":15324,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/random.rs","byte_start":34247,"byte_end":34254,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":13015,"byte_end":13027,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":12990,"byte_end":13007,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":13089,"byte_end":13108,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":13064,"byte_end":13081,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":13185,"byte_end":13204,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/mod.rs","byte_start":13160,"byte_end":13177,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1111,"byte_end":1120,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1056,"byte_end":1087,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":50,"line_end":50,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1961}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35316,"byte_end":35340,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35341,"byte_end":35344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35345,"byte_end":35370,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35371,"byte_end":35374,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35375,"byte_end":35402,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35403,"byte_end":35482,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35483,"byte_end":35520,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35521,"byte_end":35600,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35601,"byte_end":35676,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":35677,"byte_end":35741,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8466},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59123,"byte_end":59128,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8468},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59157,"byte_end":59163,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8470},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59192,"byte_end":59197,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8463},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59093,"byte_end":59100,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8466},{"krate":0,"index":8468},{"krate":0,"index":8470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8510},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63554,"byte_end":63558,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8512}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65377,"byte_end":65387,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63755,"byte_end":63823,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63828,"byte_end":63831,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63836,"byte_end":63904,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63909,"byte_end":63954,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63959,"byte_end":63962,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63967,"byte_end":63981,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63986,"byte_end":63989,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63994,"byte_end":64001,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64006,"byte_end":64047,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64052,"byte_end":64083,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64088,"byte_end":64144,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64149,"byte_end":64173,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64178,"byte_end":64213,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64218,"byte_end":64243,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64248,"byte_end":64251,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64256,"byte_end":64305,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64310,"byte_end":64313,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64318,"byte_end":64360,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64365,"byte_end":64404,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64409,"byte_end":64448,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64453,"byte_end":64470,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64475,"byte_end":64478,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64483,"byte_end":64553,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64558,"byte_end":64597,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64602,"byte_end":64643,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64648,"byte_end":64674,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64679,"byte_end":64682,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64687,"byte_end":64697,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64702,"byte_end":64719,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64724,"byte_end":64758,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64763,"byte_end":64810,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64815,"byte_end":64864,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64869,"byte_end":64931,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64936,"byte_end":64960,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":64965,"byte_end":65008,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65013,"byte_end":65070,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65075,"byte_end":65150,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65155,"byte_end":65185,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65190,"byte_end":65207,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65212,"byte_end":65226,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65231,"byte_end":65315,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65320,"byte_end":65329,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65334,"byte_end":65339,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65344,"byte_end":65353,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65358,"byte_end":65365,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8549},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66445,"byte_end":66455,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8552},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66539,"byte_end":66547,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8546},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66423,"byte_end":66426,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8549},{"krate":0,"index":8552}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597768,"byte_end":14597777,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":39549,"byte_end":39556,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8603}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":39807,"byte_end":39820,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8651}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8707},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":40160,"byte_end":40163,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8710}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8767},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":40370,"byte_end":40380,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8769}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8817},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":40586,"byte_end":40593,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":8820}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8879},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":40786,"byte_end":40790,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8883}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8952},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":41035,"byte_end":41042,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8955}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":41283,"byte_end":41293,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9014}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9060},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":41506,"byte_end":41515,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9062}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":68143,"byte_end":68154,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9108}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69157,"byte_end":69163,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69014,"byte_end":69077,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69078,"byte_end":69145,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69537,"byte_end":69547,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69448,"byte_end":69525,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71649,"byte_end":71653,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71380,"byte_end":71454,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71459,"byte_end":71532,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71537,"byte_end":71605,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71610,"byte_end":71637,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72148,"byte_end":72157,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72005,"byte_end":72058,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72063,"byte_end":72066,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72071,"byte_end":72136,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72751,"byte_end":72763,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72339,"byte_end":72397,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72402,"byte_end":72405,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72410,"byte_end":72475,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72480,"byte_end":72483,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72488,"byte_end":72500,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72505,"byte_end":72508,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72513,"byte_end":72606,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72611,"byte_end":72705,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72710,"byte_end":72739,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73271,"byte_end":73281,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72863,"byte_end":72919,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72924,"byte_end":72927,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":72932,"byte_end":72997,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73002,"byte_end":73005,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73010,"byte_end":73022,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73027,"byte_end":73030,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73035,"byte_end":73128,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73133,"byte_end":73225,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73230,"byte_end":73259,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79731,"byte_end":79738,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79541,"byte_end":79603,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79608,"byte_end":79611,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79616,"byte_end":79696,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79701,"byte_end":79719,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42497,"byte_end":42506,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42398,"byte_end":42472,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42473,"byte_end":42486,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43338,"byte_end":43341,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42521,"byte_end":42596,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42601,"byte_end":42624,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42629,"byte_end":42632,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42637,"byte_end":42711,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42716,"byte_end":42787,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42792,"byte_end":42854,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42859,"byte_end":42862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42867,"byte_end":42938,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42943,"byte_end":43014,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43019,"byte_end":43040,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43045,"byte_end":43048,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43053,"byte_end":43067,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43072,"byte_end":43075,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43080,"byte_end":43087,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43092,"byte_end":43133,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43138,"byte_end":43173,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43178,"byte_end":43181,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43186,"byte_end":43215,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43220,"byte_end":43263,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43268,"byte_end":43304,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43309,"byte_end":43318,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43323,"byte_end":43330,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43738,"byte_end":43746,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43511,"byte_end":43586,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43591,"byte_end":43614,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43619,"byte_end":43622,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43627,"byte_end":43705,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43710,"byte_end":43730,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44758,"byte_end":44762,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43905,"byte_end":43981,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":43986,"byte_end":44029,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44034,"byte_end":44037,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44042,"byte_end":44113,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44118,"byte_end":44192,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44197,"byte_end":44213,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44218,"byte_end":44221,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44226,"byte_end":44301,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44306,"byte_end":44317,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44322,"byte_end":44325,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44330,"byte_end":44401,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44406,"byte_end":44432,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44437,"byte_end":44440,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44445,"byte_end":44459,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44464,"byte_end":44467,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44472,"byte_end":44479,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44484,"byte_end":44525,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44530,"byte_end":44565,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44570,"byte_end":44573,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44578,"byte_end":44612,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44617,"byte_end":44682,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44687,"byte_end":44724,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44729,"byte_end":44738,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44743,"byte_end":44750,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45632,"byte_end":45643,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":44974,"byte_end":45049,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45054,"byte_end":45075,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45080,"byte_end":45083,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45088,"byte_end":45168,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45173,"byte_end":45245,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45250,"byte_end":45253,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45258,"byte_end":45272,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45277,"byte_end":45280,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45285,"byte_end":45292,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45297,"byte_end":45338,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45343,"byte_end":45378,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45383,"byte_end":45386,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45391,"byte_end":45405,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45410,"byte_end":45438,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45443,"byte_end":45479,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45484,"byte_end":45496,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45501,"byte_end":45539,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45544,"byte_end":45550,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45555,"byte_end":45558,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45563,"byte_end":45598,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45603,"byte_end":45612,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45617,"byte_end":45624,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46482,"byte_end":46494,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45823,"byte_end":45899,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45904,"byte_end":45925,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45930,"byte_end":45933,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":45938,"byte_end":46017,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46022,"byte_end":46094,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46099,"byte_end":46102,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46107,"byte_end":46121,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46126,"byte_end":46129,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46134,"byte_end":46141,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46146,"byte_end":46187,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46192,"byte_end":46227,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46232,"byte_end":46235,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46240,"byte_end":46254,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46259,"byte_end":46287,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46292,"byte_end":46328,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46333,"byte_end":46345,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46350,"byte_end":46388,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46393,"byte_end":46399,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46404,"byte_end":46407,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46412,"byte_end":46448,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46453,"byte_end":46462,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46467,"byte_end":46474,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47273,"byte_end":47284,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46675,"byte_end":46728,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46733,"byte_end":46736,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46741,"byte_end":46815,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46820,"byte_end":46883,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46888,"byte_end":46891,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46896,"byte_end":46910,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46915,"byte_end":46918,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46923,"byte_end":46930,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46935,"byte_end":46976,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":46981,"byte_end":47016,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47021,"byte_end":47056,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47061,"byte_end":47064,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47069,"byte_end":47099,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47104,"byte_end":47142,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47147,"byte_end":47198,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47203,"byte_end":47239,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47244,"byte_end":47253,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47258,"byte_end":47265,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48149,"byte_end":48156,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47423,"byte_end":47487,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47492,"byte_end":47528,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47533,"byte_end":47536,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47541,"byte_end":47610,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47615,"byte_end":47652,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47657,"byte_end":47660,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47665,"byte_end":47725,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47730,"byte_end":47733,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47738,"byte_end":47809,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47814,"byte_end":47840,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47845,"byte_end":47848,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47853,"byte_end":47867,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47872,"byte_end":47875,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47880,"byte_end":47887,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47892,"byte_end":47933,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47938,"byte_end":47973,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47978,"byte_end":47981,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":47986,"byte_end":48032,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48037,"byte_end":48078,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48083,"byte_end":48115,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48120,"byte_end":48129,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48134,"byte_end":48141,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49261,"byte_end":49275,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48370,"byte_end":48445,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48450,"byte_end":48473,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48478,"byte_end":48481,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48486,"byte_end":48558,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48563,"byte_end":48636,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48641,"byte_end":48655,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48660,"byte_end":48663,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48668,"byte_end":48738,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48743,"byte_end":48761,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48766,"byte_end":48769,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48774,"byte_end":48788,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48793,"byte_end":48796,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48801,"byte_end":48808,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48813,"byte_end":48854,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48859,"byte_end":48894,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48899,"byte_end":48942,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48947,"byte_end":48950,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":48955,"byte_end":48995,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49000,"byte_end":49066,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49071,"byte_end":49074,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49079,"byte_end":49132,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49137,"byte_end":49183,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49188,"byte_end":49227,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49232,"byte_end":49241,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49246,"byte_end":49253,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50363,"byte_end":50367,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49468,"byte_end":49541,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49546,"byte_end":49612,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49617,"byte_end":49635,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49640,"byte_end":49643,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49648,"byte_end":49715,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49720,"byte_end":49785,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49790,"byte_end":49862,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49867,"byte_end":49941,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49946,"byte_end":49972,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49977,"byte_end":49980,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":49985,"byte_end":50056,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50061,"byte_end":50136,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50141,"byte_end":50195,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50200,"byte_end":50203,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50208,"byte_end":50282,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50287,"byte_end":50355,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51207,"byte_end":51214,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50513,"byte_end":50579,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50584,"byte_end":50587,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50592,"byte_end":50667,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50672,"byte_end":50745,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50750,"byte_end":50819,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50824,"byte_end":50874,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50879,"byte_end":50882,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50887,"byte_end":50901,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50906,"byte_end":50909,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50914,"byte_end":50921,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50926,"byte_end":50967,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":50972,"byte_end":51007,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51012,"byte_end":51015,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51020,"byte_end":51049,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51054,"byte_end":51132,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51137,"byte_end":51173,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51178,"byte_end":51187,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51192,"byte_end":51199,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52752,"byte_end":52764,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51396,"byte_end":51450,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51455,"byte_end":51458,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51463,"byte_end":51538,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51543,"byte_end":51617,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51622,"byte_end":51696,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51701,"byte_end":51752,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51757,"byte_end":51760,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51765,"byte_end":51840,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51845,"byte_end":51915,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51920,"byte_end":51987,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":51992,"byte_end":52067,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52072,"byte_end":52144,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52149,"byte_end":52152,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52157,"byte_end":52221,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52226,"byte_end":52283,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52288,"byte_end":52291,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52296,"byte_end":52310,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52315,"byte_end":52318,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52323,"byte_end":52330,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52335,"byte_end":52376,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52381,"byte_end":52431,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52436,"byte_end":52439,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52444,"byte_end":52478,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52483,"byte_end":52532,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52537,"byte_end":52540,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52545,"byte_end":52594,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52599,"byte_end":52623,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52628,"byte_end":52635,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52640,"byte_end":52690,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52695,"byte_end":52704,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52709,"byte_end":52716,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52721,"byte_end":52744,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54516,"byte_end":54522,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":52994,"byte_end":53069,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53074,"byte_end":53097,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53102,"byte_end":53105,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53110,"byte_end":53184,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53189,"byte_end":53262,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53267,"byte_end":53279,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53284,"byte_end":53287,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53292,"byte_end":53356,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53361,"byte_end":53418,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53423,"byte_end":53426,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53431,"byte_end":53445,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53450,"byte_end":53453,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53458,"byte_end":53465,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53470,"byte_end":53511,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53516,"byte_end":53551,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53556,"byte_end":53559,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53564,"byte_end":53593,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53598,"byte_end":53632,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53637,"byte_end":53671,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53676,"byte_end":53679,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53684,"byte_end":53717,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53722,"byte_end":53755,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53760,"byte_end":53769,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53774,"byte_end":53781,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53786,"byte_end":53789,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53794,"byte_end":53801,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53806,"byte_end":53875,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53880,"byte_end":53955,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53960,"byte_end":53991,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":53996,"byte_end":53999,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54004,"byte_end":54045,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54050,"byte_end":54085,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54090,"byte_end":54126,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54131,"byte_end":54151,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54156,"byte_end":54159,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54164,"byte_end":54193,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54198,"byte_end":54232,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54237,"byte_end":54271,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54276,"byte_end":54321,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54326,"byte_end":54367,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54372,"byte_end":54379,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54384,"byte_end":54417,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54422,"byte_end":54454,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54459,"byte_end":54468,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54473,"byte_end":54480,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":54485,"byte_end":54508,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55684,"byte_end":55689,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55455,"byte_end":55496,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55501,"byte_end":55504,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55509,"byte_end":55584,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55589,"byte_end":55646,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55651,"byte_end":55676,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56149,"byte_end":56160,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55848,"byte_end":55889,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55894,"byte_end":55897,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55902,"byte_end":55961,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55966,"byte_end":55969,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":55974,"byte_end":56049,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56054,"byte_end":56111,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56116,"byte_end":56141,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56450,"byte_end":56460,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56317,"byte_end":56366,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56371,"byte_end":56442,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56745,"byte_end":56756,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56609,"byte_end":56658,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56663,"byte_end":56737,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56987,"byte_end":56997,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":56910,"byte_end":56979,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58393,"byte_end":58405,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57133,"byte_end":57205,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57210,"byte_end":57273,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57278,"byte_end":57281,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57286,"byte_end":57352,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57357,"byte_end":57360,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57365,"byte_end":57438,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57443,"byte_end":57512,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57517,"byte_end":57587,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57592,"byte_end":57595,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57600,"byte_end":57614,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57619,"byte_end":57622,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57627,"byte_end":57634,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57639,"byte_end":57669,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57674,"byte_end":57724,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57729,"byte_end":57768,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57773,"byte_end":57824,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57829,"byte_end":57832,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57837,"byte_end":57897,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57902,"byte_end":57954,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57959,"byte_end":57966,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57971,"byte_end":57974,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":57979,"byte_end":58048,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58053,"byte_end":58126,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58131,"byte_end":58163,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58168,"byte_end":58171,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58176,"byte_end":58183,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58188,"byte_end":58235,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58240,"byte_end":58279,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58284,"byte_end":58287,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58292,"byte_end":58373,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":58378,"byte_end":58385,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9142},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":101882,"byte_end":101892,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9144}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":9181},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102866,"byte_end":102871,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9178},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9183},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102900,"byte_end":102906,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9178},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9185},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102935,"byte_end":102940,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9178},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9178},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102833,"byte_end":102843,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9181},{"krate":0,"index":9183},{"krate":0,"index":9185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9228},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107809,"byte_end":107814,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9230},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107843,"byte_end":107849,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9232},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107878,"byte_end":107883,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9225},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107773,"byte_end":107786,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9228},{"krate":0,"index":9230},{"krate":0,"index":9232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9275},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":80717,"byte_end":80727,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9278}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9336},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":80975,"byte_end":80988,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9339}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9396},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":81256,"byte_end":81272,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9398}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":81615,"byte_end":81626,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":9457}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9526},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":81860,"byte_end":81867,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9530}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9600},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":82107,"byte_end":82113,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9604}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9673},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":82363,"byte_end":82370,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9676}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9734},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":82578,"byte_end":82584,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9737}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":82803,"byte_end":82812,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9798}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9856},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":83084,"byte_end":83094,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9859}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":83467,"byte_end":83472,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9920}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9978},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":83713,"byte_end":83719,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9981}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10040},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":83976,"byte_end":83987,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10044}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10113},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84271,"byte_end":84283,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10116}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84573,"byte_end":84585,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84509,"byte_end":84562,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85737,"byte_end":85749,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84603,"byte_end":84679,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84684,"byte_end":84709,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84714,"byte_end":84717,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84722,"byte_end":84792,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84797,"byte_end":84870,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84875,"byte_end":84889,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84894,"byte_end":84897,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84902,"byte_end":84972,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84977,"byte_end":84995,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85000,"byte_end":85003,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85008,"byte_end":85022,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85027,"byte_end":85030,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85035,"byte_end":85042,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85047,"byte_end":85095,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85100,"byte_end":85128,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85133,"byte_end":85185,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85190,"byte_end":85209,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85214,"byte_end":85239,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85244,"byte_end":85247,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85252,"byte_end":85308,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85313,"byte_end":85345,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85350,"byte_end":85360,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85365,"byte_end":85382,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85387,"byte_end":85434,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85439,"byte_end":85475,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85480,"byte_end":85487,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85492,"byte_end":85553,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85558,"byte_end":85561,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85566,"byte_end":85598,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85603,"byte_end":85636,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85641,"byte_end":85648,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85653,"byte_end":85677,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87345,"byte_end":87351,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":85973,"byte_end":86031,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86036,"byte_end":86039,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86044,"byte_end":86119,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86124,"byte_end":86194,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86199,"byte_end":86272,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86277,"byte_end":86306,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86311,"byte_end":86314,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86319,"byte_end":86394,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86399,"byte_end":86474,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86479,"byte_end":86526,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86531,"byte_end":86534,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86539,"byte_end":86614,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86619,"byte_end":86645,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86650,"byte_end":86653,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86658,"byte_end":86672,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86677,"byte_end":86680,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86685,"byte_end":86692,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86697,"byte_end":86735,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86740,"byte_end":86743,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86748,"byte_end":86789,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86794,"byte_end":86839,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86844,"byte_end":86886,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86891,"byte_end":86927,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86932,"byte_end":86941,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86946,"byte_end":86953,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86958,"byte_end":86961,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":86966,"byte_end":87038,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87043,"byte_end":87054,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87059,"byte_end":87062,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87067,"byte_end":87074,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87079,"byte_end":87117,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87122,"byte_end":87125,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87130,"byte_end":87171,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87176,"byte_end":87222,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87227,"byte_end":87269,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87274,"byte_end":87311,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87316,"byte_end":87325,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87330,"byte_end":87337,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88910,"byte_end":88924,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87542,"byte_end":87659,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87664,"byte_end":87667,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87672,"byte_end":87794,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87799,"byte_end":87849,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87854,"byte_end":87857,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87862,"byte_end":87937,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":87942,"byte_end":88017,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88022,"byte_end":88069,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88074,"byte_end":88077,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88082,"byte_end":88157,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88162,"byte_end":88237,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88242,"byte_end":88289,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88294,"byte_end":88297,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88302,"byte_end":88377,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88382,"byte_end":88408,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88413,"byte_end":88416,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88421,"byte_end":88435,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88440,"byte_end":88443,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88448,"byte_end":88455,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88460,"byte_end":88498,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88503,"byte_end":88506,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88511,"byte_end":88552,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88557,"byte_end":88602,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88607,"byte_end":88668,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88673,"byte_end":88705,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88710,"byte_end":88713,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88718,"byte_end":88764,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88769,"byte_end":88830,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88835,"byte_end":88868,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88873,"byte_end":88882,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88887,"byte_end":88894,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":88899,"byte_end":88902,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90607,"byte_end":90614,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89158,"byte_end":89214,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89219,"byte_end":89222,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89227,"byte_end":89301,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89306,"byte_end":89367,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89372,"byte_end":89442,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89447,"byte_end":89522,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89527,"byte_end":89562,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89567,"byte_end":89570,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89575,"byte_end":89650,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89655,"byte_end":89730,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89735,"byte_end":89782,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89787,"byte_end":89790,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89795,"byte_end":89870,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89875,"byte_end":89901,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89906,"byte_end":89909,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89914,"byte_end":89928,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89933,"byte_end":89936,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89941,"byte_end":89948,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89953,"byte_end":89991,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":89996,"byte_end":89999,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90004,"byte_end":90045,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90050,"byte_end":90096,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90101,"byte_end":90144,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90149,"byte_end":90186,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90191,"byte_end":90200,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90205,"byte_end":90212,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90217,"byte_end":90220,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90225,"byte_end":90298,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90303,"byte_end":90317,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90322,"byte_end":90325,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90330,"byte_end":90337,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90342,"byte_end":90380,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90385,"byte_end":90388,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90393,"byte_end":90434,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90439,"byte_end":90484,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90489,"byte_end":90532,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90537,"byte_end":90573,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90578,"byte_end":90587,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90592,"byte_end":90599,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91704,"byte_end":91712,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90807,"byte_end":90877,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90882,"byte_end":90931,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90936,"byte_end":90939,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":90944,"byte_end":91007,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91012,"byte_end":91080,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91085,"byte_end":91158,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91163,"byte_end":91239,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91244,"byte_end":91289,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91294,"byte_end":91297,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91302,"byte_end":91377,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91382,"byte_end":91408,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91413,"byte_end":91416,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91421,"byte_end":91435,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91440,"byte_end":91443,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91448,"byte_end":91455,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91460,"byte_end":91498,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91503,"byte_end":91506,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91511,"byte_end":91552,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91557,"byte_end":91608,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91613,"byte_end":91670,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91675,"byte_end":91684,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91689,"byte_end":91696,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92008,"byte_end":92015,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91888,"byte_end":91946,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":91951,"byte_end":92000,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93570,"byte_end":93578,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92189,"byte_end":92258,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92263,"byte_end":92337,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92342,"byte_end":92345,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92350,"byte_end":92425,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92430,"byte_end":92500,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92505,"byte_end":92570,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92575,"byte_end":92641,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92646,"byte_end":92680,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92685,"byte_end":92688,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92693,"byte_end":92768,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92773,"byte_end":92799,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92804,"byte_end":92807,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92812,"byte_end":92826,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92831,"byte_end":92834,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92839,"byte_end":92846,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92851,"byte_end":92889,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92894,"byte_end":92897,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92902,"byte_end":92943,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92948,"byte_end":92993,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":92998,"byte_end":93073,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93078,"byte_end":93114,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93119,"byte_end":93128,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93133,"byte_end":93140,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93145,"byte_end":93148,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93153,"byte_end":93229,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93234,"byte_end":93245,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93250,"byte_end":93253,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93258,"byte_end":93265,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93270,"byte_end":93308,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93313,"byte_end":93316,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93321,"byte_end":93362,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93367,"byte_end":93413,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93418,"byte_end":93494,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93499,"byte_end":93536,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93541,"byte_end":93550,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93555,"byte_end":93562,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95199,"byte_end":95206,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93832,"byte_end":93897,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93902,"byte_end":93974,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93979,"byte_end":93982,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":93987,"byte_end":94062,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94067,"byte_end":94137,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94142,"byte_end":94207,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94212,"byte_end":94288,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94293,"byte_end":94311,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94316,"byte_end":94319,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94324,"byte_end":94399,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94404,"byte_end":94430,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94435,"byte_end":94438,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94443,"byte_end":94457,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94462,"byte_end":94465,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94470,"byte_end":94477,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94482,"byte_end":94520,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94525,"byte_end":94528,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94533,"byte_end":94574,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94579,"byte_end":94625,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94630,"byte_end":94705,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94710,"byte_end":94747,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94752,"byte_end":94761,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94766,"byte_end":94773,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94778,"byte_end":94781,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94786,"byte_end":94859,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94864,"byte_end":94878,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94883,"byte_end":94886,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94891,"byte_end":94898,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94903,"byte_end":94941,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94946,"byte_end":94949,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":94954,"byte_end":94995,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95000,"byte_end":95045,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95050,"byte_end":95124,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95129,"byte_end":95165,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95170,"byte_end":95179,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95184,"byte_end":95191,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96182,"byte_end":96192,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95455,"byte_end":95528,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95533,"byte_end":95536,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95541,"byte_end":95616,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95621,"byte_end":95694,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95699,"byte_end":95768,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95773,"byte_end":95826,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95831,"byte_end":95834,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95839,"byte_end":95853,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95858,"byte_end":95861,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95866,"byte_end":95873,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95878,"byte_end":95919,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95924,"byte_end":95962,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95967,"byte_end":95970,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":95975,"byte_end":96017,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96022,"byte_end":96103,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96108,"byte_end":96148,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96153,"byte_end":96162,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96167,"byte_end":96174,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97118,"byte_end":97129,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96391,"byte_end":96462,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96467,"byte_end":96470,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96475,"byte_end":96550,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96555,"byte_end":96628,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96633,"byte_end":96702,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96707,"byte_end":96761,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96766,"byte_end":96769,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96774,"byte_end":96788,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96793,"byte_end":96796,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96801,"byte_end":96808,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96813,"byte_end":96854,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96859,"byte_end":96897,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96902,"byte_end":96905,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96910,"byte_end":96953,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":96958,"byte_end":97038,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97043,"byte_end":97084,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97089,"byte_end":97098,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97103,"byte_end":97110,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97514,"byte_end":97525,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97333,"byte_end":97408,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97413,"byte_end":97442,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97447,"byte_end":97450,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97455,"byte_end":97506,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98704,"byte_end":98722,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97760,"byte_end":97835,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97840,"byte_end":97863,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97868,"byte_end":97871,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97876,"byte_end":97948,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":97953,"byte_end":98026,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98031,"byte_end":98045,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98050,"byte_end":98053,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98058,"byte_end":98128,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98133,"byte_end":98151,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98156,"byte_end":98159,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98164,"byte_end":98178,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98183,"byte_end":98186,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98191,"byte_end":98198,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98203,"byte_end":98244,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98249,"byte_end":98287,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98292,"byte_end":98338,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98343,"byte_end":98346,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98351,"byte_end":98411,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98416,"byte_end":98495,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98500,"byte_end":98503,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98508,"byte_end":98565,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98570,"byte_end":98622,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98627,"byte_end":98670,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98675,"byte_end":98684,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98689,"byte_end":98696,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99813,"byte_end":99827,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":98982,"byte_end":99053,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99058,"byte_end":99095,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99100,"byte_end":99149,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99154,"byte_end":99157,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99162,"byte_end":99231,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99236,"byte_end":99309,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99314,"byte_end":99384,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99389,"byte_end":99407,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99412,"byte_end":99415,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99420,"byte_end":99488,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99493,"byte_end":99496,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99501,"byte_end":99515,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99520,"byte_end":99523,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99528,"byte_end":99535,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99540,"byte_end":99578,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99583,"byte_end":99586,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99591,"byte_end":99632,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99637,"byte_end":99689,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99694,"byte_end":99741,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99746,"byte_end":99779,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99784,"byte_end":99793,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":99798,"byte_end":99805,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101082,"byte_end":101093,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100381,"byte_end":100434,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100439,"byte_end":100475,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100480,"byte_end":100483,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100488,"byte_end":100537,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100542,"byte_end":100609,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100614,"byte_end":100627,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100632,"byte_end":100635,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100640,"byte_end":100654,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100659,"byte_end":100662,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100667,"byte_end":100674,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100679,"byte_end":100738,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100743,"byte_end":100746,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100751,"byte_end":100770,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100775,"byte_end":100793,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100798,"byte_end":100870,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100875,"byte_end":100907,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100912,"byte_end":100919,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":100924,"byte_end":101000,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101005,"byte_end":101008,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101013,"byte_end":101062,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101067,"byte_end":101074,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101352,"byte_end":101366,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":888},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101249,"byte_end":101322,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":101327,"byte_end":101344,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10171},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109535,"byte_end":109539,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10173}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109401,"byte_end":109438,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109456,"byte_end":109523,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110081,"byte_end":110085,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109644,"byte_end":109712,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109713,"byte_end":109716,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109717,"byte_end":109780,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109781,"byte_end":109784,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109785,"byte_end":109799,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109800,"byte_end":109803,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109804,"byte_end":109811,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109812,"byte_end":109853,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109854,"byte_end":109878,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109879,"byte_end":109882,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109883,"byte_end":109915,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109916,"byte_end":109943,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109944,"byte_end":109947,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109948,"byte_end":109985,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109986,"byte_end":110010,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110011,"byte_end":110018,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110019,"byte_end":110055,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110056,"byte_end":110065,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110066,"byte_end":110073,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10177},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":110912,"byte_end":110919,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10179}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":110773,"byte_end":110815,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":110833,"byte_end":110900,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111438,"byte_end":111445,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111060,"byte_end":111140,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111141,"byte_end":111154,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111155,"byte_end":111158,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111159,"byte_end":111221,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111222,"byte_end":111225,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111226,"byte_end":111240,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111241,"byte_end":111244,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111245,"byte_end":111258,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111259,"byte_end":111300,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111301,"byte_end":111325,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111326,"byte_end":111329,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111330,"byte_end":111365,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111366,"byte_end":111392,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111393,"byte_end":111412,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111413,"byte_end":111422,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111423,"byte_end":111430,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10185},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112217,"byte_end":112223,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112182,"byte_end":112212,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10188},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112290,"byte_end":112294,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112247,"byte_end":112285,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10191},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112456,"byte_end":112460,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10183},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112313,"byte_end":112379,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112384,"byte_end":112451,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10183},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112153,"byte_end":112162,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10188},{"krate":0,"index":10191}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112031,"byte_end":112068,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112069,"byte_end":112072,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112073,"byte_end":112126,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112981,"byte_end":112991,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112520,"byte_end":112557,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112558,"byte_end":112561,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112562,"byte_end":112576,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112577,"byte_end":112580,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112581,"byte_end":112588,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112589,"byte_end":112630,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112631,"byte_end":112655,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112656,"byte_end":112681,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112682,"byte_end":112685,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112686,"byte_end":112735,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112736,"byte_end":112757,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112758,"byte_end":112810,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112811,"byte_end":112846,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112847,"byte_end":112902,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112903,"byte_end":112955,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112956,"byte_end":112965,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112966,"byte_end":112973,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113432,"byte_end":113442,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113134,"byte_end":113219,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113224,"byte_end":113295,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113300,"byte_end":113373,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113378,"byte_end":113406,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113411,"byte_end":113420,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113790,"byte_end":113801,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113670,"byte_end":113736,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113741,"byte_end":113764,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113769,"byte_end":113778,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10198},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115426,"byte_end":115432,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115391,"byte_end":115421,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10201},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115499,"byte_end":115503,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115456,"byte_end":115494,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10204},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115711,"byte_end":115715,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10196},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115518,"byte_end":115587,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115592,"byte_end":115662,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115667,"byte_end":115706,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10196},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115356,"byte_end":115368,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":10198},{"krate":0,"index":10201},{"krate":0,"index":10204}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115216,"byte_end":115267,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115268,"byte_end":115271,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115272,"byte_end":115329,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115829,"byte_end":115843,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115781,"byte_end":115821,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116330,"byte_end":116340,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116021,"byte_end":116106,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116111,"byte_end":116182,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116187,"byte_end":116271,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116276,"byte_end":116304,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116309,"byte_end":116318,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116690,"byte_end":116701,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116567,"byte_end":116636,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116641,"byte_end":116664,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":116669,"byte_end":116678,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10209},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":118912,"byte_end":118924,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10211}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120042,"byte_end":120048,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1214}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":119922,"byte_end":119962,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":119963,"byte_end":120030,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1217},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120635,"byte_end":120642,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120099,"byte_end":120170,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120171,"byte_end":120174,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120175,"byte_end":120241,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120242,"byte_end":120245,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120246,"byte_end":120260,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120261,"byte_end":120264,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120265,"byte_end":120272,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120273,"byte_end":120314,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120315,"byte_end":120348,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120349,"byte_end":120388,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120389,"byte_end":120392,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120393,"byte_end":120450,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120451,"byte_end":120494,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120495,"byte_end":120500,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120501,"byte_end":120504,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120505,"byte_end":120546,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120547,"byte_end":120609,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120610,"byte_end":120619,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120620,"byte_end":120627,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":121576,"byte_end":121589,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10250}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1276},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124997,"byte_end":125011,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":123809,"byte_end":123882,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":123883,"byte_end":124007,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124008,"byte_end":124011,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124012,"byte_end":124025,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124026,"byte_end":124029,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124030,"byte_end":124097,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124098,"byte_end":124101,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124102,"byte_end":124268,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124269,"byte_end":124394,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124395,"byte_end":124398,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124399,"byte_end":124413,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124414,"byte_end":124417,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124418,"byte_end":124425,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124426,"byte_end":124467,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124468,"byte_end":124492,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124493,"byte_end":124496,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124497,"byte_end":124549,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124550,"byte_end":124583,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124584,"byte_end":124587,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124588,"byte_end":124649,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124650,"byte_end":124680,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124681,"byte_end":124690,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124691,"byte_end":124698,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124699,"byte_end":124702,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124703,"byte_end":124727,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124728,"byte_end":124731,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124732,"byte_end":124739,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124740,"byte_end":124781,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124782,"byte_end":124817,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124818,"byte_end":124865,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124866,"byte_end":124882,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124883,"byte_end":124942,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124943,"byte_end":124971,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124972,"byte_end":124981,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":124982,"byte_end":124989,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125434,"byte_end":125439,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125283,"byte_end":125330,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125355,"byte_end":125422,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125562,"byte_end":125572,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125479,"byte_end":125536,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125541,"byte_end":125550,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1318},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126238,"byte_end":126243,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125992,"byte_end":126052,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126053,"byte_end":126056,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126057,"byte_end":126071,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126072,"byte_end":126075,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126076,"byte_end":126083,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126084,"byte_end":126125,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126126,"byte_end":126150,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126151,"byte_end":126154,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126155,"byte_end":126184,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126185,"byte_end":126212,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126213,"byte_end":126222,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126223,"byte_end":126230,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1320},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126578,"byte_end":126580,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126312,"byte_end":126379,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126380,"byte_end":126383,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126384,"byte_end":126398,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126399,"byte_end":126402,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126403,"byte_end":126410,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126411,"byte_end":126452,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126453,"byte_end":126477,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126478,"byte_end":126481,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126482,"byte_end":126520,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126521,"byte_end":126552,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126553,"byte_end":126562,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126563,"byte_end":126570,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1323},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126911,"byte_end":126914,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126644,"byte_end":126710,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126711,"byte_end":126714,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126715,"byte_end":126729,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126730,"byte_end":126733,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126734,"byte_end":126741,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126742,"byte_end":126783,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126784,"byte_end":126808,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126809,"byte_end":126812,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126813,"byte_end":126852,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126853,"byte_end":126885,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126886,"byte_end":126895,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":126896,"byte_end":126903,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10389},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129200,"byte_end":129204,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10392},{"krate":0,"index":10393}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10434},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129270,"byte_end":129275,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10438},{"krate":0,"index":10439},{"krate":0,"index":10440}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10491},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129347,"byte_end":129352,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498},{"krate":0,"index":10499}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10560},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129430,"byte_end":129435,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10566},{"krate":0,"index":10567},{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10570}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1374},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130050,"byte_end":130054,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129473,"byte_end":129544,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129545,"byte_end":129548,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129549,"byte_end":129620,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129621,"byte_end":129696,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129697,"byte_end":129700,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129701,"byte_end":129770,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129771,"byte_end":129797,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129798,"byte_end":129801,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129802,"byte_end":129816,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129817,"byte_end":129820,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129821,"byte_end":129828,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129829,"byte_end":129870,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129871,"byte_end":129895,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129896,"byte_end":129899,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129900,"byte_end":129924,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129925,"byte_end":129949,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129950,"byte_end":129984,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129985,"byte_end":129988,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":129989,"byte_end":130024,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130025,"byte_end":130034,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130035,"byte_end":130042,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130600,"byte_end":130605,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130261,"byte_end":130313,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130314,"byte_end":130317,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130318,"byte_end":130332,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130333,"byte_end":130336,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130337,"byte_end":130344,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130345,"byte_end":130386,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130387,"byte_end":130411,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130412,"byte_end":130415,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130416,"byte_end":130440,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130441,"byte_end":130465,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130466,"byte_end":130490,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130491,"byte_end":130530,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130531,"byte_end":130534,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130535,"byte_end":130574,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130575,"byte_end":130584,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130585,"byte_end":130592,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131267,"byte_end":131272,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130897,"byte_end":130949,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130950,"byte_end":130953,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130954,"byte_end":130968,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130969,"byte_end":130972,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130973,"byte_end":130980,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":130981,"byte_end":131022,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131023,"byte_end":131047,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131048,"byte_end":131051,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131052,"byte_end":131076,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131077,"byte_end":131101,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131102,"byte_end":131126,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131127,"byte_end":131151,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131152,"byte_end":131194,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131195,"byte_end":131198,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131199,"byte_end":131241,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131242,"byte_end":131251,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131252,"byte_end":131259,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":132037,"byte_end":132042,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131636,"byte_end":131688,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131689,"byte_end":131692,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131693,"byte_end":131707,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131708,"byte_end":131711,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131712,"byte_end":131719,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131720,"byte_end":131761,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131762,"byte_end":131786,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131787,"byte_end":131790,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131791,"byte_end":131815,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131816,"byte_end":131840,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131841,"byte_end":131865,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131866,"byte_end":131890,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131891,"byte_end":131915,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131916,"byte_end":131961,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131962,"byte_end":131965,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":131966,"byte_end":132011,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":132012,"byte_end":132021,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":132022,"byte_end":132029,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":133402,"byte_end":133409,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1469}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":133281,"byte_end":133348,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":133349,"byte_end":133390,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1480},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135504,"byte_end":135512,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134218,"byte_end":134298,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134299,"byte_end":134309,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134310,"byte_end":134313,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134314,"byte_end":134393,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134394,"byte_end":134474,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134475,"byte_end":134493,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134494,"byte_end":134497,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134498,"byte_end":134575,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134576,"byte_end":134633,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134634,"byte_end":134637,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134638,"byte_end":134652,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134653,"byte_end":134656,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134657,"byte_end":134739,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134740,"byte_end":134824,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134825,"byte_end":134909,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134910,"byte_end":134913,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134914,"byte_end":134983,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134984,"byte_end":134987,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":134988,"byte_end":135056,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135057,"byte_end":135060,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135061,"byte_end":135138,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135139,"byte_end":135220,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135221,"byte_end":135224,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135225,"byte_end":135239,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135240,"byte_end":135243,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135244,"byte_end":135251,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135252,"byte_end":135293,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135294,"byte_end":135328,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135329,"byte_end":135332,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135333,"byte_end":135370,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135371,"byte_end":135374,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135375,"byte_end":135422,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135423,"byte_end":135426,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135427,"byte_end":135478,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135479,"byte_end":135488,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":135489,"byte_end":135496,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10641},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":137965,"byte_end":137971,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10644}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":137827,"byte_end":137868,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":137869,"byte_end":137936,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140235,"byte_end":140241,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138062,"byte_end":138132,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138133,"byte_end":138136,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138137,"byte_end":138215,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138216,"byte_end":138292,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138293,"byte_end":138365,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138366,"byte_end":138369,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138370,"byte_end":138442,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138443,"byte_end":138471,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138472,"byte_end":138475,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138476,"byte_end":138543,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138544,"byte_end":138608,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138609,"byte_end":138659,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138660,"byte_end":138663,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138664,"byte_end":138678,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138679,"byte_end":138682,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138683,"byte_end":138703,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138704,"byte_end":138707,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138708,"byte_end":138715,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138716,"byte_end":138757,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138758,"byte_end":138776,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138777,"byte_end":138793,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138794,"byte_end":138817,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138818,"byte_end":138839,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138840,"byte_end":138846,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138847,"byte_end":138850,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138851,"byte_end":138942,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138943,"byte_end":138968,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138969,"byte_end":139028,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139029,"byte_end":139038,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139039,"byte_end":139045,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139046,"byte_end":139071,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139072,"byte_end":139102,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139103,"byte_end":139109,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139110,"byte_end":139113,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139114,"byte_end":139160,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139161,"byte_end":139183,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139184,"byte_end":139206,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139207,"byte_end":139210,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139211,"byte_end":139273,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139274,"byte_end":139358,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139359,"byte_end":139432,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139433,"byte_end":139517,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139518,"byte_end":139591,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139592,"byte_end":139598,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139599,"byte_end":139602,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139603,"byte_end":139627,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139628,"byte_end":139637,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139638,"byte_end":139645,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139646,"byte_end":139649,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139650,"byte_end":139676,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139677,"byte_end":139680,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139681,"byte_end":139688,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139689,"byte_end":139748,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139749,"byte_end":139752,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139753,"byte_end":139806,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139807,"byte_end":139810,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139811,"byte_end":139886,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139887,"byte_end":139919,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139920,"byte_end":139952,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139953,"byte_end":139958,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":139959,"byte_end":140003,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140004,"byte_end":140030,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140031,"byte_end":140108,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140109,"byte_end":140188,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140189,"byte_end":140202,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140203,"byte_end":140213,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140214,"byte_end":140219,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140220,"byte_end":140227,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141698,"byte_end":141707,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10651}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141558,"byte_end":141601,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141619,"byte_end":141686,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142487,"byte_end":142497,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141785,"byte_end":141851,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141852,"byte_end":141855,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141856,"byte_end":141936,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141937,"byte_end":142015,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142016,"byte_end":142084,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142085,"byte_end":142088,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142089,"byte_end":142169,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142170,"byte_end":142244,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142245,"byte_end":142248,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142249,"byte_end":142326,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142327,"byte_end":142384,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142385,"byte_end":142388,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142389,"byte_end":142401,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142402,"byte_end":142405,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142406,"byte_end":142479,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142878,"byte_end":142888,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142803,"byte_end":142866,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10725},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":146649,"byte_end":146656,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10728},{"krate":0,"index":10729}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10770},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":146726,"byte_end":146734,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10827},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":146810,"byte_end":146818,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10896},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":146900,"byte_end":146908,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":10902},{"krate":0,"index":10903},{"krate":0,"index":10904},{"krate":0,"index":10905},{"krate":0,"index":10906}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1635},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148181,"byte_end":148189,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":146946,"byte_end":147019,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147020,"byte_end":147052,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147053,"byte_end":147056,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147057,"byte_end":147128,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147129,"byte_end":147205,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147206,"byte_end":147278,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147279,"byte_end":147295,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147296,"byte_end":147299,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147300,"byte_end":147369,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147370,"byte_end":147396,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147397,"byte_end":147400,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147401,"byte_end":147415,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147416,"byte_end":147419,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147420,"byte_end":147496,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147497,"byte_end":147533,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147534,"byte_end":147537,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147538,"byte_end":147545,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147546,"byte_end":147587,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147588,"byte_end":147612,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147613,"byte_end":147616,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147617,"byte_end":147662,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147663,"byte_end":147708,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147709,"byte_end":147747,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147748,"byte_end":147751,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147752,"byte_end":147791,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147792,"byte_end":147801,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147802,"byte_end":147809,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147810,"byte_end":147813,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147814,"byte_end":147884,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147885,"byte_end":147900,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147901,"byte_end":147904,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147905,"byte_end":147912,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147913,"byte_end":147954,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147955,"byte_end":147979,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147980,"byte_end":147983,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":147984,"byte_end":148029,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148030,"byte_end":148076,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148077,"byte_end":148115,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148116,"byte_end":148119,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148120,"byte_end":148155,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148156,"byte_end":148165,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148166,"byte_end":148173,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148845,"byte_end":148854,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148427,"byte_end":148487,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148488,"byte_end":148491,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148492,"byte_end":148506,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148507,"byte_end":148510,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148511,"byte_end":148518,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148519,"byte_end":148560,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148561,"byte_end":148585,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148586,"byte_end":148589,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148590,"byte_end":148635,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148636,"byte_end":148681,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148682,"byte_end":148727,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148728,"byte_end":148771,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148772,"byte_end":148775,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148776,"byte_end":148819,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148820,"byte_end":148829,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":148830,"byte_end":148837,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149682,"byte_end":149691,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149212,"byte_end":149272,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149273,"byte_end":149276,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149277,"byte_end":149291,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149292,"byte_end":149295,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149296,"byte_end":149303,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149304,"byte_end":149345,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149346,"byte_end":149370,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149371,"byte_end":149374,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149375,"byte_end":149420,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149421,"byte_end":149466,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149467,"byte_end":149512,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149513,"byte_end":149558,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149559,"byte_end":149605,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149606,"byte_end":149609,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149610,"byte_end":149656,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149657,"byte_end":149666,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":149667,"byte_end":149674,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1647},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150663,"byte_end":150672,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150141,"byte_end":150201,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150202,"byte_end":150205,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150206,"byte_end":150220,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150221,"byte_end":150224,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150225,"byte_end":150232,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150233,"byte_end":150274,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150275,"byte_end":150299,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150300,"byte_end":150303,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150304,"byte_end":150349,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150350,"byte_end":150395,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150396,"byte_end":150441,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150442,"byte_end":150487,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150488,"byte_end":150533,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150534,"byte_end":150583,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150584,"byte_end":150587,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150588,"byte_end":150637,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150638,"byte_end":150647,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":150648,"byte_end":150655,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152164,"byte_end":152174,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1732}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152039,"byte_end":152084,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152085,"byte_end":152152,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1736},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153767,"byte_end":153779,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152518,"byte_end":152597,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152598,"byte_end":152628,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152629,"byte_end":152632,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152633,"byte_end":152712,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152713,"byte_end":152793,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152794,"byte_end":152812,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152813,"byte_end":152816,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152817,"byte_end":152895,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152896,"byte_end":152976,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152977,"byte_end":153051,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153052,"byte_end":153075,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153076,"byte_end":153079,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153080,"byte_end":153157,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153158,"byte_end":153215,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153216,"byte_end":153219,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153220,"byte_end":153234,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153235,"byte_end":153238,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153239,"byte_end":153246,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153247,"byte_end":153288,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153289,"byte_end":153335,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153336,"byte_end":153339,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153340,"byte_end":153363,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153364,"byte_end":153398,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153399,"byte_end":153433,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153434,"byte_end":153468,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153469,"byte_end":153475,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153476,"byte_end":153479,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153480,"byte_end":153543,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153544,"byte_end":153547,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153548,"byte_end":153571,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153572,"byte_end":153606,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153607,"byte_end":153642,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153643,"byte_end":153677,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153678,"byte_end":153684,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153685,"byte_end":153688,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153689,"byte_end":153741,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153742,"byte_end":153751,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":153752,"byte_end":153759,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155677,"byte_end":155686,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":10980}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155535,"byte_end":155580,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155581,"byte_end":155648,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157271,"byte_end":157281,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155780,"byte_end":155850,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155851,"byte_end":155854,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155855,"byte_end":155933,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155934,"byte_end":156010,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156011,"byte_end":156083,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156084,"byte_end":156087,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156088,"byte_end":156160,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156161,"byte_end":156189,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156190,"byte_end":156193,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156194,"byte_end":156261,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156262,"byte_end":156333,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156334,"byte_end":156384,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156385,"byte_end":156388,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156389,"byte_end":156403,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156404,"byte_end":156407,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156408,"byte_end":156415,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156416,"byte_end":156500,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156501,"byte_end":156504,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156505,"byte_end":156562,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156563,"byte_end":156566,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156567,"byte_end":156649,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156650,"byte_end":156707,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156708,"byte_end":156765,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156766,"byte_end":156792,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156793,"byte_end":156798,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156799,"byte_end":156894,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156895,"byte_end":156918,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":156919,"byte_end":156999,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157000,"byte_end":157081,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157082,"byte_end":157152,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157153,"byte_end":157224,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157225,"byte_end":157238,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157239,"byte_end":157249,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157250,"byte_end":157255,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157256,"byte_end":157263,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10985},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158912,"byte_end":158920,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":10987}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158773,"byte_end":158815,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158833,"byte_end":158900,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159642,"byte_end":159651,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158997,"byte_end":159091,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159092,"byte_end":159095,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159096,"byte_end":159185,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159186,"byte_end":159270,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159271,"byte_end":159352,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159353,"byte_end":159398,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159399,"byte_end":159402,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159403,"byte_end":159481,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159482,"byte_end":159539,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159540,"byte_end":159543,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159544,"byte_end":159556,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159557,"byte_end":159560,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":159561,"byte_end":159634,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10994},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162394,"byte_end":162398,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":10991},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162361,"byte_end":162389,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10997},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162454,"byte_end":162459,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":10991},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162420,"byte_end":162449,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":10991},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162342,"byte_end":162348,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":10994},{"krate":0,"index":10997}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":161819,"byte_end":161925,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":161926,"byte_end":161929,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":161930,"byte_end":162011,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162012,"byte_end":162015,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162016,"byte_end":162027,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162028,"byte_end":162060,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162061,"byte_end":162064,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162065,"byte_end":162106,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162107,"byte_end":162127,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162128,"byte_end":162131,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162132,"byte_end":162155,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162156,"byte_end":162195,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162196,"byte_end":162208,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162209,"byte_end":162249,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162250,"byte_end":162256,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162257,"byte_end":162260,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162261,"byte_end":162291,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162292,"byte_end":162300,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162301,"byte_end":162308,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163013,"byte_end":163025,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162865,"byte_end":162923,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162928,"byte_end":162931,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162936,"byte_end":163001,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163405,"byte_end":163418,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163256,"byte_end":163314,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163319,"byte_end":163322,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163327,"byte_end":163393,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163706,"byte_end":163716,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163633,"byte_end":163694,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1943},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170320,"byte_end":170329,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":169950,"byte_end":170037,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170038,"byte_end":170041,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170042,"byte_end":170118,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170119,"byte_end":170172,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170173,"byte_end":170176,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170177,"byte_end":170254,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":170255,"byte_end":170312,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4405},{"krate":0,"index":4408},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":4426},{"krate":0,"index":4429},{"krate":0,"index":4432},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4444},{"krate":0,"index":4447},{"krate":0,"index":4450},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4462},{"krate":0,"index":4465},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4489},{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5705},{"krate":0,"index":5708},{"krate":0,"index":5711},{"krate":0,"index":5714},{"krate":0,"index":5717},{"krate":0,"index":5720},{"krate":0,"index":5723},{"krate":0,"index":5726},{"krate":0,"index":5729},{"krate":0,"index":5732},{"krate":0,"index":5735},{"krate":0,"index":5738},{"krate":0,"index":5741},{"krate":0,"index":5744},{"krate":0,"index":5747},{"krate":0,"index":5750},{"krate":0,"index":5753},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5762},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5782},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5812},{"krate":0,"index":5815},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5852},{"krate":0,"index":5855},{"krate":0,"index":5892},{"krate":0,"index":5893},{"krate":0,"index":5896},{"krate":0,"index":5899},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5942},{"krate":0,"index":5945},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5992},{"krate":0,"index":5995},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6038},{"krate":0,"index":6041},{"krate":0,"index":6077},{"krate":0,"index":6078},{"krate":0,"index":6081},{"krate":0,"index":6084},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":6438},{"krate":0,"index":6441},{"krate":0,"index":6844},{"krate":0,"index":6847},{"krate":0,"index":6969},{"krate":0,"index":6970},{"krate":0,"index":6973},{"krate":0,"index":6976},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":6999},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7008}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170581,"byte_end":170606,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170607,"byte_end":170610,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170611,"byte_end":170636,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170637,"byte_end":170640,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170641,"byte_end":170714,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170715,"byte_end":170740,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170741,"byte_end":170820,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170821,"byte_end":170858,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170859,"byte_end":170932,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":170933,"byte_end":170963,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11008},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":232607,"byte_end":232612,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11011},{"krate":0,"index":11012}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11057},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":234737,"byte_end":234744,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11060},{"krate":0,"index":11061}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11106},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236178,"byte_end":236183,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":238017,"byte_end":238023,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11170},{"krate":0,"index":11171}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11208},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":239695,"byte_end":239700,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11210},{"krate":0,"index":11211}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11245},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":241010,"byte_end":241015,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11247},{"krate":0,"index":11248}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11285},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":242662,"byte_end":242671,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11287},{"krate":0,"index":11288}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11333},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":244303,"byte_end":244309,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11337},{"krate":0,"index":11338},{"krate":0,"index":11339},{"krate":0,"index":11340}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11402},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":247703,"byte_end":247712,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11406},{"krate":0,"index":11407},{"krate":0,"index":11408}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11467},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":250718,"byte_end":250725,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11470},{"krate":0,"index":11471}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11526},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176487,"byte_end":176494,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11528}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11587},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":252542,"byte_end":252546,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11592},{"krate":0,"index":11593},{"krate":0,"index":11594},{"krate":0,"index":11595}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11656},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255003,"byte_end":255006,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11662},{"krate":0,"index":11663}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11717},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":257579,"byte_end":257582,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11721},{"krate":0,"index":11722},{"krate":0,"index":11723},{"krate":0,"index":11724}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11778},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260248,"byte_end":260255,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11782},{"krate":0,"index":11783},{"krate":0,"index":11784}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11843},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177208,"byte_end":177215,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":11846}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11901},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":262491,"byte_end":262498,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11905},{"krate":0,"index":11906},{"krate":0,"index":11907}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11958},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264455,"byte_end":264459,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11960},{"krate":0,"index":11961}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264911,"byte_end":264918,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264642,"byte_end":264704,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264709,"byte_end":264712,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264717,"byte_end":264785,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264790,"byte_end":264856,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264861,"byte_end":264899,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":12006},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266277,"byte_end":266289,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":12008}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266107,"byte_end":266180,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266198,"byte_end":266265,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266852,"byte_end":266859,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266460,"byte_end":266533,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266538,"byte_end":266555,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266560,"byte_end":266563,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266568,"byte_end":266649,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266654,"byte_end":266736,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266741,"byte_end":266820,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266825,"byte_end":266840,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267470,"byte_end":267477,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266924,"byte_end":266991,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266996,"byte_end":267027,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267032,"byte_end":267035,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267040,"byte_end":267113,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267118,"byte_end":267173,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267178,"byte_end":267181,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267186,"byte_end":267267,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267272,"byte_end":267354,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267359,"byte_end":267438,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267443,"byte_end":267458,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268103,"byte_end":268114,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267550,"byte_end":267624,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267629,"byte_end":267660,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267665,"byte_end":267668,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267673,"byte_end":267746,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267751,"byte_end":267806,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267811,"byte_end":267814,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267819,"byte_end":267900,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267905,"byte_end":267987,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":267992,"byte_end":268071,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268076,"byte_end":268091,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268747,"byte_end":268757,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268227,"byte_end":268289,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268294,"byte_end":268297,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268302,"byte_end":268374,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268379,"byte_end":268450,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268455,"byte_end":268458,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268463,"byte_end":268544,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268549,"byte_end":268631,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268636,"byte_end":268715,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268720,"byte_end":268735,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12015},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177834,"byte_end":177841,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":12018}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12090},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":269781,"byte_end":269784,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":12093},{"krate":0,"index":12094}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12147},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178202,"byte_end":178209,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":12151}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12236},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271444,"byte_end":271448,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12239}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271288,"byte_end":271347,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271365,"byte_end":271432,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12244},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272456,"byte_end":272470,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12247}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272272,"byte_end":272347,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272348,"byte_end":272359,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272377,"byte_end":272444,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274061,"byte_end":274069,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12254},{"krate":0,"index":12255}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274502,"byte_end":274506,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274354,"byte_end":274420,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274425,"byte_end":274490,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274831,"byte_end":274840,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274593,"byte_end":274655,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274660,"byte_end":274663,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274668,"byte_end":274741,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274746,"byte_end":274819,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276155,"byte_end":276163,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275276,"byte_end":275350,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275355,"byte_end":275420,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275425,"byte_end":275428,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275433,"byte_end":275447,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275452,"byte_end":275455,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275460,"byte_end":275467,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275472,"byte_end":275513,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275518,"byte_end":275561,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275566,"byte_end":275591,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275596,"byte_end":275599,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275604,"byte_end":275660,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275665,"byte_end":275686,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275691,"byte_end":275694,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275699,"byte_end":275762,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275767,"byte_end":275821,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275826,"byte_end":275829,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275834,"byte_end":275910,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275915,"byte_end":275970,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":275975,"byte_end":275995,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276000,"byte_end":276019,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276024,"byte_end":276033,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276038,"byte_end":276043,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276048,"byte_end":276051,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276056,"byte_end":276117,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276122,"byte_end":276131,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276136,"byte_end":276143,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276338,"byte_end":276351,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276256,"byte_end":276326,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278342,"byte_end":278349,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276814,"byte_end":276887,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276892,"byte_end":276926,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276931,"byte_end":276934,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":276939,"byte_end":277014,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277019,"byte_end":277059,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277064,"byte_end":277067,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277072,"byte_end":277086,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277091,"byte_end":277094,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277099,"byte_end":277139,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277144,"byte_end":277147,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277152,"byte_end":277159,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277164,"byte_end":277205,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277210,"byte_end":277253,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277258,"byte_end":277283,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277288,"byte_end":277291,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277296,"byte_end":277343,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277348,"byte_end":277369,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277374,"byte_end":277427,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277432,"byte_end":277500,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277505,"byte_end":277578,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277583,"byte_end":277648,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277653,"byte_end":277737,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277742,"byte_end":277787,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277792,"byte_end":277801,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277806,"byte_end":277813,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277818,"byte_end":277821,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277826,"byte_end":277862,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277867,"byte_end":277870,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277875,"byte_end":277882,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277887,"byte_end":277928,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277933,"byte_end":277976,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":277981,"byte_end":278006,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278011,"byte_end":278014,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278019,"byte_end":278067,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278072,"byte_end":278093,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278098,"byte_end":278137,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278142,"byte_end":278207,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278212,"byte_end":278253,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278258,"byte_end":278304,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278309,"byte_end":278318,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278323,"byte_end":278330,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279373,"byte_end":279383,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278515,"byte_end":278588,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278593,"byte_end":278617,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278622,"byte_end":278625,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278630,"byte_end":278643,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278648,"byte_end":278651,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278656,"byte_end":278696,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278701,"byte_end":278704,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278709,"byte_end":278716,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278721,"byte_end":278762,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278767,"byte_end":278810,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278815,"byte_end":278840,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278845,"byte_end":278848,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278853,"byte_end":278900,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278905,"byte_end":278926,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278931,"byte_end":278984,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":278989,"byte_end":279051,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279056,"byte_end":279129,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279134,"byte_end":279193,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279198,"byte_end":279285,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279290,"byte_end":279335,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279340,"byte_end":279349,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279354,"byte_end":279361,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12300},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":280901,"byte_end":280905,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12303}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281963,"byte_end":281970,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12344}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12382},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283053,"byte_end":283059,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12386}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12431},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":284923,"byte_end":284931,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12435}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12480},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286548,"byte_end":286552,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12482},{"krate":0,"index":12483}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12528},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":288315,"byte_end":288324,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12532},{"krate":0,"index":12533},{"krate":0,"index":12534},{"krate":0,"index":12535},{"krate":0,"index":12536}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12601},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":291828,"byte_end":291832,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12603},{"krate":0,"index":12604}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":293868,"byte_end":293877,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12653},{"krate":0,"index":12654},{"krate":0,"index":12655},{"krate":0,"index":12656},{"krate":0,"index":12657}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12722},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":297357,"byte_end":297366,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12725},{"krate":0,"index":12726},{"krate":0,"index":12727},{"krate":0,"index":12728}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298650,"byte_end":298661,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298350,"byte_end":298404,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298409,"byte_end":298503,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298508,"byte_end":298571,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298576,"byte_end":298638,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299945,"byte_end":299956,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298798,"byte_end":298863,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298868,"byte_end":298925,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298930,"byte_end":298933,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298938,"byte_end":299003,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299008,"byte_end":299068,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299073,"byte_end":299076,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299081,"byte_end":299149,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299154,"byte_end":299197,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299202,"byte_end":299205,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299210,"byte_end":299224,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299229,"byte_end":299232,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299237,"byte_end":299244,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299249,"byte_end":299290,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299295,"byte_end":299319,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299324,"byte_end":299367,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299372,"byte_end":299400,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299405,"byte_end":299408,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299413,"byte_end":299451,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299456,"byte_end":299459,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299464,"byte_end":299482,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299487,"byte_end":299529,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299534,"byte_end":299549,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299554,"byte_end":299573,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299578,"byte_end":299603,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299608,"byte_end":299624,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299629,"byte_end":299662,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299667,"byte_end":299676,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299681,"byte_end":299688,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299693,"byte_end":299696,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299701,"byte_end":299750,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299755,"byte_end":299809,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299814,"byte_end":299817,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299822,"byte_end":299869,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299874,"byte_end":299907,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299912,"byte_end":299921,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":299926,"byte_end":299933,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":300132,"byte_end":300142,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":300035,"byte_end":300096,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":300101,"byte_end":300120,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12783},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302074,"byte_end":302078,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12787},{"krate":0,"index":12788},{"krate":0,"index":12789}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12848},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":304618,"byte_end":304621,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12851},{"krate":0,"index":12852},{"krate":0,"index":12853},{"krate":0,"index":12854}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305139,"byte_end":305146,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305031,"byte_end":305105,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305110,"byte_end":305127,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305502,"byte_end":305509,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305240,"byte_end":305308,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305313,"byte_end":305344,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305349,"byte_end":305352,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305357,"byte_end":305430,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305435,"byte_end":305490,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305884,"byte_end":305895,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305615,"byte_end":305690,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305695,"byte_end":305726,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305731,"byte_end":305734,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305739,"byte_end":305812,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":305817,"byte_end":305872,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306301,"byte_end":306311,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306065,"byte_end":306128,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306133,"byte_end":306136,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306141,"byte_end":306213,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306218,"byte_end":306289,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":309140,"byte_end":309146,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12907},{"krate":0,"index":12908},{"krate":0,"index":12909}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12957},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":312249,"byte_end":312260,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12959},{"krate":0,"index":12960},{"krate":0,"index":12961}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13009},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":315806,"byte_end":315810,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":13014},{"krate":0,"index":13015},{"krate":0,"index":13016}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13082},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":319234,"byte_end":319249,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13084},{"krate":0,"index":13085},{"krate":0,"index":13086}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13131},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":322560,"byte_end":322568,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13133},{"krate":0,"index":13134},{"krate":0,"index":13135}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13219},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":335349,"byte_end":335365,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":13221},{"krate":0,"index":13222},{"krate":0,"index":13223},{"krate":0,"index":13224},{"krate":0,"index":13225},{"krate":0,"index":13226},{"krate":0,"index":13227}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13288},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181021,"byte_end":181037,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":13292}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13377},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":342918,"byte_end":342935,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13381},{"krate":0,"index":13382},{"krate":0,"index":13383},{"krate":0,"index":13384}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13438},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346380,"byte_end":346391,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346217,"byte_end":346254,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346272,"byte_end":346320,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346718,"byte_end":346725,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346481,"byte_end":346549,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346554,"byte_end":346628,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346633,"byte_end":346706,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13445},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347400,"byte_end":347409,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":13448},{"krate":0,"index":13449}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347241,"byte_end":347276,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347294,"byte_end":347340,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347812,"byte_end":347819,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347575,"byte_end":347643,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347648,"byte_end":347722,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347727,"byte_end":347800,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4210},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350273,"byte_end":350285,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350074,"byte_end":350152,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350153,"byte_end":350213,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4214},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350295,"byte_end":350317,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4215},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350319,"byte_end":350337,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":351255,"byte_end":351266,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13456},{"krate":0,"index":13457}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182355,"byte_end":182364,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4336},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4385}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182244,"byte_end":182318,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182319,"byte_end":182344,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183274,"byte_end":183278,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182379,"byte_end":182445,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182450,"byte_end":182453,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182458,"byte_end":182526,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182531,"byte_end":182606,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182611,"byte_end":182686,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182691,"byte_end":182745,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182750,"byte_end":182825,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182830,"byte_end":182840,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182845,"byte_end":182848,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182853,"byte_end":182867,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182872,"byte_end":182875,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182880,"byte_end":182887,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182892,"byte_end":182933,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182938,"byte_end":182981,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182986,"byte_end":182989,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182994,"byte_end":183035,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183040,"byte_end":183043,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183048,"byte_end":183093,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183098,"byte_end":183143,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183148,"byte_end":183193,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183198,"byte_end":183240,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183245,"byte_end":183254,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183259,"byte_end":183266,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184517,"byte_end":184528,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183420,"byte_end":183492,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183497,"byte_end":183558,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183563,"byte_end":183566,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183571,"byte_end":183646,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183651,"byte_end":183705,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183710,"byte_end":183713,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183718,"byte_end":183791,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183796,"byte_end":183858,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183863,"byte_end":183938,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183943,"byte_end":183997,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184002,"byte_end":184077,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184082,"byte_end":184092,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184097,"byte_end":184100,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184105,"byte_end":184119,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184124,"byte_end":184127,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184132,"byte_end":184139,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184144,"byte_end":184185,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184190,"byte_end":184233,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184238,"byte_end":184241,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184246,"byte_end":184283,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184288,"byte_end":184291,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184296,"byte_end":184348,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184353,"byte_end":184383,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184388,"byte_end":184391,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184396,"byte_end":184448,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184453,"byte_end":184483,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184488,"byte_end":184497,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184502,"byte_end":184509,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4292},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185529,"byte_end":185532,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184693,"byte_end":184768,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184773,"byte_end":184796,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184801,"byte_end":184804,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184809,"byte_end":184881,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184886,"byte_end":184950,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184955,"byte_end":184992,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184997,"byte_end":185000,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185005,"byte_end":185081,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185086,"byte_end":185157,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185162,"byte_end":185183,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185188,"byte_end":185191,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185196,"byte_end":185210,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185215,"byte_end":185218,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185223,"byte_end":185230,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185235,"byte_end":185276,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185281,"byte_end":185324,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185329,"byte_end":185332,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185337,"byte_end":185374,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185379,"byte_end":185418,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185423,"byte_end":185426,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185431,"byte_end":185495,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185500,"byte_end":185509,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185514,"byte_end":185521,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187092,"byte_end":187101,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185699,"byte_end":185770,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185775,"byte_end":185794,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185799,"byte_end":185802,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185807,"byte_end":185872,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185877,"byte_end":185946,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185951,"byte_end":185962,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185967,"byte_end":185970,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185975,"byte_end":186050,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186055,"byte_end":186137,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186142,"byte_end":186160,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186165,"byte_end":186168,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186173,"byte_end":186196,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186201,"byte_end":186204,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186209,"byte_end":186284,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186289,"byte_end":186376,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186381,"byte_end":186437,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186442,"byte_end":186445,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186450,"byte_end":186462,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186467,"byte_end":186470,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186475,"byte_end":186544,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186549,"byte_end":186574,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186579,"byte_end":186582,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186587,"byte_end":186601,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186606,"byte_end":186609,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186614,"byte_end":186621,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186626,"byte_end":186667,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186672,"byte_end":186715,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186720,"byte_end":186723,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186728,"byte_end":186779,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186784,"byte_end":186787,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186792,"byte_end":186832,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186837,"byte_end":186840,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186845,"byte_end":186897,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186902,"byte_end":186954,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186959,"byte_end":187011,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187016,"byte_end":187058,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187063,"byte_end":187072,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187077,"byte_end":187084,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188332,"byte_end":188338,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187245,"byte_end":187317,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187322,"byte_end":187349,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187354,"byte_end":187357,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187362,"byte_end":187437,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187442,"byte_end":187513,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187518,"byte_end":187590,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187595,"byte_end":187669,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187674,"byte_end":187732,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187737,"byte_end":187740,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187745,"byte_end":187821,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187826,"byte_end":187900,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187905,"byte_end":187926,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187931,"byte_end":187934,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187939,"byte_end":187953,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187958,"byte_end":187961,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187966,"byte_end":187973,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187978,"byte_end":188019,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188024,"byte_end":188048,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188053,"byte_end":188096,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188101,"byte_end":188104,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188109,"byte_end":188147,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188152,"byte_end":188214,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188219,"byte_end":188222,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188227,"byte_end":188298,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188303,"byte_end":188312,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188317,"byte_end":188324,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189665,"byte_end":189675,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188566,"byte_end":188641,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188646,"byte_end":188722,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188727,"byte_end":188730,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188735,"byte_end":188810,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188815,"byte_end":188890,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188895,"byte_end":188971,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188976,"byte_end":189041,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189046,"byte_end":189049,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189054,"byte_end":189130,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189135,"byte_end":189209,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189214,"byte_end":189239,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189244,"byte_end":189247,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189252,"byte_end":189266,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189271,"byte_end":189278,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189283,"byte_end":189324,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189329,"byte_end":189372,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189377,"byte_end":189380,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189385,"byte_end":189423,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189428,"byte_end":189479,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189484,"byte_end":189535,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189540,"byte_end":189547,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189552,"byte_end":189555,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189560,"byte_end":189631,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189636,"byte_end":189645,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189650,"byte_end":189657,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190704,"byte_end":190708,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189907,"byte_end":189980,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189985,"byte_end":190013,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190018,"byte_end":190021,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190026,"byte_end":190100,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190105,"byte_end":190172,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190177,"byte_end":190222,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190227,"byte_end":190230,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190235,"byte_end":190311,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190316,"byte_end":190342,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190347,"byte_end":190350,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190355,"byte_end":190369,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190374,"byte_end":190377,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190382,"byte_end":190389,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190394,"byte_end":190435,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190440,"byte_end":190483,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190488,"byte_end":190491,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190496,"byte_end":190533,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190538,"byte_end":190593,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190598,"byte_end":190601,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190606,"byte_end":190670,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190675,"byte_end":190684,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190689,"byte_end":190696,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191642,"byte_end":191649,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190917,"byte_end":190971,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190976,"byte_end":191031,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191036,"byte_end":191039,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191044,"byte_end":191112,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191117,"byte_end":191120,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191125,"byte_end":191139,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191144,"byte_end":191147,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191152,"byte_end":191159,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191164,"byte_end":191205,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191210,"byte_end":191241,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191246,"byte_end":191281,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191286,"byte_end":191306,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191311,"byte_end":191314,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191319,"byte_end":191356,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191361,"byte_end":191364,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191369,"byte_end":191396,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191401,"byte_end":191425,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191430,"byte_end":191472,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191477,"byte_end":191486,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191491,"byte_end":191498,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191503,"byte_end":191506,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191511,"byte_end":191559,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191564,"byte_end":191608,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191613,"byte_end":191622,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191627,"byte_end":191634,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192768,"byte_end":192773,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191807,"byte_end":191858,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191863,"byte_end":191898,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191903,"byte_end":191906,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191911,"byte_end":191965,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191970,"byte_end":192027,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192032,"byte_end":192068,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192073,"byte_end":192076,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192081,"byte_end":192149,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192154,"byte_end":192157,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192162,"byte_end":192176,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192181,"byte_end":192184,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192189,"byte_end":192196,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192201,"byte_end":192242,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192247,"byte_end":192278,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192283,"byte_end":192318,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192323,"byte_end":192343,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192348,"byte_end":192351,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192356,"byte_end":192393,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192398,"byte_end":192401,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192406,"byte_end":192433,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192438,"byte_end":192481,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192486,"byte_end":192529,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192534,"byte_end":192577,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192582,"byte_end":192589,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192594,"byte_end":192597,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192602,"byte_end":192656,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192661,"byte_end":192695,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192700,"byte_end":192734,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192739,"byte_end":192748,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192753,"byte_end":192760,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194069,"byte_end":194075,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193034,"byte_end":193096,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193101,"byte_end":193165,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193170,"byte_end":193173,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193178,"byte_end":193242,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193247,"byte_end":193312,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193317,"byte_end":193363,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193368,"byte_end":193371,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193376,"byte_end":193425,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193430,"byte_end":193470,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193475,"byte_end":193478,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193483,"byte_end":193497,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193502,"byte_end":193505,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193510,"byte_end":193517,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193522,"byte_end":193563,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193568,"byte_end":193599,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193604,"byte_end":193639,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193644,"byte_end":193664,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193669,"byte_end":193672,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193677,"byte_end":193714,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193719,"byte_end":193722,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193727,"byte_end":193754,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193759,"byte_end":193790,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193795,"byte_end":193821,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193826,"byte_end":193892,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193897,"byte_end":193906,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193911,"byte_end":193918,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193923,"byte_end":193926,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193931,"byte_end":193966,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193971,"byte_end":193974,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193979,"byte_end":194035,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194040,"byte_end":194049,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194054,"byte_end":194061,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195095,"byte_end":195100,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194305,"byte_end":194371,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194376,"byte_end":194379,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194384,"byte_end":194407,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194412,"byte_end":194415,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194420,"byte_end":194496,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194501,"byte_end":194576,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194581,"byte_end":194658,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194663,"byte_end":194666,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194671,"byte_end":194683,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194688,"byte_end":194691,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194696,"byte_end":194770,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194775,"byte_end":194788,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194793,"byte_end":194796,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194801,"byte_end":194815,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194820,"byte_end":194823,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194828,"byte_end":194835,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194840,"byte_end":194881,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194886,"byte_end":194929,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194934,"byte_end":194937,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194942,"byte_end":194980,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194985,"byte_end":195022,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195027,"byte_end":195030,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195035,"byte_end":195061,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195066,"byte_end":195075,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195080,"byte_end":195087,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196056,"byte_end":196061,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195222,"byte_end":195253,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195258,"byte_end":195261,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195266,"byte_end":195333,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195338,"byte_end":195410,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195415,"byte_end":195472,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195477,"byte_end":195480,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195485,"byte_end":195499,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195504,"byte_end":195507,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195512,"byte_end":195519,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195524,"byte_end":195565,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195570,"byte_end":195613,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195618,"byte_end":195640,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195645,"byte_end":195692,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195697,"byte_end":195700,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195705,"byte_end":195746,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195751,"byte_end":195792,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195797,"byte_end":195838,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195843,"byte_end":195884,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195889,"byte_end":195930,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195935,"byte_end":195976,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195981,"byte_end":196022,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196027,"byte_end":196036,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196041,"byte_end":196048,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197011,"byte_end":197015,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196196,"byte_end":196263,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196268,"byte_end":196320,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196325,"byte_end":196328,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196333,"byte_end":196403,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196408,"byte_end":196484,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196489,"byte_end":196565,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196570,"byte_end":196640,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196645,"byte_end":196671,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196676,"byte_end":196679,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196684,"byte_end":196698,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196703,"byte_end":196706,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196711,"byte_end":196718,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196723,"byte_end":196764,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196769,"byte_end":196812,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196817,"byte_end":196820,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196825,"byte_end":196868,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196873,"byte_end":196942,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196947,"byte_end":196977,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196982,"byte_end":196991,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196996,"byte_end":197003,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197716,"byte_end":197719,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197250,"byte_end":197363,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197368,"byte_end":197371,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197376,"byte_end":197390,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197395,"byte_end":197398,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197403,"byte_end":197410,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197415,"byte_end":197456,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197461,"byte_end":197504,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197509,"byte_end":197512,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197517,"byte_end":197561,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197566,"byte_end":197635,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197640,"byte_end":197682,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197687,"byte_end":197696,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197701,"byte_end":197708,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198406,"byte_end":198409,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197934,"byte_end":198047,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198052,"byte_end":198055,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198060,"byte_end":198074,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198079,"byte_end":198082,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198087,"byte_end":198094,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198099,"byte_end":198140,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198145,"byte_end":198188,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198193,"byte_end":198196,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198201,"byte_end":198245,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198250,"byte_end":198322,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198327,"byte_end":198372,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198377,"byte_end":198386,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198391,"byte_end":198398,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199583,"byte_end":199590,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198624,"byte_end":198689,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198694,"byte_end":198697,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198702,"byte_end":198716,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198721,"byte_end":198724,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198729,"byte_end":198736,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198741,"byte_end":198782,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198787,"byte_end":198818,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198823,"byte_end":198858,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198863,"byte_end":198883,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198888,"byte_end":198891,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198896,"byte_end":198935,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198940,"byte_end":198979,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198984,"byte_end":199023,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199028,"byte_end":199031,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199036,"byte_end":199063,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199068,"byte_end":199107,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199112,"byte_end":199151,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199156,"byte_end":199163,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199168,"byte_end":199195,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199200,"byte_end":199239,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199244,"byte_end":199283,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199288,"byte_end":199295,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199300,"byte_end":199327,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199332,"byte_end":199373,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199378,"byte_end":199419,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199424,"byte_end":199431,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199436,"byte_end":199439,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199444,"byte_end":199503,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199508,"byte_end":199549,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199554,"byte_end":199563,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199568,"byte_end":199575,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200886,"byte_end":200903,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"pub fn flatten_unordered<impl Into<Option<usize>>: Into<Option<usize>>>(Self,\nimpl Into<Option<usize>>) -> FlattenUnordered<Self> where Self::Item: Stream +\nUnpin, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199767,"byte_end":199838,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199843,"byte_end":199874,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199879,"byte_end":199882,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199887,"byte_end":199901,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199906,"byte_end":199909,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199914,"byte_end":199921,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199926,"byte_end":199967,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199972,"byte_end":200003,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200008,"byte_end":200043,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200048,"byte_end":200068,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200073,"byte_end":200076,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200081,"byte_end":200120,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200125,"byte_end":200164,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200169,"byte_end":200208,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200213,"byte_end":200216,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200221,"byte_end":200248,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200253,"byte_end":200292,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200297,"byte_end":200336,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200341,"byte_end":200348,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200353,"byte_end":200380,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200385,"byte_end":200424,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200429,"byte_end":200468,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200473,"byte_end":200480,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200485,"byte_end":200512,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200517,"byte_end":200558,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200563,"byte_end":200604,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200609,"byte_end":200616,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200621,"byte_end":200624,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200629,"byte_end":200706,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200711,"byte_end":200729,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200734,"byte_end":200737,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200742,"byte_end":200783,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200788,"byte_end":200797,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200802,"byte_end":200809,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200814,"byte_end":200848,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200853,"byte_end":200878,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202189,"byte_end":202197,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201103,"byte_end":201175,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201180,"byte_end":201183,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201188,"byte_end":201265,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201270,"byte_end":201345,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201350,"byte_end":201426,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201431,"byte_end":201434,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201439,"byte_end":201522,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201527,"byte_end":201610,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201615,"byte_end":201618,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201623,"byte_end":201699,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201704,"byte_end":201780,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201785,"byte_end":201806,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201811,"byte_end":201814,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201819,"byte_end":201833,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201838,"byte_end":201841,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201846,"byte_end":201853,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201858,"byte_end":201899,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201904,"byte_end":201947,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201952,"byte_end":201955,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201960,"byte_end":201997,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202002,"byte_end":202069,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202074,"byte_end":202077,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202082,"byte_end":202155,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202160,"byte_end":202169,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202174,"byte_end":202181,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204255,"byte_end":204273,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"pub fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> FlatMapUnordered<Self, U, F> where U: Stream + Unpin,\nF: FnMut(Self::Item) -> U, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202400,"byte_end":202471,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202476,"byte_end":202550,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202555,"byte_end":202569,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202574,"byte_end":202577,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202582,"byte_end":202649,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202654,"byte_end":202723,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202728,"byte_end":202797,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202802,"byte_end":202869,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202874,"byte_end":202927,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202932,"byte_end":202935,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202940,"byte_end":203013,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203018,"byte_end":203095,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203100,"byte_end":203164,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203169,"byte_end":203236,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203241,"byte_end":203310,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203315,"byte_end":203387,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203392,"byte_end":203395,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203400,"byte_end":203470,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203475,"byte_end":203544,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203549,"byte_end":203602,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203607,"byte_end":203610,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203615,"byte_end":203681,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203686,"byte_end":203722,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203727,"byte_end":203730,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203735,"byte_end":203749,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203754,"byte_end":203757,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203762,"byte_end":203769,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203774,"byte_end":203815,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203820,"byte_end":203863,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203868,"byte_end":203871,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203876,"byte_end":203912,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203917,"byte_end":203993,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":203998,"byte_end":204052,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204057,"byte_end":204075,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204080,"byte_end":204083,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204088,"byte_end":204152,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204157,"byte_end":204166,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204171,"byte_end":204178,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204183,"byte_end":204217,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204222,"byte_end":204247,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205360,"byte_end":205364,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204551,"byte_end":204622,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204627,"byte_end":204657,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204662,"byte_end":204665,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204670,"byte_end":204745,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204750,"byte_end":204821,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204826,"byte_end":204866,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204871,"byte_end":204874,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204879,"byte_end":204893,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204898,"byte_end":204901,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204906,"byte_end":204913,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204918,"byte_end":204959,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204964,"byte_end":204988,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204993,"byte_end":205036,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205041,"byte_end":205044,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205049,"byte_end":205087,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205092,"byte_end":205095,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205100,"byte_end":205144,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205149,"byte_end":205169,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205174,"byte_end":205237,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205242,"byte_end":205249,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205254,"byte_end":205257,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205262,"byte_end":205326,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205331,"byte_end":205340,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205345,"byte_end":205352,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206411,"byte_end":206421,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205633,"byte_end":205707,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205712,"byte_end":205735,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205740,"byte_end":205743,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205748,"byte_end":205821,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205826,"byte_end":205898,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205903,"byte_end":205980,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205985,"byte_end":205996,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206001,"byte_end":206004,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206009,"byte_end":206023,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206028,"byte_end":206031,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206036,"byte_end":206043,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206048,"byte_end":206089,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206094,"byte_end":206118,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206123,"byte_end":206166,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206171,"byte_end":206174,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206179,"byte_end":206217,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206222,"byte_end":206225,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206230,"byte_end":206293,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206298,"byte_end":206301,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206306,"byte_end":206377,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206382,"byte_end":206391,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206396,"byte_end":206403,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207410,"byte_end":207420,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206655,"byte_end":206731,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206736,"byte_end":206759,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206764,"byte_end":206767,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206772,"byte_end":206847,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206852,"byte_end":206924,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206929,"byte_end":206996,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207001,"byte_end":207004,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207009,"byte_end":207023,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207028,"byte_end":207031,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207036,"byte_end":207043,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207048,"byte_end":207089,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207094,"byte_end":207118,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207123,"byte_end":207166,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207171,"byte_end":207174,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207179,"byte_end":207217,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207222,"byte_end":207225,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207230,"byte_end":207293,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207298,"byte_end":207301,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207306,"byte_end":207376,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207381,"byte_end":207390,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207395,"byte_end":207402,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208936,"byte_end":208946,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207654,"byte_end":207724,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207729,"byte_end":207732,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207737,"byte_end":207808,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207813,"byte_end":207885,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207890,"byte_end":207960,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207965,"byte_end":207968,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207973,"byte_end":208044,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208049,"byte_end":208135,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208140,"byte_end":208207,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208212,"byte_end":208276,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208281,"byte_end":208284,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208289,"byte_end":208303,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208308,"byte_end":208311,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208316,"byte_end":208323,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208328,"byte_end":208369,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208374,"byte_end":208398,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208403,"byte_end":208446,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208451,"byte_end":208479,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208484,"byte_end":208487,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208492,"byte_end":208530,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208535,"byte_end":208538,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208543,"byte_end":208561,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208566,"byte_end":208608,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208613,"byte_end":208628,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208633,"byte_end":208652,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208657,"byte_end":208682,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208687,"byte_end":208703,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208708,"byte_end":208735,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208740,"byte_end":208749,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208754,"byte_end":208761,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208766,"byte_end":208769,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208774,"byte_end":208819,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208824,"byte_end":208827,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208832,"byte_end":208902,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208907,"byte_end":208916,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208921,"byte_end":208928,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210185,"byte_end":210193,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209127,"byte_end":209198,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209203,"byte_end":209246,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209251,"byte_end":209254,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209259,"byte_end":209334,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209339,"byte_end":209409,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209414,"byte_end":209452,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209457,"byte_end":209460,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209465,"byte_end":209540,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209545,"byte_end":209588,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209593,"byte_end":209596,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209601,"byte_end":209674,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209679,"byte_end":209722,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209727,"byte_end":209730,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209735,"byte_end":209749,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209754,"byte_end":209757,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209762,"byte_end":209769,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209774,"byte_end":209815,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209820,"byte_end":209844,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209849,"byte_end":209892,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209897,"byte_end":209900,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209905,"byte_end":209923,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209928,"byte_end":209931,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209936,"byte_end":209941,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":209946,"byte_end":210007,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210012,"byte_end":210034,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210039,"byte_end":210068,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210073,"byte_end":210084,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210089,"byte_end":210107,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210112,"byte_end":210117,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210122,"byte_end":210125,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210130,"byte_end":210151,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210156,"byte_end":210165,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210170,"byte_end":210177,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212355,"byte_end":212374,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210412,"byte_end":210483,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210488,"byte_end":210562,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210567,"byte_end":210581,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210586,"byte_end":210589,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210594,"byte_end":210657,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210662,"byte_end":210733,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210738,"byte_end":210790,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210795,"byte_end":210798,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210803,"byte_end":210878,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210883,"byte_end":210953,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":210958,"byte_end":211022,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211027,"byte_end":211030,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211035,"byte_end":211106,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211111,"byte_end":211181,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211186,"byte_end":211247,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211252,"byte_end":211319,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211324,"byte_end":211393,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211398,"byte_end":211470,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211475,"byte_end":211478,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211483,"byte_end":211558,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211563,"byte_end":211620,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211625,"byte_end":211628,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211633,"byte_end":211647,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211652,"byte_end":211655,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211660,"byte_end":211667,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211672,"byte_end":211713,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211718,"byte_end":211752,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211757,"byte_end":211800,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211805,"byte_end":211808,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211813,"byte_end":211853,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211858,"byte_end":211898,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211903,"byte_end":211943,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211948,"byte_end":211951,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":211956,"byte_end":212024,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212029,"byte_end":212051,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212056,"byte_end":212081,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212086,"byte_end":212116,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212121,"byte_end":212130,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212135,"byte_end":212141,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212146,"byte_end":212172,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212177,"byte_end":212203,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212208,"byte_end":212234,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212239,"byte_end":212253,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212258,"byte_end":212266,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212271,"byte_end":212278,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212283,"byte_end":212317,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212322,"byte_end":212347,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213199,"byte_end":213203,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212691,"byte_end":212762,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212767,"byte_end":212770,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212775,"byte_end":212848,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212853,"byte_end":212888,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212893,"byte_end":212896,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212901,"byte_end":212915,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212920,"byte_end":212923,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212928,"byte_end":212935,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212940,"byte_end":212981,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":212986,"byte_end":213029,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213034,"byte_end":213037,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213042,"byte_end":213088,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213093,"byte_end":213096,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213101,"byte_end":213165,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213170,"byte_end":213179,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213184,"byte_end":213191,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213868,"byte_end":213872,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213341,"byte_end":213413,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213418,"byte_end":213421,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213426,"byte_end":213499,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213504,"byte_end":213550,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213555,"byte_end":213558,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213563,"byte_end":213577,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213582,"byte_end":213585,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213590,"byte_end":213597,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213602,"byte_end":213643,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213648,"byte_end":213691,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213696,"byte_end":213699,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213704,"byte_end":213750,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213755,"byte_end":213758,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213763,"byte_end":213834,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213839,"byte_end":213848,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":213853,"byte_end":213860,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4358},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215493,"byte_end":215497,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214010,"byte_end":214081,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214086,"byte_end":214159,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214164,"byte_end":214202,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214207,"byte_end":214210,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214215,"byte_end":214269,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214274,"byte_end":214346,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214351,"byte_end":214427,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214432,"byte_end":214500,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214505,"byte_end":214581,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214586,"byte_end":214608,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214613,"byte_end":214616,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214621,"byte_end":214688,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214693,"byte_end":214761,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214766,"byte_end":214779,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214784,"byte_end":214787,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214792,"byte_end":214806,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214811,"byte_end":214814,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214819,"byte_end":214826,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214831,"byte_end":214874,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214879,"byte_end":214922,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214927,"byte_end":214955,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214960,"byte_end":214963,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214968,"byte_end":214986,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":214991,"byte_end":215029,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215034,"byte_end":215049,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215054,"byte_end":215071,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215076,"byte_end":215118,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215123,"byte_end":215158,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215163,"byte_end":215207,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215212,"byte_end":215221,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215226,"byte_end":215240,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215245,"byte_end":215248,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215253,"byte_end":215296,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215301,"byte_end":215338,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215343,"byte_end":215380,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215385,"byte_end":215419,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215424,"byte_end":215458,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215463,"byte_end":215473,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215478,"byte_end":215485,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216426,"byte_end":216432,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215622,"byte_end":215669,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215674,"byte_end":215677,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215682,"byte_end":215756,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215761,"byte_end":215798,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215803,"byte_end":215806,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215811,"byte_end":215825,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215830,"byte_end":215833,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215838,"byte_end":215845,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215850,"byte_end":215891,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215896,"byte_end":215939,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215944,"byte_end":215947,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215952,"byte_end":215992,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":215997,"byte_end":216000,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216005,"byte_end":216034,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216039,"byte_end":216067,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216072,"byte_end":216129,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216134,"byte_end":216161,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216166,"byte_end":216189,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216194,"byte_end":216197,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216202,"byte_end":216237,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216242,"byte_end":216270,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216275,"byte_end":216332,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216337,"byte_end":216364,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216369,"byte_end":216392,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216397,"byte_end":216406,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216411,"byte_end":216418,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4360},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218191,"byte_end":218203,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216483,"byte_end":216537,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216542,"byte_end":216545,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216550,"byte_end":216625,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216630,"byte_end":216633,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216638,"byte_end":216713,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216718,"byte_end":216792,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216797,"byte_end":216871,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216876,"byte_end":216925,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216930,"byte_end":216933,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":216938,"byte_end":217013,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217018,"byte_end":217088,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217093,"byte_end":217160,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217165,"byte_end":217237,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217242,"byte_end":217311,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217316,"byte_end":217331,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217336,"byte_end":217339,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217344,"byte_end":217408,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217413,"byte_end":217470,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217475,"byte_end":217478,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217483,"byte_end":217497,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217502,"byte_end":217505,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217510,"byte_end":217517,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217522,"byte_end":217563,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217568,"byte_end":217611,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217616,"byte_end":217619,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217624,"byte_end":217686,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217691,"byte_end":217721,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217726,"byte_end":217780,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217785,"byte_end":217815,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217820,"byte_end":217869,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217874,"byte_end":217877,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217882,"byte_end":217944,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217949,"byte_end":217971,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":217976,"byte_end":217996,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218001,"byte_end":218043,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218048,"byte_end":218053,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218058,"byte_end":218091,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218096,"byte_end":218129,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218134,"byte_end":218143,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218148,"byte_end":218155,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218160,"byte_end":218183,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218579,"byte_end":218584,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218350,"byte_end":218391,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218396,"byte_end":218399,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218404,"byte_end":218479,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218484,"byte_end":218541,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218546,"byte_end":218571,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219040,"byte_end":219051,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218739,"byte_end":218780,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218785,"byte_end":218788,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218793,"byte_end":218852,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218857,"byte_end":218860,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218865,"byte_end":218940,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":218945,"byte_end":219002,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219007,"byte_end":219032,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219944,"byte_end":219952,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219204,"byte_end":219267,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219272,"byte_end":219275,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219280,"byte_end":219355,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219360,"byte_end":219436,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219441,"byte_end":219514,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219519,"byte_end":219592,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219597,"byte_end":219639,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219644,"byte_end":219647,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219652,"byte_end":219717,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219722,"byte_end":219725,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219730,"byte_end":219805,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219810,"byte_end":219867,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219872,"byte_end":219906,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":219911,"byte_end":219936,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221632,"byte_end":221648,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220146,"byte_end":220221,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220226,"byte_end":220229,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220234,"byte_end":220309,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220314,"byte_end":220388,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220393,"byte_end":220465,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220470,"byte_end":220544,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220549,"byte_end":220578,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220583,"byte_end":220586,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220591,"byte_end":220656,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220661,"byte_end":220664,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220669,"byte_end":220744,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220749,"byte_end":220806,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220811,"byte_end":220814,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220819,"byte_end":220833,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220838,"byte_end":220841,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220846,"byte_end":220853,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220858,"byte_end":220899,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220904,"byte_end":220938,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220943,"byte_end":220986,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220991,"byte_end":220994,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":220999,"byte_end":221049,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221054,"byte_end":221104,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221109,"byte_end":221112,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221117,"byte_end":221184,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221189,"byte_end":221251,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221256,"byte_end":221259,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221264,"byte_end":221289,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221294,"byte_end":221348,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221353,"byte_end":221356,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221361,"byte_end":221386,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221391,"byte_end":221445,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221450,"byte_end":221453,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221458,"byte_end":221502,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221507,"byte_end":221543,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221548,"byte_end":221555,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221560,"byte_end":221594,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221599,"byte_end":221624,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222544,"byte_end":222547,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221856,"byte_end":221904,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221909,"byte_end":221912,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221917,"byte_end":221990,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":221995,"byte_end":222067,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222072,"byte_end":222085,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222090,"byte_end":222093,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222098,"byte_end":222112,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222117,"byte_end":222120,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222125,"byte_end":222132,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222137,"byte_end":222178,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222183,"byte_end":222226,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222231,"byte_end":222234,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222239,"byte_end":222277,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222282,"byte_end":222321,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222326,"byte_end":222329,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222334,"byte_end":222368,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222373,"byte_end":222414,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222419,"byte_end":222447,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222452,"byte_end":222502,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222507,"byte_end":222516,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222521,"byte_end":222528,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222533,"byte_end":222536,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223455,"byte_end":223460,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222728,"byte_end":222765,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222770,"byte_end":222773,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222778,"byte_end":222849,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222854,"byte_end":222930,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222935,"byte_end":222938,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222943,"byte_end":222950,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":222955,"byte_end":222996,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223001,"byte_end":223044,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223049,"byte_end":223052,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223057,"byte_end":223114,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223119,"byte_end":223175,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223180,"byte_end":223183,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223188,"byte_end":223228,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223233,"byte_end":223236,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223241,"byte_end":223289,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223294,"byte_end":223322,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223327,"byte_end":223342,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223347,"byte_end":223366,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223371,"byte_end":223389,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223394,"byte_end":223409,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223414,"byte_end":223421,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223426,"byte_end":223435,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223440,"byte_end":223447,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223798,"byte_end":223806,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223652,"byte_end":223707,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223712,"byte_end":223715,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223720,"byte_end":223790,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224841,"byte_end":224847,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":223939,"byte_end":224006,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224011,"byte_end":224014,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224019,"byte_end":224093,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224098,"byte_end":224170,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224175,"byte_end":224227,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224232,"byte_end":224235,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224240,"byte_end":224313,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224318,"byte_end":224392,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224397,"byte_end":224472,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224477,"byte_end":224549,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224554,"byte_end":224566,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224571,"byte_end":224574,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224579,"byte_end":224654,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224659,"byte_end":224716,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224721,"byte_end":224724,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224729,"byte_end":224741,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224746,"byte_end":224749,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224754,"byte_end":224803,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":224808,"byte_end":224833,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225944,"byte_end":225956,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225008,"byte_end":225081,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225086,"byte_end":225089,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225094,"byte_end":225167,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225172,"byte_end":225242,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225247,"byte_end":225322,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225327,"byte_end":225404,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225409,"byte_end":225437,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225442,"byte_end":225445,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225450,"byte_end":225523,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225528,"byte_end":225603,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225608,"byte_end":225669,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225674,"byte_end":225677,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225682,"byte_end":225757,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225762,"byte_end":225819,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225824,"byte_end":225827,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225832,"byte_end":225844,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225849,"byte_end":225852,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225857,"byte_end":225906,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":225911,"byte_end":225936,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4374},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226994,"byte_end":227001,"line_start":1546,"line_end":1546,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226127,"byte_end":226202,"line_start":1533,"line_end":1533,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226207,"byte_end":226266,"line_start":1534,"line_end":1534,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226271,"byte_end":226274,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226279,"byte_end":226352,"line_start":1536,"line_end":1536,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226357,"byte_end":226428,"line_start":1537,"line_end":1537,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226433,"byte_end":226506,"line_start":1538,"line_end":1538,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226511,"byte_end":226585,"line_start":1539,"line_end":1539,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226590,"byte_end":226660,"line_start":1540,"line_end":1540,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226665,"byte_end":226738,"line_start":1541,"line_end":1541,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226743,"byte_end":226819,"line_start":1542,"line_end":1542,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226824,"byte_end":226905,"line_start":1543,"line_end":1543,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":226910,"byte_end":226934,"line_start":1544,"line_end":1544,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4376},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228136,"byte_end":228141,"line_start":1570,"line_end":1570,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227559,"byte_end":227631,"line_start":1557,"line_end":1557,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227636,"byte_end":227648,"line_start":1558,"line_end":1558,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227653,"byte_end":227656,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227661,"byte_end":227734,"line_start":1560,"line_end":1560,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227739,"byte_end":227801,"line_start":1561,"line_end":1561,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227806,"byte_end":227828,"line_start":1562,"line_end":1562,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227833,"byte_end":227836,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227841,"byte_end":227916,"line_start":1564,"line_end":1564,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227921,"byte_end":227978,"line_start":1565,"line_end":1565,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":227983,"byte_end":228007,"line_start":1566,"line_end":1566,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228064,"byte_end":228098,"line_start":1568,"line_end":1568,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228103,"byte_end":228128,"line_start":1569,"line_end":1569,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4378},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228753,"byte_end":228760,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228450,"byte_end":228523,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228528,"byte_end":228531,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228536,"byte_end":228605,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228610,"byte_end":228679,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228684,"byte_end":228745,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229216,"byte_end":229227,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":228937,"byte_end":229012,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229017,"byte_end":229038,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229043,"byte_end":229046,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229051,"byte_end":229131,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229136,"byte_end":229208,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229680,"byte_end":229692,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229401,"byte_end":229477,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229482,"byte_end":229503,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229508,"byte_end":229511,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229516,"byte_end":229595,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229600,"byte_end":229672,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229968,"byte_end":229983,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229867,"byte_end":229938,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":229943,"byte_end":229960,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232084,"byte_end":232100,"line_start":1677,"line_end":1677,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":4289},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230130,"byte_end":230205,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230210,"byte_end":230220,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230225,"byte_end":230228,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230233,"byte_end":230306,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230311,"byte_end":230379,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230384,"byte_end":230432,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230437,"byte_end":230512,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230517,"byte_end":230593,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230598,"byte_end":230624,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230629,"byte_end":230632,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230637,"byte_end":230710,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230715,"byte_end":230785,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230790,"byte_end":230830,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230835,"byte_end":230838,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230843,"byte_end":230897,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230902,"byte_end":230986,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230991,"byte_end":230994,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":230999,"byte_end":231013,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231018,"byte_end":231021,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231026,"byte_end":231033,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231038,"byte_end":231079,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231084,"byte_end":231118,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231123,"byte_end":231178,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231183,"byte_end":231186,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231191,"byte_end":231226,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231231,"byte_end":231281,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231286,"byte_end":231308,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231313,"byte_end":231323,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231328,"byte_end":231345,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231350,"byte_end":231376,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231381,"byte_end":231436,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231441,"byte_end":231470,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231475,"byte_end":231538,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231543,"byte_end":231589,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231594,"byte_end":231608,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231613,"byte_end":231682,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231687,"byte_end":231712,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231717,"byte_end":231770,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231775,"byte_end":231804,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231809,"byte_end":231822,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231827,"byte_end":231897,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231902,"byte_end":231961,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":231966,"byte_end":231996,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232001,"byte_end":232010,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232015,"byte_end":232020,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232025,"byte_end":232050,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232055,"byte_end":232064,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":232069,"byte_end":232076,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13498},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":391685,"byte_end":391692,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13502},{"krate":0,"index":13503},{"krate":0,"index":13504}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13566},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353423,"byte_end":353430,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13569}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13644},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353678,"byte_end":353687,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13647}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13722},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353988,"byte_end":353998,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13725}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394434,"byte_end":394444,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13799}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13844},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354424,"byte_end":354429,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13847}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354706,"byte_end":354712,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13925}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13997},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":395792,"byte_end":395798,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":14001},{"krate":0,"index":14002},{"krate":0,"index":14003}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14062},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398634,"byte_end":398641,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":14065}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398467,"byte_end":398537,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398555,"byte_end":398622,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":14070},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":399726,"byte_end":399736,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":14074},{"krate":0,"index":14075},{"krate":0,"index":14076}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":401622,"byte_end":401631,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":14131},{"krate":0,"index":14132},{"krate":0,"index":14133},{"krate":0,"index":14134}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14196},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":404766,"byte_end":404778,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":14200},{"krate":0,"index":14201},{"krate":0,"index":14202}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14261},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":407783,"byte_end":407793,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":14263},{"krate":0,"index":14264}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14309},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":409971,"byte_end":409981,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":14312},{"krate":0,"index":14313}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14358},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":411330,"byte_end":411339,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":14360},{"krate":0,"index":14361}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14398},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":412850,"byte_end":412859,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":14400},{"krate":0,"index":14401},{"krate":0,"index":14402}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14450},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416111,"byte_end":416125,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415888,"byte_end":415972,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415973,"byte_end":415976,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415977,"byte_end":416074,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14454},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416132,"byte_end":416142,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14455},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416144,"byte_end":416149,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14471},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":416987,"byte_end":416994,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14476},{"krate":0,"index":14477},{"krate":0,"index":14478},{"krate":0,"index":14479}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5297},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421442,"byte_end":421452,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419585,"byte_end":419661,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419662,"byte_end":419665,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419666,"byte_end":419742,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419743,"byte_end":419813,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419814,"byte_end":419873,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419874,"byte_end":419877,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419878,"byte_end":419956,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":419957,"byte_end":420034,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420035,"byte_end":420099,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420100,"byte_end":420103,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420104,"byte_end":420176,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420177,"byte_end":420255,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420256,"byte_end":420285,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420286,"byte_end":420289,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420290,"byte_end":420367,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420368,"byte_end":420432,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420433,"byte_end":420485,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420486,"byte_end":420489,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420490,"byte_end":420567,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420568,"byte_end":420640,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420641,"byte_end":420710,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420711,"byte_end":420789,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420790,"byte_end":420793,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420794,"byte_end":420807,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420808,"byte_end":420811,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420812,"byte_end":420819,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420820,"byte_end":420853,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420854,"byte_end":420877,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420878,"byte_end":420919,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420920,"byte_end":420966,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420967,"byte_end":420970,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":420971,"byte_end":421030,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421031,"byte_end":421053,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421054,"byte_end":421088,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421089,"byte_end":421098,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421099,"byte_end":421102,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421103,"byte_end":421126,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421127,"byte_end":421166,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421167,"byte_end":421203,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421204,"byte_end":421247,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421248,"byte_end":421264,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421265,"byte_end":421285,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421286,"byte_end":421295,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421296,"byte_end":421303,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421304,"byte_end":421307,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421308,"byte_end":421373,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421374,"byte_end":421416,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421417,"byte_end":421426,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421427,"byte_end":421434,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14540},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421815,"byte_end":421824,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14544},{"krate":0,"index":14545},{"krate":0,"index":14546}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14597},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":423732,"byte_end":423744,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14601},{"krate":0,"index":14602},{"krate":0,"index":14603},{"krate":0,"index":14604},{"krate":0,"index":14605}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14670},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":427288,"byte_end":427300,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14674},{"krate":0,"index":14675},{"krate":0,"index":14676},{"krate":0,"index":14677},{"krate":0,"index":14678}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14743},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":431076,"byte_end":431094,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14745},{"krate":0,"index":14746},{"krate":0,"index":14747}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":433634,"byte_end":433645,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14797},{"krate":0,"index":14798},{"krate":0,"index":14799}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14847},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":436177,"byte_end":436197,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14851},{"krate":0,"index":14852},{"krate":0,"index":14853},{"krate":0,"index":14854}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5648},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357921,"byte_end":357933,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5649},{"krate":0,"index":5651},{"krate":0,"index":5654},{"krate":0,"index":5657},{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":5665},{"krate":0,"index":5667},{"krate":0,"index":5668},{"krate":0,"index":5669},{"krate":0,"index":5672},{"krate":0,"index":5675},{"krate":0,"index":5678},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5700}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357859,"byte_end":357910,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358475,"byte_end":358483,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357951,"byte_end":358025,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358030,"byte_end":358056,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358061,"byte_end":358064,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358069,"byte_end":358083,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358088,"byte_end":358091,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358096,"byte_end":358103,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358108,"byte_end":358149,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358154,"byte_end":358200,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358205,"byte_end":358208,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358213,"byte_end":358233,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358238,"byte_end":358283,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358288,"byte_end":358319,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358324,"byte_end":358327,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358332,"byte_end":358386,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358391,"byte_end":358442,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358447,"byte_end":358455,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358460,"byte_end":358467,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5651},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359179,"byte_end":359185,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358659,"byte_end":358732,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358737,"byte_end":358768,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358773,"byte_end":358776,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358781,"byte_end":358795,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358800,"byte_end":358803,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358808,"byte_end":358815,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358820,"byte_end":358861,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358866,"byte_end":358912,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358917,"byte_end":358920,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358925,"byte_end":358945,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358950,"byte_end":358991,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358996,"byte_end":359027,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359032,"byte_end":359035,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359040,"byte_end":359093,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359098,"byte_end":359146,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359151,"byte_end":359159,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359164,"byte_end":359171,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5654},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359894,"byte_end":359901,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359375,"byte_end":359446,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359451,"byte_end":359482,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359487,"byte_end":359490,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359495,"byte_end":359509,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359514,"byte_end":359517,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359522,"byte_end":359529,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359534,"byte_end":359575,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359580,"byte_end":359626,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359631,"byte_end":359634,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359639,"byte_end":359659,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359664,"byte_end":359705,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359710,"byte_end":359742,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359747,"byte_end":359750,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359755,"byte_end":359808,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359813,"byte_end":359861,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359866,"byte_end":359874,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359879,"byte_end":359886,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5657},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361506,"byte_end":361514,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360093,"byte_end":360169,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360174,"byte_end":360214,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360219,"byte_end":360222,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360227,"byte_end":360303,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360308,"byte_end":360384,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360389,"byte_end":360462,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360467,"byte_end":360509,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360514,"byte_end":360517,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360522,"byte_end":360595,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360600,"byte_end":360631,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360636,"byte_end":360639,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360644,"byte_end":360718,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360723,"byte_end":360797,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360802,"byte_end":360818,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360823,"byte_end":360826,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360831,"byte_end":360902,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360907,"byte_end":360933,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360938,"byte_end":360941,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360946,"byte_end":361018,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361023,"byte_end":361072,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361077,"byte_end":361080,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361085,"byte_end":361099,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361104,"byte_end":361107,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361112,"byte_end":361119,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361124,"byte_end":361155,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361160,"byte_end":361184,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361189,"byte_end":361227,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361232,"byte_end":361235,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361240,"byte_end":361296,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361301,"byte_end":361304,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361309,"byte_end":361344,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361349,"byte_end":361388,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361393,"byte_end":361417,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361422,"byte_end":361438,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361443,"byte_end":361459,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361464,"byte_end":361474,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361479,"byte_end":361486,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361491,"byte_end":361498,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5660},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362666,"byte_end":362673,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361767,"byte_end":361832,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361837,"byte_end":361886,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361891,"byte_end":361894,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361899,"byte_end":361978,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":361983,"byte_end":362057,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362062,"byte_end":362138,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362143,"byte_end":362188,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362193,"byte_end":362196,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362201,"byte_end":362276,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362281,"byte_end":362321,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362326,"byte_end":362329,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362334,"byte_end":362443,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362448,"byte_end":362522,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362527,"byte_end":362543,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362548,"byte_end":362551,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362556,"byte_end":362627,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362632,"byte_end":362658,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5663},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363225,"byte_end":363235,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":362922,"byte_end":362996,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363001,"byte_end":363011,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363016,"byte_end":363019,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363024,"byte_end":363094,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363099,"byte_end":363175,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363180,"byte_end":363217,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5665},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363724,"byte_end":363735,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363433,"byte_end":363512,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363517,"byte_end":363520,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363525,"byte_end":363595,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363600,"byte_end":363674,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363679,"byte_end":363716,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5667},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364656,"byte_end":364667,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363938,"byte_end":363991,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":363996,"byte_end":364040,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364045,"byte_end":364048,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364053,"byte_end":364102,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364107,"byte_end":364180,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364185,"byte_end":364205,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364210,"byte_end":364213,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364218,"byte_end":364232,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364237,"byte_end":364240,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364245,"byte_end":364252,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364257,"byte_end":364316,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364321,"byte_end":364324,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364329,"byte_end":364348,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364353,"byte_end":364371,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364376,"byte_end":364448,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364453,"byte_end":364483,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364488,"byte_end":364495,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364500,"byte_end":364574,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364579,"byte_end":364582,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364587,"byte_end":364636,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364641,"byte_end":364648,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365562,"byte_end":365570,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364823,"byte_end":364897,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364902,"byte_end":364976,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364981,"byte_end":364993,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":364998,"byte_end":365001,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365006,"byte_end":365073,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365078,"byte_end":365150,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365155,"byte_end":365194,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365199,"byte_end":365202,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365207,"byte_end":365221,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365226,"byte_end":365229,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365234,"byte_end":365241,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365246,"byte_end":365287,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365292,"byte_end":365338,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365343,"byte_end":365346,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365351,"byte_end":365408,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365413,"byte_end":365416,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365421,"byte_end":365475,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365480,"byte_end":365529,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365534,"byte_end":365542,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365547,"byte_end":365554,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366922,"byte_end":366934,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365737,"byte_end":365806,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365811,"byte_end":365867,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365872,"byte_end":365875,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365880,"byte_end":365955,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":365960,"byte_end":366030,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366035,"byte_end":366073,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366078,"byte_end":366081,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366086,"byte_end":366164,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366169,"byte_end":366229,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366234,"byte_end":366291,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366296,"byte_end":366363,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366368,"byte_end":366398,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366403,"byte_end":366406,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366411,"byte_end":366425,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366430,"byte_end":366433,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366438,"byte_end":366445,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366450,"byte_end":366491,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366496,"byte_end":366520,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366525,"byte_end":366571,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366576,"byte_end":366579,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366584,"byte_end":366605,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366610,"byte_end":366613,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366618,"byte_end":366623,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366628,"byte_end":366689,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366694,"byte_end":366716,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366721,"byte_end":366785,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366790,"byte_end":366801,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366806,"byte_end":366845,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366850,"byte_end":366855,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366860,"byte_end":366863,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366868,"byte_end":366889,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366894,"byte_end":366902,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":366907,"byte_end":366914,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5672},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367947,"byte_end":367961,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367198,"byte_end":367272,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367277,"byte_end":367300,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367305,"byte_end":367308,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367313,"byte_end":367344,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367349,"byte_end":367426,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367431,"byte_end":367460,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367465,"byte_end":367468,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367473,"byte_end":367487,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367492,"byte_end":367495,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367500,"byte_end":367507,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367512,"byte_end":367553,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367558,"byte_end":367582,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367587,"byte_end":367633,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367638,"byte_end":367641,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367646,"byte_end":367715,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367720,"byte_end":367790,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367795,"byte_end":367798,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367803,"byte_end":367870,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367875,"byte_end":367914,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367919,"byte_end":367927,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":367932,"byte_end":367939,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5675},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368994,"byte_end":369008,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368238,"byte_end":368312,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368317,"byte_end":368340,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368345,"byte_end":368348,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368353,"byte_end":368384,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368389,"byte_end":368466,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368471,"byte_end":368500,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368505,"byte_end":368508,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368513,"byte_end":368527,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368532,"byte_end":368535,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368540,"byte_end":368547,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368552,"byte_end":368593,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368598,"byte_end":368622,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368627,"byte_end":368673,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368678,"byte_end":368681,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368686,"byte_end":368762,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368767,"byte_end":368837,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368842,"byte_end":368845,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368850,"byte_end":368917,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368922,"byte_end":368961,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368966,"byte_end":368974,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":368979,"byte_end":368986,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5678},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370923,"byte_end":370946,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>: Into<Option<usize>>>(Self, impl Into<Option<usize>>,\nF) -> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369285,"byte_end":369367,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369372,"byte_end":369446,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369451,"byte_end":369501,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369506,"byte_end":369509,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369514,"byte_end":369536,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369541,"byte_end":369627,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369632,"byte_end":369717,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369722,"byte_end":369750,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369755,"byte_end":369758,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369763,"byte_end":369838,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369843,"byte_end":369900,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369905,"byte_end":369908,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369913,"byte_end":369927,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369932,"byte_end":369935,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369940,"byte_end":369947,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369952,"byte_end":369993,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":369998,"byte_end":370032,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370037,"byte_end":370094,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370099,"byte_end":370102,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370107,"byte_end":370147,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370152,"byte_end":370192,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370197,"byte_end":370238,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370243,"byte_end":370246,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370251,"byte_end":370302,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370307,"byte_end":370360,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370365,"byte_end":370387,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370392,"byte_end":370417,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370422,"byte_end":370484,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370489,"byte_end":370504,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370509,"byte_end":370518,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370523,"byte_end":370529,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370534,"byte_end":370537,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370542,"byte_end":370568,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370573,"byte_end":370640,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370645,"byte_end":370659,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370664,"byte_end":370667,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370672,"byte_end":370733,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370738,"byte_end":370766,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370771,"byte_end":370821,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370826,"byte_end":370834,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370839,"byte_end":370846,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370851,"byte_end":370885,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":370890,"byte_end":370915,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5682},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372395,"byte_end":372406,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371356,"byte_end":371408,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371413,"byte_end":371480,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371485,"byte_end":371488,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371493,"byte_end":371567,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371572,"byte_end":371653,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371658,"byte_end":371728,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371733,"byte_end":371736,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371741,"byte_end":371809,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371814,"byte_end":371817,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371822,"byte_end":371836,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371841,"byte_end":371844,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371849,"byte_end":371856,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371861,"byte_end":371902,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371907,"byte_end":371938,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371943,"byte_end":371981,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":371986,"byte_end":372006,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372011,"byte_end":372014,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372019,"byte_end":372056,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372061,"byte_end":372064,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372069,"byte_end":372096,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372101,"byte_end":372125,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372130,"byte_end":372176,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372181,"byte_end":372190,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372195,"byte_end":372238,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372243,"byte_end":372250,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372255,"byte_end":372258,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372263,"byte_end":372326,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372331,"byte_end":372362,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372367,"byte_end":372375,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372380,"byte_end":372387,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374221,"byte_end":374231,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372589,"byte_end":372667,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372672,"byte_end":372675,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372680,"byte_end":372765,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372770,"byte_end":372842,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372847,"byte_end":372899,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372904,"byte_end":372907,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372912,"byte_end":372985,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":372990,"byte_end":373064,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373069,"byte_end":373144,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373149,"byte_end":373221,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373226,"byte_end":373238,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373243,"byte_end":373246,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373251,"byte_end":373326,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373331,"byte_end":373388,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373393,"byte_end":373396,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373401,"byte_end":373432,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373437,"byte_end":373506,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373511,"byte_end":373540,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373545,"byte_end":373548,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373553,"byte_end":373567,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373572,"byte_end":373575,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373580,"byte_end":373587,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373592,"byte_end":373633,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373638,"byte_end":373700,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373705,"byte_end":373708,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373713,"byte_end":373804,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373809,"byte_end":373851,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373856,"byte_end":373859,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373864,"byte_end":373926,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":373931,"byte_end":374004,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374009,"byte_end":374071,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374076,"byte_end":374084,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374089,"byte_end":374096,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374101,"byte_end":374104,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374109,"byte_end":374121,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374126,"byte_end":374129,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374134,"byte_end":374183,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374188,"byte_end":374213,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375754,"byte_end":375764,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374466,"byte_end":374539,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374544,"byte_end":374578,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374583,"byte_end":374586,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374591,"byte_end":374666,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374671,"byte_end":374746,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374751,"byte_end":374824,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374829,"byte_end":374900,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374905,"byte_end":374955,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374960,"byte_end":374963,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":374968,"byte_end":375039,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375044,"byte_end":375047,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375052,"byte_end":375128,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375133,"byte_end":375203,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375208,"byte_end":375233,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375238,"byte_end":375241,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375246,"byte_end":375260,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375265,"byte_end":375272,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375277,"byte_end":375318,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375323,"byte_end":375347,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375352,"byte_end":375409,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375414,"byte_end":375417,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375422,"byte_end":375502,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375507,"byte_end":375550,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375555,"byte_end":375588,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375593,"byte_end":375600,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375605,"byte_end":375608,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375613,"byte_end":375661,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375666,"byte_end":375721,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375726,"byte_end":375734,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":375739,"byte_end":375746,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377391,"byte_end":377405,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376015,"byte_end":376077,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376082,"byte_end":376150,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376155,"byte_end":376189,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376194,"byte_end":376197,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376202,"byte_end":376277,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376282,"byte_end":376357,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376362,"byte_end":376438,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376443,"byte_end":376508,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376513,"byte_end":376516,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376521,"byte_end":376592,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376597,"byte_end":376600,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376605,"byte_end":376681,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376686,"byte_end":376760,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376765,"byte_end":376790,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376795,"byte_end":376798,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376803,"byte_end":376817,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376822,"byte_end":376829,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376834,"byte_end":376875,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376880,"byte_end":376937,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376942,"byte_end":376967,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376972,"byte_end":376975,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":376980,"byte_end":377050,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377055,"byte_end":377110,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377115,"byte_end":377177,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377182,"byte_end":377197,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377202,"byte_end":377209,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377214,"byte_end":377217,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377222,"byte_end":377243,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377248,"byte_end":377297,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377302,"byte_end":377358,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377363,"byte_end":377371,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377376,"byte_end":377383,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379301,"byte_end":379312,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377682,"byte_end":377747,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377752,"byte_end":377755,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377760,"byte_end":377833,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377838,"byte_end":377911,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377916,"byte_end":377989,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":377994,"byte_end":378064,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378069,"byte_end":378072,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378077,"byte_end":378091,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378096,"byte_end":378099,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378104,"byte_end":378111,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378116,"byte_end":378157,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378162,"byte_end":378193,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378198,"byte_end":378249,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378254,"byte_end":378274,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378279,"byte_end":378282,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378287,"byte_end":378326,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378331,"byte_end":378370,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378375,"byte_end":378414,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378419,"byte_end":378422,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378427,"byte_end":378454,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378459,"byte_end":378502,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378507,"byte_end":378514,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378519,"byte_end":378546,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378551,"byte_end":378594,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378599,"byte_end":378643,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378648,"byte_end":378691,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378696,"byte_end":378703,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378708,"byte_end":378735,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378740,"byte_end":378785,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378790,"byte_end":378835,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378840,"byte_end":378884,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378889,"byte_end":378896,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378901,"byte_end":378904,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378909,"byte_end":378948,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":378953,"byte_end":379002,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379007,"byte_end":379056,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379061,"byte_end":379111,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379116,"byte_end":379165,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379170,"byte_end":379220,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379225,"byte_end":379267,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379272,"byte_end":379281,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379286,"byte_end":379293,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380904,"byte_end":380912,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379617,"byte_end":379687,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379692,"byte_end":379752,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379757,"byte_end":379760,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379765,"byte_end":379835,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379840,"byte_end":379916,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":379921,"byte_end":379997,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380002,"byte_end":380072,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380077,"byte_end":380103,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380108,"byte_end":380111,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380116,"byte_end":380196,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380201,"byte_end":380270,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380275,"byte_end":380296,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380301,"byte_end":380304,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380309,"byte_end":380323,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380328,"byte_end":380331,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380336,"byte_end":380343,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380348,"byte_end":380389,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380394,"byte_end":380440,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380445,"byte_end":380448,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380453,"byte_end":380522,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380527,"byte_end":380604,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380609,"byte_end":380642,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380647,"byte_end":380650,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380655,"byte_end":380741,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380746,"byte_end":380832,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380837,"byte_end":380871,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380876,"byte_end":380884,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":380889,"byte_end":380896,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5697},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382438,"byte_end":382448,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381192,"byte_end":381254,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381259,"byte_end":381334,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381339,"byte_end":381342,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381347,"byte_end":381418,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381423,"byte_end":381499,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381504,"byte_end":381543,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381548,"byte_end":381551,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381556,"byte_end":381642,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381647,"byte_end":381650,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381655,"byte_end":381739,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381744,"byte_end":381800,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381805,"byte_end":381808,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381813,"byte_end":381827,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381832,"byte_end":381835,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381840,"byte_end":381847,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381852,"byte_end":381893,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381898,"byte_end":381929,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381934,"byte_end":381972,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":381977,"byte_end":381997,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382002,"byte_end":382005,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382010,"byte_end":382071,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382076,"byte_end":382079,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382084,"byte_end":382111,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382116,"byte_end":382147,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382152,"byte_end":382178,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382183,"byte_end":382253,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382258,"byte_end":382267,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382272,"byte_end":382279,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382284,"byte_end":382287,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382292,"byte_end":382331,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382336,"byte_end":382339,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382344,"byte_end":382404,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382409,"byte_end":382418,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382423,"byte_end":382430,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5698},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385170,"byte_end":385190,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382702,"byte_end":382780,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382785,"byte_end":382788,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382793,"byte_end":382898,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382903,"byte_end":382946,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382951,"byte_end":382954,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":382959,"byte_end":383027,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383032,"byte_end":383105,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383110,"byte_end":383166,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383171,"byte_end":383174,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383179,"byte_end":383254,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383259,"byte_end":383332,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383337,"byte_end":383402,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383407,"byte_end":383410,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383415,"byte_end":383490,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383495,"byte_end":383552,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383557,"byte_end":383560,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383565,"byte_end":383579,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383584,"byte_end":383587,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383592,"byte_end":383644,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383649,"byte_end":383656,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383661,"byte_end":383702,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383707,"byte_end":383741,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383746,"byte_end":383803,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383808,"byte_end":383811,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383816,"byte_end":383866,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383871,"byte_end":383921,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383926,"byte_end":383929,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":383934,"byte_end":384009,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384014,"byte_end":384017,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384022,"byte_end":384088,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384093,"byte_end":384096,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384101,"byte_end":384126,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384131,"byte_end":384185,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384190,"byte_end":384193,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384198,"byte_end":384223,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384228,"byte_end":384282,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384287,"byte_end":384290,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384295,"byte_end":384339,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384344,"byte_end":384380,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384385,"byte_end":384392,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384397,"byte_end":384400,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384405,"byte_end":384465,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384470,"byte_end":384477,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384482,"byte_end":384523,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384528,"byte_end":384559,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384564,"byte_end":384615,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384620,"byte_end":384623,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384628,"byte_end":384682,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384687,"byte_end":384753,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384758,"byte_end":384761,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384766,"byte_end":384815,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384820,"byte_end":384874,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384879,"byte_end":384882,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384887,"byte_end":384940,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":384945,"byte_end":385017,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385022,"byte_end":385081,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385086,"byte_end":385093,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385098,"byte_end":385132,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385137,"byte_end":385162,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5699},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388171,"byte_end":388183,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385467,"byte_end":385533,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385538,"byte_end":385541,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385546,"byte_end":385651,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385656,"byte_end":385699,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385704,"byte_end":385707,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385712,"byte_end":385780,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385785,"byte_end":385861,"line_start":921,"line_end":921,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385866,"byte_end":385896,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385901,"byte_end":385904,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385909,"byte_end":385984,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":385989,"byte_end":386062,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386067,"byte_end":386132,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386137,"byte_end":386140,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386145,"byte_end":386220,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386225,"byte_end":386282,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386287,"byte_end":386290,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386295,"byte_end":386309,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386314,"byte_end":386317,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386322,"byte_end":386372,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386377,"byte_end":386384,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386389,"byte_end":386430,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386435,"byte_end":386469,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386474,"byte_end":386504,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386509,"byte_end":386566,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386571,"byte_end":386574,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386579,"byte_end":386629,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386634,"byte_end":386684,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386689,"byte_end":386692,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386697,"byte_end":386736,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386741,"byte_end":386820,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386825,"byte_end":386828,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386833,"byte_end":386895,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386900,"byte_end":386903,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386908,"byte_end":386971,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386976,"byte_end":386979,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":386984,"byte_end":387013,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387018,"byte_end":387081,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387086,"byte_end":387116,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387121,"byte_end":387135,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387140,"byte_end":387143,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387148,"byte_end":387173,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387178,"byte_end":387232,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387237,"byte_end":387291,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387296,"byte_end":387299,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387304,"byte_end":387348,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387353,"byte_end":387389,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387394,"byte_end":387401,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387406,"byte_end":387409,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387414,"byte_end":387474,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387479,"byte_end":387486,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387491,"byte_end":387532,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387537,"byte_end":387568,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387573,"byte_end":387624,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387629,"byte_end":387632,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387637,"byte_end":387691,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387696,"byte_end":387754,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387759,"byte_end":387762,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387767,"byte_end":387816,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387821,"byte_end":387875,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387880,"byte_end":387883,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387888,"byte_end":387941,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":387946,"byte_end":388018,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388023,"byte_end":388082,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388087,"byte_end":388094,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388099,"byte_end":388133,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388138,"byte_end":388163,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5700},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388638,"byte_end":388657,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5648},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388530,"byte_end":388608,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":388613,"byte_end":388630,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":14908},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440239,"byte_end":440243,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14910}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440117,"byte_end":440154,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440179,"byte_end":440227,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5801},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440761,"byte_end":440765,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440295,"byte_end":440359,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440360,"byte_end":440388,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440389,"byte_end":440392,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440393,"byte_end":440466,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440467,"byte_end":440522,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440523,"byte_end":440526,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440527,"byte_end":440534,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440535,"byte_end":440576,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440577,"byte_end":440620,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440621,"byte_end":440624,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440625,"byte_end":440669,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440670,"byte_end":440735,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440736,"byte_end":440745,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440746,"byte_end":440753,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14917},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441456,"byte_end":441462,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14919}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441332,"byte_end":441371,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441396,"byte_end":441444,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5836},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441986,"byte_end":441992,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441484,"byte_end":441544,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441545,"byte_end":441548,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441549,"byte_end":441616,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441617,"byte_end":441689,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441690,"byte_end":441747,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441748,"byte_end":441751,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441752,"byte_end":441759,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441760,"byte_end":441801,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441802,"byte_end":441845,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441846,"byte_end":441849,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441850,"byte_end":441885,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441886,"byte_end":441960,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441961,"byte_end":441970,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":441971,"byte_end":441978,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14926},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442983,"byte_end":442993,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14928}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442681,"byte_end":442741,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442742,"byte_end":442794,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442795,"byte_end":442798,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442799,"byte_end":442862,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442863,"byte_end":442898,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":442923,"byte_end":442971,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5889},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445281,"byte_end":445292,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443509,"byte_end":443580,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443581,"byte_end":443648,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443649,"byte_end":443652,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443653,"byte_end":443725,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443726,"byte_end":443729,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443730,"byte_end":443804,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443805,"byte_end":443857,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443858,"byte_end":443861,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443862,"byte_end":443934,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443935,"byte_end":444008,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444009,"byte_end":444046,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444047,"byte_end":444050,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444051,"byte_end":444065,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444066,"byte_end":444069,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444070,"byte_end":444086,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444087,"byte_end":444090,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444091,"byte_end":444098,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444099,"byte_end":444140,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444141,"byte_end":444184,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444185,"byte_end":444188,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444189,"byte_end":444257,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444258,"byte_end":444336,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444337,"byte_end":444368,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444369,"byte_end":444390,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444391,"byte_end":444394,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444395,"byte_end":444429,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444430,"byte_end":444485,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444486,"byte_end":444489,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444490,"byte_end":444543,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444544,"byte_end":444597,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444598,"byte_end":444651,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444652,"byte_end":444661,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444662,"byte_end":444669,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444670,"byte_end":444673,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444674,"byte_end":444710,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444711,"byte_end":444714,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444715,"byte_end":444726,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444727,"byte_end":444768,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444769,"byte_end":444812,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444813,"byte_end":444816,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444817,"byte_end":444866,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444867,"byte_end":444888,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444889,"byte_end":444966,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":444967,"byte_end":445000,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445001,"byte_end":445004,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445005,"byte_end":445048,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445049,"byte_end":445092,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445093,"byte_end":445136,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445137,"byte_end":445180,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445181,"byte_end":445184,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445185,"byte_end":445214,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445215,"byte_end":445255,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445256,"byte_end":445265,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":445266,"byte_end":445273,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14935},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445683,"byte_end":445688,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14937}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445567,"byte_end":445605,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445623,"byte_end":445671,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5923},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445857,"byte_end":445862,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445727,"byte_end":445775,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445776,"byte_end":445779,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445780,"byte_end":445849,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5975},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446947,"byte_end":446951,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446640,"byte_end":446681,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446682,"byte_end":446685,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446686,"byte_end":446693,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446694,"byte_end":446735,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446736,"byte_end":446779,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446780,"byte_end":446783,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446784,"byte_end":446828,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446829,"byte_end":446884,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446885,"byte_end":446921,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446922,"byte_end":446931,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":446932,"byte_end":446939,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14941},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":447213,"byte_end":447217,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14943}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448393,"byte_end":448400,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14979}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448273,"byte_end":448315,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448333,"byte_end":448381,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6019},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448576,"byte_end":448583,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448444,"byte_end":448498,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448499,"byte_end":448502,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448503,"byte_end":448568,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6061},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449426,"byte_end":449432,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":6063}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449325,"byte_end":449365,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449366,"byte_end":449414,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6069},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450120,"byte_end":450127,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449632,"byte_end":449705,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449706,"byte_end":449709,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449710,"byte_end":449769,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449770,"byte_end":449773,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449774,"byte_end":449788,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449789,"byte_end":449792,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449793,"byte_end":449800,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449801,"byte_end":449834,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449835,"byte_end":449863,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449864,"byte_end":449867,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449868,"byte_end":449897,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449898,"byte_end":449901,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449902,"byte_end":449966,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449967,"byte_end":450020,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450021,"byte_end":450042,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450043,"byte_end":450096,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450097,"byte_end":450104,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450105,"byte_end":450112,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14983},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":450888,"byte_end":450901,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14985}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6110},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452882,"byte_end":452896,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452001,"byte_end":452114,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452115,"byte_end":452118,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452119,"byte_end":452214,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452215,"byte_end":452218,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452219,"byte_end":452233,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452234,"byte_end":452237,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452238,"byte_end":452245,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452246,"byte_end":452287,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452288,"byte_end":452331,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452332,"byte_end":452360,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452361,"byte_end":452364,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452365,"byte_end":452438,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452439,"byte_end":452492,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452493,"byte_end":452546,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452547,"byte_end":452584,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452585,"byte_end":452588,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452589,"byte_end":452657,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452658,"byte_end":452686,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452687,"byte_end":452700,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452701,"byte_end":452710,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452711,"byte_end":452763,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452764,"byte_end":452818,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452819,"byte_end":452856,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452857,"byte_end":452866,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":452867,"byte_end":452874,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15022},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453429,"byte_end":453435,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":15025}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6153},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454461,"byte_end":454467,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453557,"byte_end":453625,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453626,"byte_end":453702,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453703,"byte_end":453751,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453752,"byte_end":453755,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453756,"byte_end":453831,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453832,"byte_end":453901,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453902,"byte_end":453929,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453930,"byte_end":453933,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":453934,"byte_end":454005,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454006,"byte_end":454026,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454027,"byte_end":454030,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454031,"byte_end":454046,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454047,"byte_end":454050,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454051,"byte_end":454062,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454063,"byte_end":454104,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454105,"byte_end":454160,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454161,"byte_end":454164,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454165,"byte_end":454190,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454191,"byte_end":454217,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454218,"byte_end":454221,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454222,"byte_end":454260,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454261,"byte_end":454264,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454265,"byte_end":454286,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454287,"byte_end":454323,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454324,"byte_end":454376,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454377,"byte_end":454429,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454430,"byte_end":454435,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454436,"byte_end":454445,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454446,"byte_end":454453,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454936,"byte_end":454943,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454828,"byte_end":454902,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454907,"byte_end":454924,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455271,"byte_end":455278,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455009,"byte_end":455077,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455082,"byte_end":455113,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455118,"byte_end":455121,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455126,"byte_end":455199,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455204,"byte_end":455259,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455625,"byte_end":455636,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455356,"byte_end":455431,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455436,"byte_end":455467,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455472,"byte_end":455475,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455480,"byte_end":455553,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455558,"byte_end":455613,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6163},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":456010,"byte_end":456020,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455774,"byte_end":455837,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455842,"byte_end":455845,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455850,"byte_end":455922,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":455927,"byte_end":455998,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15068},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":456962,"byte_end":456966,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":15067},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":456931,"byte_end":456957,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15070},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457004,"byte_end":457009,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":15067},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":456972,"byte_end":456999,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":15067},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":456916,"byte_end":456924,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":15068},{"krate":0,"index":15070}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":456789,"byte_end":456855,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6216},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457090,"byte_end":457096,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457034,"byte_end":457078,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":15086},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457568,"byte_end":457586,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":15091},{"krate":0,"index":15092},{"krate":0,"index":15093},{"krate":0,"index":15094}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6219},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459878,"byte_end":459898,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457749,"byte_end":457826,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457827,"byte_end":457907,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457908,"byte_end":457990,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457991,"byte_end":458056,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458057,"byte_end":458060,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458061,"byte_end":458136,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458137,"byte_end":458206,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458207,"byte_end":458234,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458235,"byte_end":458238,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458239,"byte_end":458310,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458311,"byte_end":458331,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458332,"byte_end":458335,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458336,"byte_end":458351,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458352,"byte_end":458355,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458356,"byte_end":458372,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458373,"byte_end":458437,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458438,"byte_end":458441,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458442,"byte_end":458453,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458454,"byte_end":458495,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458496,"byte_end":458575,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458576,"byte_end":458579,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458580,"byte_end":458605,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458606,"byte_end":458632,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458633,"byte_end":458636,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458637,"byte_end":458701,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458702,"byte_end":458776,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458777,"byte_end":458847,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458848,"byte_end":458899,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458900,"byte_end":458959,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458960,"byte_end":458963,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":458964,"byte_end":459027,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459028,"byte_end":459031,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459032,"byte_end":459053,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459054,"byte_end":459109,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459110,"byte_end":459162,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459163,"byte_end":459168,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459169,"byte_end":459178,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459179,"byte_end":459186,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459187,"byte_end":459190,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459191,"byte_end":459210,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459211,"byte_end":459278,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459279,"byte_end":459355,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459356,"byte_end":459359,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459360,"byte_end":459371,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459372,"byte_end":459413,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459414,"byte_end":459493,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459494,"byte_end":459497,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459498,"byte_end":459523,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459524,"byte_end":459550,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459551,"byte_end":459554,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459555,"byte_end":459608,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459609,"byte_end":459612,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459613,"byte_end":459673,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459674,"byte_end":459677,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459678,"byte_end":459699,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459700,"byte_end":459740,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459741,"byte_end":459793,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459794,"byte_end":459846,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459847,"byte_end":459852,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459853,"byte_end":459862,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":459863,"byte_end":459870,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6229},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460515,"byte_end":460522,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460407,"byte_end":460481,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460486,"byte_end":460503,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6230},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460878,"byte_end":460885,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460616,"byte_end":460684,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460689,"byte_end":460720,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460725,"byte_end":460728,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460733,"byte_end":460806,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460811,"byte_end":460866,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6231},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461260,"byte_end":461271,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460991,"byte_end":461066,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461071,"byte_end":461102,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461107,"byte_end":461110,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461115,"byte_end":461188,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461193,"byte_end":461248,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6232},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461677,"byte_end":461687,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461441,"byte_end":461504,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461509,"byte_end":461512,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461517,"byte_end":461589,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461594,"byte_end":461665,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":6301},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465365,"byte_end":465371,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":463923,"byte_end":463993,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":463994,"byte_end":463997,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":463998,"byte_end":464067,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464068,"byte_end":464149,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464150,"byte_end":464181,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464182,"byte_end":464185,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464186,"byte_end":464265,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464266,"byte_end":464345,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464346,"byte_end":464400,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464401,"byte_end":464404,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464405,"byte_end":464485,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464486,"byte_end":464556,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464557,"byte_end":464579,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464580,"byte_end":464583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464584,"byte_end":464661,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464662,"byte_end":464734,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464735,"byte_end":464812,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464813,"byte_end":464873,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464874,"byte_end":464877,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464878,"byte_end":464891,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464892,"byte_end":464895,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464896,"byte_end":464903,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464904,"byte_end":464945,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464946,"byte_end":464989,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464990,"byte_end":464993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":464994,"byte_end":465049,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465050,"byte_end":465073,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465074,"byte_end":465113,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465114,"byte_end":465151,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465152,"byte_end":465191,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465192,"byte_end":465208,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465209,"byte_end":465225,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465226,"byte_end":465235,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465236,"byte_end":465243,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465244,"byte_end":465247,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465248,"byte_end":465300,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465301,"byte_end":465339,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465340,"byte_end":465349,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465350,"byte_end":465357,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15155},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465718,"byte_end":465724,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15159},{"krate":0,"index":15160}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6401},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470775,"byte_end":470789,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468709,"byte_end":468743,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468744,"byte_end":468747,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468748,"byte_end":468827,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468828,"byte_end":468899,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468900,"byte_end":468976,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468977,"byte_end":469025,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469026,"byte_end":469029,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469030,"byte_end":469109,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469110,"byte_end":469185,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469186,"byte_end":469264,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469265,"byte_end":469345,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469346,"byte_end":469375,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469376,"byte_end":469379,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469380,"byte_end":469458,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469459,"byte_end":469533,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469534,"byte_end":469609,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469610,"byte_end":469685,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469686,"byte_end":469761,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469762,"byte_end":469820,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469821,"byte_end":469824,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469825,"byte_end":469898,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469899,"byte_end":469977,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":469978,"byte_end":470036,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470037,"byte_end":470110,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470111,"byte_end":470179,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470180,"byte_end":470256,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470257,"byte_end":470325,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470326,"byte_end":470379,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470380,"byte_end":470383,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470384,"byte_end":470450,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470451,"byte_end":470530,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470531,"byte_end":470578,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470579,"byte_end":470582,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470583,"byte_end":470656,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470657,"byte_end":470714,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":470715,"byte_end":470763,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6411},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471297,"byte_end":471300,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471077,"byte_end":471121,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471126,"byte_end":471129,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471134,"byte_end":471209,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471214,"byte_end":471285,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6412},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471797,"byte_end":471800,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471524,"byte_end":471581,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471586,"byte_end":471589,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471594,"byte_end":471657,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471662,"byte_end":471726,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471731,"byte_end":471785,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6413},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471958,"byte_end":471966,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471895,"byte_end":471946,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6414},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472390,"byte_end":472394,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472071,"byte_end":472104,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472109,"byte_end":472112,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472117,"byte_end":472193,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472198,"byte_end":472272,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472277,"byte_end":472350,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472355,"byte_end":472378,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6441},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6449},{"krate":0,"index":6452},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6471},{"krate":0,"index":6474},{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6479},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6497},{"krate":0,"index":6500},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6507},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6514},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6521},{"krate":0,"index":6524},{"krate":0,"index":6527},{"krate":0,"index":6530},{"krate":0,"index":6533},{"krate":0,"index":6539},{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6622},{"krate":0,"index":6690},{"krate":0,"index":6693},{"krate":0,"index":6752},{"krate":0,"index":6753},{"krate":0,"index":6756},{"krate":0,"index":6759},{"krate":0,"index":6764},{"krate":0,"index":6766},{"krate":0,"index":6768},{"krate":0,"index":6770},{"krate":0,"index":6772},{"krate":0,"index":6774},{"krate":0,"index":6777},{"krate":0,"index":6792},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6821},{"krate":0,"index":6827},{"krate":0,"index":6832},{"krate":0,"index":6837},{"krate":0,"index":6840}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173675,"byte_end":173709,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173710,"byte_end":173735,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474759,"byte_end":474791,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474792,"byte_end":474795,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474796,"byte_end":474871,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474872,"byte_end":474929,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":501959,"byte_end":501969,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":15251},{"krate":0,"index":15252},{"krate":0,"index":15253}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":501871,"byte_end":501930,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15258},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502206,"byte_end":502213,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502118,"byte_end":502177,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15267},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502354,"byte_end":502364,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":15270},{"krate":0,"index":15271},{"krate":0,"index":15272},{"krate":0,"index":15273}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502264,"byte_end":502325,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15278},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502652,"byte_end":502656,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502558,"byte_end":502623,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15287},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502793,"byte_end":502801,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":15289},{"krate":0,"index":15290}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502707,"byte_end":502764,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6759},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476796,"byte_end":476812,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6763}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475701,"byte_end":475754,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475755,"byte_end":475758,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475759,"byte_end":475827,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475828,"byte_end":475901,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475902,"byte_end":475978,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475979,"byte_end":476023,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476024,"byte_end":476027,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476028,"byte_end":476106,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476107,"byte_end":476165,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476166,"byte_end":476230,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476231,"byte_end":476284,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476285,"byte_end":476364,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476365,"byte_end":476394,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476395,"byte_end":476398,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476399,"byte_end":476469,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476470,"byte_end":476547,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476548,"byte_end":476599,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476600,"byte_end":476603,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476604,"byte_end":476677,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476678,"byte_end":476735,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476736,"byte_end":476784,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6779},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479429,"byte_end":479432,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479158,"byte_end":479207,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479212,"byte_end":479215,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479220,"byte_end":479287,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479292,"byte_end":479366,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479371,"byte_end":479417,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6780},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480462,"byte_end":480465,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480324,"byte_end":480379,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480384,"byte_end":480387,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480392,"byte_end":480450,"line_start":143,"line_end":143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6781},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480629,"byte_end":480637,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480567,"byte_end":480617,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":481220,"byte_end":481224,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480850,"byte_end":480881,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480886,"byte_end":480889,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480894,"byte_end":480964,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":480969,"byte_end":481055,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":481060,"byte_end":481136,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":481141,"byte_end":481208,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6783},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":482542,"byte_end":482546,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":482460,"byte_end":482530,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6784},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":482744,"byte_end":482756,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":482662,"byte_end":482732,"line_start":198,"line_end":198,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6785},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":483085,"byte_end":483093,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":483004,"byte_end":483073,"line_start":206,"line_end":206,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6786},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":483300,"byte_end":483312,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":483219,"byte_end":483288,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6810},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498195,"byte_end":498200,"line_start":556,"line_end":556,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498142,"byte_end":498183,"line_start":555,"line_end":555,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6847},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6852},{"krate":0,"index":6853},{"krate":0,"index":6855},{"krate":0,"index":6858},{"krate":0,"index":6861},{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6868},{"krate":0,"index":6871},{"krate":0,"index":6872},{"krate":0,"index":6875},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6894},{"krate":0,"index":15294},{"krate":0,"index":15297},{"krate":0,"index":6897},{"krate":0,"index":6900},{"krate":0,"index":6909},{"krate":0,"index":6912},{"krate":0,"index":6916},{"krate":0,"index":6919},{"krate":0,"index":6921},{"krate":0,"index":6925},{"krate":0,"index":6929},{"krate":0,"index":6934},{"krate":0,"index":6940},{"krate":0,"index":15327},{"krate":0,"index":15332},{"krate":0,"index":15336},{"krate":0,"index":15341},{"krate":0,"index":15345},{"krate":0,"index":15349},{"krate":0,"index":6946},{"krate":0,"index":6952},{"krate":0,"index":6954},{"krate":0,"index":6960},{"krate":0,"index":6962},{"krate":0,"index":6967}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173891,"byte_end":173925,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173926,"byte_end":173951,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":515414,"byte_end":515445,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":15294},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516485,"byte_end":516494,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":15296}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516976,"byte_end":516979,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516776,"byte_end":516815,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516820,"byte_end":516823,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516828,"byte_end":516898,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516903,"byte_end":516964,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6903},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517189,"byte_end":517192,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517051,"byte_end":517106,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517111,"byte_end":517114,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517119,"byte_end":517177,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6904},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517308,"byte_end":517316,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517247,"byte_end":517296,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517678,"byte_end":517682,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517375,"byte_end":517406,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517411,"byte_end":517414,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517419,"byte_end":517491,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517496,"byte_end":517570,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517575,"byte_end":517643,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517648,"byte_end":517666,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6906},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517848,"byte_end":517852,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517766,"byte_end":517836,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6907},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518002,"byte_end":518010,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":517921,"byte_end":517990,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6908},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518146,"byte_end":518151,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518093,"byte_end":518134,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6919},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519858,"byte_end":519868,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519237,"byte_end":519311,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519312,"byte_end":519315,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519316,"byte_end":519395,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519396,"byte_end":519447,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519448,"byte_end":519522,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519523,"byte_end":519582,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519583,"byte_end":519586,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519587,"byte_end":519659,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519660,"byte_end":519710,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519711,"byte_end":519714,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519715,"byte_end":519792,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519793,"byte_end":519850,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15327},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521175,"byte_end":521179,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521085,"byte_end":521146,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15336},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521332,"byte_end":521339,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521244,"byte_end":521303,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15345},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521493,"byte_end":521501,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521407,"byte_end":521464,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6990},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523516,"byte_end":523525,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523146,"byte_end":523233,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523234,"byte_end":523237,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523238,"byte_end":523314,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523315,"byte_end":523368,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523369,"byte_end":523372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523373,"byte_end":523450,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":523451,"byte_end":523508,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7024},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7029},{"krate":0,"index":7032},{"krate":0,"index":7035},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7042},{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7049},{"krate":0,"index":7052},{"krate":0,"index":7055},{"krate":0,"index":7088},{"krate":0,"index":7091},{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":7129},{"krate":0,"index":7132},{"krate":0,"index":7180},{"krate":0,"index":7183},{"krate":0,"index":7218},{"krate":0,"index":7221},{"krate":0,"index":7254},{"krate":0,"index":7257},{"krate":0,"index":7298},{"krate":0,"index":7301},{"krate":0,"index":7352},{"krate":0,"index":7355},{"krate":0,"index":7391},{"krate":0,"index":7394},{"krate":0,"index":7463},{"krate":0,"index":7466},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":7520},{"krate":0,"index":7601},{"krate":0,"index":7604},{"krate":0,"index":7677},{"krate":0,"index":7680},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7739},{"krate":0,"index":7773}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10823,"byte_end":10847,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523753,"byte_end":523776,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523777,"byte_end":523780,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523781,"byte_end":523806,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523807,"byte_end":523810,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523811,"byte_end":523883,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523884,"byte_end":523963,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":523964,"byte_end":523976,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":15352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535257,"byte_end":535262,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15356},{"krate":0,"index":15357}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535101,"byte_end":535160,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535178,"byte_end":535245,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15363},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536253,"byte_end":536258,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":15365}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536141,"byte_end":536177,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536195,"byte_end":536241,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7114},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536657,"byte_end":536662,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536295,"byte_end":536358,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536359,"byte_end":536362,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536363,"byte_end":536408,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536409,"byte_end":536412,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536413,"byte_end":536427,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536428,"byte_end":536431,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536432,"byte_end":536439,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536440,"byte_end":536481,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536482,"byte_end":536521,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536522,"byte_end":536525,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536526,"byte_end":536560,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536561,"byte_end":536586,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536587,"byte_end":536641,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536642,"byte_end":536649,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15369},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":537852,"byte_end":537858,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":15372},{"krate":0,"index":15373}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7163},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538138,"byte_end":538145,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538080,"byte_end":538126,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7164},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538276,"byte_end":538283,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538217,"byte_end":538264,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7165},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538441,"byte_end":538452,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538375,"byte_end":538429,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7166},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538824,"byte_end":538834,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538590,"byte_end":538651,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538656,"byte_end":538659,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538664,"byte_end":538733,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538738,"byte_end":538812,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":15414},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541080,"byte_end":541084,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":15418},{"krate":0,"index":15419}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":540926,"byte_end":540983,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541001,"byte_end":541068,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15425},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542415,"byte_end":542420,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15429},{"krate":0,"index":15430}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542259,"byte_end":542318,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542336,"byte_end":542403,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15436},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":543657,"byte_end":543668,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":15440}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15500},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":544968,"byte_end":544978,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":15503},{"krate":0,"index":15504}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15559},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":546875,"byte_end":546879,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":15563}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":546721,"byte_end":546778,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":546796,"byte_end":546863,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7434},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548308,"byte_end":548315,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7439},{"krate":0,"index":7440}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548072,"byte_end":548137,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548138,"byte_end":548178,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548229,"byte_end":548296,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15569},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551266,"byte_end":551272,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15573},{"krate":0,"index":15574}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7496},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551872,"byte_end":551878,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551363,"byte_end":551432,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551433,"byte_end":551436,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551437,"byte_end":551451,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551452,"byte_end":551455,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551456,"byte_end":551463,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551464,"byte_end":551505,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551506,"byte_end":551545,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551546,"byte_end":551549,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551550,"byte_end":551602,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551603,"byte_end":551623,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551624,"byte_end":551645,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551646,"byte_end":551677,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551678,"byte_end":551725,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551726,"byte_end":551735,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551736,"byte_end":551743,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551744,"byte_end":551774,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551775,"byte_end":551801,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551802,"byte_end":551856,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":551857,"byte_end":551864,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15627},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":553856,"byte_end":553860,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":15633},{"krate":0,"index":15634},{"krate":0,"index":15635},{"krate":0,"index":15636}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15710},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":557403,"byte_end":557414,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":15716},{"krate":0,"index":15717},{"krate":0,"index":15718},{"krate":0,"index":15719},{"krate":0,"index":15720}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":561149,"byte_end":561155,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":15800},{"krate":0,"index":15801},{"krate":0,"index":15802}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7739},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525070,"byte_end":525077,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7746},{"krate":0,"index":7750},{"krate":0,"index":7753},{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7765},{"krate":0,"index":7767},{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7772}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524961,"byte_end":525033,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525034,"byte_end":525059,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7741},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525669,"byte_end":525673,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525102,"byte_end":525149,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525154,"byte_end":525157,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525162,"byte_end":525233,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525238,"byte_end":525289,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525294,"byte_end":525297,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525302,"byte_end":525377,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525382,"byte_end":525458,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525463,"byte_end":525532,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525537,"byte_end":525540,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525545,"byte_end":525617,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525622,"byte_end":525661,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527029,"byte_end":527042,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525935,"byte_end":525982,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525987,"byte_end":525990,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525995,"byte_end":526066,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526071,"byte_end":526122,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526127,"byte_end":526130,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526135,"byte_end":526206,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526211,"byte_end":526287,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526292,"byte_end":526323,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526328,"byte_end":526331,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526336,"byte_end":526408,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526413,"byte_end":526457,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526462,"byte_end":526465,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526470,"byte_end":526484,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526489,"byte_end":526492,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526497,"byte_end":526504,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526509,"byte_end":526550,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526555,"byte_end":526586,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526591,"byte_end":526622,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526627,"byte_end":526670,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526675,"byte_end":526678,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526683,"byte_end":526719,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526724,"byte_end":526727,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526732,"byte_end":526771,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526776,"byte_end":526813,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526818,"byte_end":526825,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526830,"byte_end":526833,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526838,"byte_end":526868,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526873,"byte_end":526886,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526891,"byte_end":526939,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":526944,"byte_end":526995,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527000,"byte_end":527009,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527014,"byte_end":527021,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7750},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527782,"byte_end":527794,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527728,"byte_end":527774,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7753},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528162,"byte_end":528175,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":527981,"byte_end":528056,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528061,"byte_end":528064,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528069,"byte_end":528154,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":7755},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529010,"byte_end":529016,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528361,"byte_end":528410,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528415,"byte_end":528418,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528423,"byte_end":528489,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528494,"byte_end":528570,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528575,"byte_end":528650,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528655,"byte_end":528693,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528698,"byte_end":528701,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528706,"byte_end":528778,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528783,"byte_end":528822,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528827,"byte_end":528830,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528835,"byte_end":528910,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528915,"byte_end":528972,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":528977,"byte_end":529002,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7756},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529210,"byte_end":529215,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529183,"byte_end":529202,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":7757},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529549,"byte_end":529555,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529370,"byte_end":529405,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529410,"byte_end":529413,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529418,"byte_end":529500,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529505,"byte_end":529541,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7759},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529982,"byte_end":529987,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529781,"byte_end":529830,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529835,"byte_end":529838,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529843,"byte_end":529924,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":529929,"byte_end":529974,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7760},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530469,"byte_end":530473,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530142,"byte_end":530215,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530220,"byte_end":530258,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530263,"byte_end":530266,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530271,"byte_end":530345,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530350,"byte_end":530411,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530416,"byte_end":530461,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7761},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530950,"byte_end":530954,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530644,"byte_end":530710,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530715,"byte_end":530731,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530736,"byte_end":530739,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530744,"byte_end":530807,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530812,"byte_end":530877,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":530882,"byte_end":530942,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7762},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531861,"byte_end":531869,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin + ?Sized, Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531125,"byte_end":531200,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531205,"byte_end":531243,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531248,"byte_end":531251,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531256,"byte_end":531329,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531334,"byte_end":531410,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531415,"byte_end":531489,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531494,"byte_end":531572,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531577,"byte_end":531660,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531665,"byte_end":531668,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531673,"byte_end":531731,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531736,"byte_end":531811,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":531816,"byte_end":531853,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7765},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532667,"byte_end":532676,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532394,"byte_end":532465,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532470,"byte_end":532491,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532496,"byte_end":532499,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532504,"byte_end":532582,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532587,"byte_end":532659,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7767},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533144,"byte_end":533154,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532867,"byte_end":532943,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532948,"byte_end":532969,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532974,"byte_end":532977,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":532982,"byte_end":533059,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533064,"byte_end":533136,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7769},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533799,"byte_end":533815,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533701,"byte_end":533771,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533776,"byte_end":533791,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7770},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534066,"byte_end":534082,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":533968,"byte_end":534038,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534043,"byte_end":534058,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7771},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534319,"byte_end":534335,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534221,"byte_end":534291,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534296,"byte_end":534311,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7772},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534586,"byte_end":534602,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534488,"byte_end":534558,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":534563,"byte_end":534578,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7784},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7789},{"krate":0,"index":7792},{"krate":0,"index":7795},{"krate":0,"index":7798},{"krate":0,"index":7801},{"krate":0,"index":7802},{"krate":0,"index":7805},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7817},{"krate":0,"index":7820},{"krate":0,"index":7823},{"krate":0,"index":7826},{"krate":0,"index":7829},{"krate":0,"index":7832},{"krate":0,"index":7833},{"krate":0,"index":7836},{"krate":0,"index":7839},{"krate":0,"index":7842},{"krate":0,"index":7876},{"krate":0,"index":7877},{"krate":0,"index":7880}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563823,"byte_end":563856,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563857,"byte_end":563860,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563861,"byte_end":563886,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563887,"byte_end":563890,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563891,"byte_end":563939,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563940,"byte_end":563993,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":563994,"byte_end":564042,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564043,"byte_end":564090,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564091,"byte_end":564094,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564095,"byte_end":564169,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":564170,"byte_end":564242,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7870},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565492,"byte_end":565500,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":7871}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565449,"byte_end":565481,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7871},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566582,"byte_end":566587,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":7870},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565514,"byte_end":565579,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565584,"byte_end":565599,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565604,"byte_end":565607,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565612,"byte_end":565682,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565687,"byte_end":565706,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565711,"byte_end":565714,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565719,"byte_end":565788,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565793,"byte_end":565866,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565871,"byte_end":565910,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565915,"byte_end":565918,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565923,"byte_end":565989,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565994,"byte_end":566060,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566065,"byte_end":566136,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566141,"byte_end":566197,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566202,"byte_end":566205,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566210,"byte_end":566217,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # if cfg!(miri) { return; } // https://github.com/rust-lang/miri/issues/1038","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566222,"byte_end":566302,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566307,"byte_end":566345,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566350,"byte_end":566382,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566387,"byte_end":566390,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566395,"byte_end":566441,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566446,"byte_end":566449,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566454,"byte_end":566491,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566496,"byte_end":566532,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566537,"byte_end":566544,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":566549,"byte_end":566574,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":7873},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568426,"byte_end":568439,"line_start":99,"line_end":99,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":7874}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568378,"byte_end":568415,"line_start":98,"line_end":98,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7874},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569482,"byte_end":569493,"line_start":126,"line_end":126,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":7873},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568458,"byte_end":568523,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568528,"byte_end":568543,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568548,"byte_end":568551,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568556,"byte_end":568626,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568631,"byte_end":568650,"line_start":104,"line_end":104,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568655,"byte_end":568658,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568663,"byte_end":568732,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568737,"byte_end":568810,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568815,"byte_end":568854,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568859,"byte_end":568862,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568867,"byte_end":568933,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568938,"byte_end":569004,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569009,"byte_end":569080,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569085,"byte_end":569141,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569146,"byte_end":569149,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569154,"byte_end":569161,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569166,"byte_end":569203,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569208,"byte_end":569245,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569250,"byte_end":569253,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569258,"byte_end":569294,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569299,"byte_end":569336,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569341,"byte_end":569344,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569349,"byte_end":569386,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569391,"byte_end":569432,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569437,"byte_end":569444,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":569449,"byte_end":569474,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":7883},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","parent":null,"children":[{"krate":0,"index":7884}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":570983,"byte_end":571025,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571026,"byte_end":571029,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571030,"byte_end":571096,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":7884},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571733,"byte_end":571738,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571098,"byte_end":571133,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571134,"byte_end":571137,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571138,"byte_end":571213,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571214,"byte_end":571251,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571252,"byte_end":571255,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571256,"byte_end":571320,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571321,"byte_end":571324,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571325,"byte_end":571396,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571397,"byte_end":571448,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571449,"byte_end":571541,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571542,"byte_end":571545,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571546,"byte_end":571617,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":571618,"byte_end":571723,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":7885},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8072},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8163}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":571769,"byte_end":571816,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":571817,"byte_end":571820,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":571821,"byte_end":571896,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":571897,"byte_end":571954,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7940},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573377,"byte_end":573382,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7942},{"krate":0,"index":7943},{"krate":0,"index":7944}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573050,"byte_end":573076,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573077,"byte_end":573080,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573081,"byte_end":573095,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573096,"byte_end":573099,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573100,"byte_end":573179,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573180,"byte_end":573262,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573263,"byte_end":573347,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573348,"byte_end":573365,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7967},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574608,"byte_end":574611,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574558,"byte_end":574596,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7968},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575038,"byte_end":575048,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574792,"byte_end":574847,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574852,"byte_end":574855,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574860,"byte_end":574874,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574879,"byte_end":574882,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574887,"byte_end":574894,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574899,"byte_end":574928,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574933,"byte_end":574936,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574941,"byte_end":574971,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574976,"byte_end":575014,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575019,"byte_end":575026,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7971},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575262,"byte_end":575270,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575134,"byte_end":575178,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575183,"byte_end":575186,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575191,"byte_end":575250,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7972},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575691,"byte_end":575695,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575526,"byte_end":575562,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575567,"byte_end":575570,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575575,"byte_end":575648,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575653,"byte_end":575679,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7973},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576323,"byte_end":576330,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575813,"byte_end":575868,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575873,"byte_end":575876,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575881,"byte_end":575956,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575961,"byte_end":576035,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576040,"byte_end":576043,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576048,"byte_end":576062,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576067,"byte_end":576070,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576075,"byte_end":576082,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576087,"byte_end":576128,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576133,"byte_end":576162,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576167,"byte_end":576170,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576175,"byte_end":576209,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576214,"byte_end":576240,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576245,"byte_end":576285,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576290,"byte_end":576299,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":576304,"byte_end":576311,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578052,"byte_end":578067,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":7980},{"krate":0,"index":7981}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":577959,"byte_end":578040,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580602,"byte_end":580612,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7999}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580438,"byte_end":580502,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580503,"byte_end":580576,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580577,"byte_end":580590,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8003},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581181,"byte_end":581184,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580702,"byte_end":580762,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580767,"byte_end":580770,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580775,"byte_end":580788,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580793,"byte_end":580796,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580801,"byte_end":580808,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580813,"byte_end":580854,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580859,"byte_end":580902,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580907,"byte_end":580910,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580915,"byte_end":580968,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580973,"byte_end":580978,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580983,"byte_end":581072,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581077,"byte_end":581119,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581124,"byte_end":581129,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581134,"byte_end":581143,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581148,"byte_end":581155,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581160,"byte_end":581169,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8019},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582476,"byte_end":582492,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582292,"byte_end":582380,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582381,"byte_end":582464,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8030},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583258,"byte_end":583261,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582669,"byte_end":582729,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582734,"byte_end":582737,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582742,"byte_end":582755,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582760,"byte_end":582763,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582768,"byte_end":582775,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582780,"byte_end":582821,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582826,"byte_end":582887,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582892,"byte_end":582895,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582900,"byte_end":582953,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582958,"byte_end":582963,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582968,"byte_end":583057,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583062,"byte_end":583152,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583157,"byte_end":583196,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583201,"byte_end":583206,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583211,"byte_end":583220,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583225,"byte_end":583232,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583237,"byte_end":583246,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15875},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596315,"byte_end":596324,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15877},{"krate":0,"index":15878}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14597058,"byte_end":14597067,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8204},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597734,"byte_end":597737,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596430,"byte_end":596512,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596517,"byte_end":596585,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596590,"byte_end":596593,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596598,"byte_end":596670,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596675,"byte_end":596758,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596763,"byte_end":596788,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596793,"byte_end":596796,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596801,"byte_end":596816,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596821,"byte_end":596824,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596829,"byte_end":596852,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596857,"byte_end":596860,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596865,"byte_end":596872,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596877,"byte_end":596918,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596923,"byte_end":596982,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596987,"byte_end":596990,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596995,"byte_end":597064,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597069,"byte_end":597134,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597139,"byte_end":597164,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597169,"byte_end":597212,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597217,"byte_end":597226,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597231,"byte_end":597238,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597243,"byte_end":597246,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597251,"byte_end":597274,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597279,"byte_end":597282,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597287,"byte_end":597294,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597299,"byte_end":597340,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597345,"byte_end":597397,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597402,"byte_end":597447,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597452,"byte_end":597455,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597460,"byte_end":597529,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597534,"byte_end":597619,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597624,"byte_end":597649,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597654,"byte_end":597696,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597701,"byte_end":597710,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597715,"byte_end":597722,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8205},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598242,"byte_end":598252,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597832,"byte_end":597896,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597901,"byte_end":597969,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":597974,"byte_end":598024,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598029,"byte_end":598083,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598088,"byte_end":598180,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598185,"byte_end":598230,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15918},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598520,"byte_end":598537,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15919}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598330,"byte_end":598380,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598381,"byte_end":598457,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598458,"byte_end":598491,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598643,"byte_end":598654,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15923}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598571,"byte_end":598607,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8207},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598925,"byte_end":598933,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598711,"byte_end":598785,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598790,"byte_end":598830,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598835,"byte_end":598838,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598843,"byte_end":598913,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15933},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599455,"byte_end":599462,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599346,"byte_end":599398,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8227},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601596,"byte_end":601601,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601229,"byte_end":601297,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601302,"byte_end":601305,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601310,"byte_end":601377,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601382,"byte_end":601450,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601455,"byte_end":601529,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601534,"byte_end":601584,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8239},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":601784,"byte_end":601791,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8241},{"krate":0,"index":8242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8241},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":601806,"byte_end":601812,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8242},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":601821,"byte_end":601830,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8249},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602023,"byte_end":602029,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8251}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8251},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602054,"byte_end":602062,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8266},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603368,"byte_end":603372,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15964},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603728,"byte_end":603735,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15985},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604469,"byte_end":604482,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16001},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604824,"byte_end":604833,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16016},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605788,"byte_end":605795,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16031},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606506,"byte_end":606514,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16046},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607234,"byte_end":607245,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16058},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608130,"byte_end":608142,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16070},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609290,"byte_end":609304,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8430},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":610069,"byte_end":610075,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":76841,"byte_end":76846,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":78553,"byte_end":78559,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":78718,"byte_end":78724,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79152,"byte_end":79160,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79519,"byte_end":79529,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":101955,"byte_end":101965,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":102116,"byte_end":102126,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":102249,"byte_end":102259,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102968,"byte_end":102978,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":103108,"byte_end":103118,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":103361,"byte_end":103371,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":104324,"byte_end":104334,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":104577,"byte_end":104587,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":105624,"byte_end":105634,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107911,"byte_end":107924,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":108054,"byte_end":108067,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":108310,"byte_end":108323,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84501,"byte_end":84504,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109632,"byte_end":109636,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110232,"byte_end":110236,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110380,"byte_end":110384,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":110987,"byte_end":110994,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111555,"byte_end":111562,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111707,"byte_end":111714,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111740,"byte_end":111747,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112501,"byte_end":112510,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113113,"byte_end":113122,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":114220,"byte_end":114229,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":114430,"byte_end":114439,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115759,"byte_end":115771,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115997,"byte_end":116009,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":117122,"byte_end":117134,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":117338,"byte_end":117350,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119000,"byte_end":119012,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119110,"byte_end":119122,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119436,"byte_end":119448,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119635,"byte_end":119647,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120085,"byte_end":120091,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120785,"byte_end":120791,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120933,"byte_end":120939,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":121667,"byte_end":121680,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":122246,"byte_end":122259,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":123279,"byte_end":123292,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125464,"byte_end":125469,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125648,"byte_end":125653,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125685,"byte_end":125690,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125787,"byte_end":125792,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":133779,"byte_end":133786,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":136547,"byte_end":136554,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":137542,"byte_end":137549,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138045,"byte_end":138051,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140487,"byte_end":140493,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":141197,"byte_end":141203,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141766,"byte_end":141775,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142782,"byte_end":142791,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142974,"byte_end":142983,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":143653,"byte_end":143662,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152270,"byte_end":152280,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":154110,"byte_end":154120,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":155268,"byte_end":155278,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155760,"byte_end":155769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157608,"byte_end":157617,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158979,"byte_end":158987,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":160065,"byte_end":160073,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":161504,"byte_end":161512,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162491,"byte_end":162497,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162836,"byte_end":162842,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163227,"byte_end":163233,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163614,"byte_end":163620,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163861,"byte_end":163867,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":164206,"byte_end":164212,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":164488,"byte_end":164494,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":165029,"byte_end":165035,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":165342,"byte_end":165348,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":232804,"byte_end":232809,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":233035,"byte_end":233040,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":233249,"byte_end":233254,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":234850,"byte_end":234857,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":235122,"byte_end":235129,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":235307,"byte_end":235314,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236340,"byte_end":236345,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236739,"byte_end":236744,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236994,"byte_end":236999,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":238124,"byte_end":238130,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":238350,"byte_end":238356,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":239064,"byte_end":239070,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":239796,"byte_end":239801,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240022,"byte_end":240027,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240159,"byte_end":240164,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240282,"byte_end":240287,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":241093,"byte_end":241098,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":241254,"byte_end":241259,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":242008,"byte_end":242013,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":242761,"byte_end":242770,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":11325},{"krate":0,"index":11326},{"krate":0,"index":11327},{"krate":0,"index":11328}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":242956,"byte_end":242965,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":243083,"byte_end":243092,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":243745,"byte_end":243754,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":11329},{"krate":0,"index":11330},{"krate":0,"index":11331},{"krate":0,"index":11332}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":244533,"byte_end":244539,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245012,"byte_end":245018,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":11394},{"krate":0,"index":11395},{"krate":0,"index":11396},{"krate":0,"index":11397}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245341,"byte_end":245347,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245684,"byte_end":245690,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":247069,"byte_end":247075,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":11398},{"krate":0,"index":11399},{"krate":0,"index":11400},{"krate":0,"index":11401}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":247862,"byte_end":247871,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248168,"byte_end":248177,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":11459},{"krate":0,"index":11460},{"krate":0,"index":11461},{"krate":0,"index":11462}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248444,"byte_end":248453,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248720,"byte_end":248729,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":250147,"byte_end":250156,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":11463},{"krate":0,"index":11464},{"krate":0,"index":11465},{"krate":0,"index":11466}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":250831,"byte_end":250838,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":11516},{"krate":0,"index":11517},{"krate":0,"index":11518},{"krate":0,"index":11519}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":251007,"byte_end":251014,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":251206,"byte_end":251213,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":252035,"byte_end":252042,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":11520},{"krate":0,"index":11521},{"krate":0,"index":11522},{"krate":0,"index":11523}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":252727,"byte_end":252731,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253087,"byte_end":253091,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253352,"byte_end":253356,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253591,"byte_end":253595,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255184,"byte_end":255187,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255517,"byte_end":255520,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255773,"byte_end":255776,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":256005,"byte_end":256008,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":257760,"byte_end":257763,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258093,"byte_end":258096,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258348,"byte_end":258351,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258580,"byte_end":258583,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260419,"byte_end":260426,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260626,"byte_end":260633,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260835,"byte_end":260842,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":262647,"byte_end":262654,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":262947,"byte_end":262954,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":263185,"byte_end":263192,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":263431,"byte_end":263438,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264539,"byte_end":264543,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":11998},{"krate":0,"index":11999},{"krate":0,"index":12000},{"krate":0,"index":12001}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265040,"byte_end":265044,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265142,"byte_end":265146,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265832,"byte_end":265836,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":12002},{"krate":0,"index":12003},{"krate":0,"index":12004},{"krate":0,"index":12005}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266348,"byte_end":266360,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268850,"byte_end":268862,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268982,"byte_end":268994,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":269879,"byte_end":269882,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2964}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270071,"byte_end":270074,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":12135},{"krate":0,"index":12136},{"krate":0,"index":12137},{"krate":0,"index":12138}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270243,"byte_end":270246,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270414,"byte_end":270417,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270959,"byte_end":270962,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":12139},{"krate":0,"index":12140},{"krate":0,"index":12141},{"krate":0,"index":12142}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271529,"byte_end":271533,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271584,"byte_end":271588,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271739,"byte_end":271743,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271882,"byte_end":271886,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272537,"byte_end":272551,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272702,"byte_end":272716,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272860,"byte_end":272874,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274185,"byte_end":274193,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":12292},{"krate":0,"index":12293},{"krate":0,"index":12294},{"krate":0,"index":12295},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279690,"byte_end":279698,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279840,"byte_end":279848,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":280633,"byte_end":280641,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3146},{"krate":0,"index":12296},{"krate":0,"index":12297},{"krate":0,"index":12298},{"krate":0,"index":12299}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281007,"byte_end":281011,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281256,"byte_end":281260,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281371,"byte_end":281375,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282072,"byte_end":282079,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282327,"byte_end":282334,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282445,"byte_end":282452,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283172,"byte_end":283178,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283530,"byte_end":283536,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283805,"byte_end":283811,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285072,"byte_end":285080,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285400,"byte_end":285408,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285592,"byte_end":285600,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285971,"byte_end":285981,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286646,"byte_end":286650,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3255},{"krate":0,"index":12520},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":12523}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286841,"byte_end":286845,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286963,"byte_end":286967,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":287778,"byte_end":287782,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":12524},{"krate":0,"index":12525},{"krate":0,"index":12526},{"krate":0,"index":12527}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":288564,"byte_end":288573,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289025,"byte_end":289034,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":12593},{"krate":0,"index":12594},{"krate":0,"index":12595},{"krate":0,"index":12596}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289360,"byte_end":289369,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289617,"byte_end":289626,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":291240,"byte_end":291249,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":12597},{"krate":0,"index":12598},{"krate":0,"index":12599},{"krate":0,"index":12600}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":291926,"byte_end":291930,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":12641},{"krate":0,"index":12642},{"krate":0,"index":12643},{"krate":0,"index":12644}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":292103,"byte_end":292107,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":293079,"byte_end":293083,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":293331,"byte_end":293335,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":12645},{"krate":0,"index":12646},{"krate":0,"index":12647},{"krate":0,"index":12648}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294106,"byte_end":294115,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294563,"byte_end":294572,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":12714},{"krate":0,"index":12715},{"krate":0,"index":12716},{"krate":0,"index":12717}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294891,"byte_end":294900,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":296419,"byte_end":296428,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":296784,"byte_end":296793,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":12718},{"krate":0,"index":12719},{"krate":0,"index":12720},{"krate":0,"index":12721}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":297812,"byte_end":297821,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298109,"byte_end":298118,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":12775},{"krate":0,"index":12776},{"krate":0,"index":12777},{"krate":0,"index":12778},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":300235,"byte_end":300244,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":301276,"byte_end":301285,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":301522,"byte_end":301531,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":12779},{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12782}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302227,"byte_end":302231,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302482,"byte_end":302486,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":12840},{"krate":0,"index":12841},{"krate":0,"index":12842},{"krate":0,"index":12843}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302732,"byte_end":302736,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302962,"byte_end":302966,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3564}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":304145,"byte_end":304149,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12846},{"krate":0,"index":12847}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":304848,"byte_end":304851,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306437,"byte_end":306440,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306635,"byte_end":306638,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":309333,"byte_end":309339,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":12949},{"krate":0,"index":12950},{"krate":0,"index":12951},{"krate":0,"index":12952}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":309847,"byte_end":309853,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":311469,"byte_end":311475,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":311698,"byte_end":311704,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":12953},{"krate":0,"index":12954},{"krate":0,"index":12955},{"krate":0,"index":12956}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":312447,"byte_end":312458,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":13001},{"krate":0,"index":13002},{"krate":0,"index":13003},{"krate":0,"index":13004}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":312810,"byte_end":312821,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":314990,"byte_end":315001,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":315224,"byte_end":315235,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13007},{"krate":0,"index":13008}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":315999,"byte_end":316003,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":316489,"byte_end":316493,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":316657,"byte_end":316661,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3789},{"krate":0,"index":13074},{"krate":0,"index":13075},{"krate":0,"index":13076},{"krate":0,"index":13077}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":317023,"byte_end":317027,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":318254,"byte_end":318258,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":318632,"byte_end":318636,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":13078},{"krate":0,"index":13079},{"krate":0,"index":13080},{"krate":0,"index":13081}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":319439,"byte_end":319454,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":319786,"byte_end":319801,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":13123},{"krate":0,"index":13124},{"krate":0,"index":13125},{"krate":0,"index":13126}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":320188,"byte_end":320203,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":321657,"byte_end":321672,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3869}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":321956,"byte_end":321971,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3873},{"krate":0,"index":13127},{"krate":0,"index":13128},{"krate":0,"index":13129},{"krate":0,"index":13130}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":322782,"byte_end":322790,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":323137,"byte_end":323145,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3921},{"krate":0,"index":13172},{"krate":0,"index":13173},{"krate":0,"index":13174},{"krate":0,"index":13175}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":323425,"byte_end":323433,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":324951,"byte_end":324959,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":13176},{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":13179}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":326577,"byte_end":326592,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":330711,"byte_end":330724,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331244,"byte_end":331257,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4038}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331655,"byte_end":331665,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331690,"byte_end":331700,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331710,"byte_end":331720,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":332771,"byte_end":332781,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4051}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":334382,"byte_end":334395,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":334599,"byte_end":334612,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":335727,"byte_end":335743,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":336217,"byte_end":336233,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":13276},{"krate":0,"index":13277},{"krate":0,"index":13278},{"krate":0,"index":13279}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337172,"byte_end":337192,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337459,"byte_end":337475,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4073}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337680,"byte_end":337696,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4076},{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":342316,"byte_end":342332,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":13280},{"krate":0,"index":13281},{"krate":0,"index":13282},{"krate":0,"index":13283}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343125,"byte_end":343142,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4126}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343488,"byte_end":343505,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343938,"byte_end":343955,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4136}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":344185,"byte_end":344202,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346426,"byte_end":346437,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346460,"byte_end":346471,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346904,"byte_end":346915,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347493,"byte_end":347502,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347550,"byte_end":347559,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4192}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":348023,"byte_end":348032,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4197},{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":348754,"byte_end":348763,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350370,"byte_end":350382,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4219}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350558,"byte_end":350570,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4223}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350819,"byte_end":350831,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":351376,"byte_end":351387,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4273},{"krate":0,"index":13494},{"krate":0,"index":13495},{"krate":0,"index":13496},{"krate":0,"index":13497}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":351579,"byte_end":351590,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4280}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":352442,"byte_end":352453,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182222,"byte_end":182223,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":391841,"byte_end":391848,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":392141,"byte_end":392148,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":13555},{"krate":0,"index":13556},{"krate":0,"index":13557},{"krate":0,"index":13558}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":392429,"byte_end":392436,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":393579,"byte_end":393586,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":393932,"byte_end":393939,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":13559},{"krate":0,"index":13560},{"krate":0,"index":13561},{"krate":0,"index":13562}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394504,"byte_end":394514,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":13833},{"krate":0,"index":13834},{"krate":0,"index":13835},{"krate":0,"index":13836}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394707,"byte_end":394717,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4683}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394838,"byte_end":394848,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":395272,"byte_end":395282,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4692},{"krate":0,"index":13837},{"krate":0,"index":13838},{"krate":0,"index":13839},{"krate":0,"index":13840}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":395947,"byte_end":395953,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":396245,"byte_end":396251,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4741},{"krate":0,"index":14054},{"krate":0,"index":14055},{"krate":0,"index":14056},{"krate":0,"index":14057}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":396529,"byte_end":396535,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":397812,"byte_end":397818,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4753}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":398161,"byte_end":398167,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":14058},{"krate":0,"index":14059},{"krate":0,"index":14060},{"krate":0,"index":14061}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398722,"byte_end":398729,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398783,"byte_end":398790,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4796}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398953,"byte_end":398960,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":399102,"byte_end":399109,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":399885,"byte_end":399895,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":400191,"byte_end":400201,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4846}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":400446,"byte_end":400456,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4851},{"krate":0,"index":4852}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":401855,"byte_end":401864,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402260,"byte_end":402269,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":14188},{"krate":0,"index":14189},{"krate":0,"index":14190},{"krate":0,"index":14191}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402512,"byte_end":402521,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402778,"byte_end":402787,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4911},{"krate":0,"index":4912},{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":404176,"byte_end":404185,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":14192},{"krate":0,"index":14193},{"krate":0,"index":14194},{"krate":0,"index":14195}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":404928,"byte_end":404940,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4964}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405240,"byte_end":405252,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":14253},{"krate":0,"index":14254},{"krate":0,"index":14255},{"krate":0,"index":14256}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405449,"byte_end":405461,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405739,"byte_end":405751,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":407251,"byte_end":407263,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":14257},{"krate":0,"index":14258},{"krate":0,"index":14259},{"krate":0,"index":14260}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":407935,"byte_end":407945,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5025},{"krate":0,"index":14301},{"krate":0,"index":14302},{"krate":0,"index":14303},{"krate":0,"index":14304}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":408210,"byte_end":408220,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5028}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":408466,"byte_end":408476,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":409395,"byte_end":409405,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5036},{"krate":0,"index":14305},{"krate":0,"index":14306},{"krate":0,"index":14307},{"krate":0,"index":14308}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410085,"byte_end":410095,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410235,"byte_end":410245,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410433,"byte_end":410443,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":411441,"byte_end":411450,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":411669,"byte_end":411678,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":413062,"byte_end":413071,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":14442},{"krate":0,"index":14443},{"krate":0,"index":14444},{"krate":0,"index":14445}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":413566,"byte_end":413575,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5179},{"krate":0,"index":5180},{"krate":0,"index":5181}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415523,"byte_end":415532,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415755,"byte_end":415764,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5188},{"krate":0,"index":14446},{"krate":0,"index":14447},{"krate":0,"index":14448},{"krate":0,"index":14449}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416191,"byte_end":416205,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416350,"byte_end":416364,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416551,"byte_end":416565,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417175,"byte_end":417182,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417541,"byte_end":417548,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417828,"byte_end":417835,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":418089,"byte_end":418096,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421959,"byte_end":421968,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":422230,"byte_end":422239,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":423985,"byte_end":423997,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5361}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":424453,"byte_end":424465,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":14662},{"krate":0,"index":14663},{"krate":0,"index":14664},{"krate":0,"index":14665}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":424805,"byte_end":424817,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":426316,"byte_end":426328,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5378}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":426695,"byte_end":426707,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5385},{"krate":0,"index":14666},{"krate":0,"index":14667},{"krate":0,"index":14668},{"krate":0,"index":14669}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":427556,"byte_end":427568,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":428020,"byte_end":428032,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":14735},{"krate":0,"index":14736},{"krate":0,"index":14737},{"krate":0,"index":14738}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":428370,"byte_end":428382,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":429989,"byte_end":430001,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":430388,"byte_end":430400,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5453},{"krate":0,"index":14739},{"krate":0,"index":14740},{"krate":0,"index":14741},{"krate":0,"index":14742}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":431289,"byte_end":431307,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":14787},{"krate":0,"index":14788},{"krate":0,"index":14789},{"krate":0,"index":14790}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":431646,"byte_end":431664,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5510}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":432941,"byte_end":432959,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5515},{"krate":0,"index":14791},{"krate":0,"index":14792},{"krate":0,"index":14793},{"krate":0,"index":14794}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":433870,"byte_end":433881,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":14839},{"krate":0,"index":14840},{"krate":0,"index":14841},{"krate":0,"index":14842}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":434218,"byte_end":434229,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":435506,"byte_end":435517,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5577},{"krate":0,"index":14843},{"krate":0,"index":14844},{"krate":0,"index":14845},{"krate":0,"index":14846}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":436387,"byte_end":436407,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":436772,"byte_end":436792,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":437031,"byte_end":437051,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":437499,"byte_end":437519,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5640},{"krate":0,"index":5641}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357853,"byte_end":357854,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440283,"byte_end":440287,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440909,"byte_end":440913,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442104,"byte_end":442110,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442137,"byte_end":442143,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442451,"byte_end":442457,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5847}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443054,"byte_end":443064,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443108,"byte_end":443118,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443432,"byte_end":443442,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5888}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445962,"byte_end":445967,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445999,"byte_end":446004,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":446089,"byte_end":446094,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":5934}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":446343,"byte_end":446348,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":447287,"byte_end":447291,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":447420,"byte_end":447424,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":448029,"byte_end":448033,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5987}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448692,"byte_end":448699,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448731,"byte_end":448738,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6025}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448823,"byte_end":448830,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":449075,"byte_end":449082,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6033}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449469,"byte_end":449475,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449506,"byte_end":449512,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6068}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450277,"byte_end":450283,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":450979,"byte_end":450992,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":451905,"byte_end":451918,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454805,"byte_end":454811,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":456115,"byte_end":456121,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6167}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":456300,"byte_end":456306,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6171},{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457019,"byte_end":457027,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457324,"byte_end":457332,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6218}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460359,"byte_end":460377,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461826,"byte_end":461844,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":462124,"byte_end":462142,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6244},{"krate":0,"index":6245}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":463254,"byte_end":463272,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6254}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465843,"byte_end":465849,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":466089,"byte_end":466095,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6316}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":466375,"byte_end":466381,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6322},{"krate":0,"index":6323}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":467929,"byte_end":467941,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6387}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468046,"byte_end":468058,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468089,"byte_end":468101,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6392}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468224,"byte_end":468236,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468417,"byte_end":468429,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6398},{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471011,"byte_end":471025,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471051,"byte_end":471065,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472631,"byte_end":472645,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472738,"byte_end":472752,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6420},{"krate":0,"index":6421},{"krate":0,"index":6422}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":473914,"byte_end":473928,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474094,"byte_end":474108,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6428}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474388,"byte_end":474402,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6433}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474572,"byte_end":474586,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6436}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/abort.rs","byte_start":501551,"byte_end":501562,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6538}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502921,"byte_end":502929,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6559}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504003,"byte_end":504011,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504048,"byte_end":504058,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6565},{"krate":0,"index":6566},{"krate":0,"index":6567}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504910,"byte_end":504920,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504968,"byte_end":504975,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6575}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":505238,"byte_end":505245,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":505286,"byte_end":505296,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506165,"byte_end":506175,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506223,"byte_end":506227,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6589},{"krate":0,"index":6590},{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506486,"byte_end":506490,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506659,"byte_end":506669,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506714,"byte_end":506724,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506770,"byte_end":506780,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506825,"byte_end":506835,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506889,"byte_end":506897,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506946,"byte_end":506954,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508639,"byte_end":508643,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508678,"byte_end":508682,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508714,"byte_end":508718,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":509851,"byte_end":509855,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6685},{"krate":0,"index":6686}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":510855,"byte_end":510859,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6689}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":512309,"byte_end":512324,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":514992,"byte_end":515007,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6751}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476973,"byte_end":476989,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477030,"byte_end":477046,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477075,"byte_end":477091,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477116,"byte_end":477132,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6771}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477317,"byte_end":477333,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6773}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479040,"byte_end":479056,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6776}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479130,"byte_end":479146,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":490755,"byte_end":490771,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6804}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":495147,"byte_end":495151,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6803}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":497960,"byte_end":497976,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6807}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498114,"byte_end":498130,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6810},{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498701,"byte_end":498717,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":500367,"byte_end":500383,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":500853,"byte_end":500869,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6834}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":501145,"byte_end":501161,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":501283,"byte_end":501299,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6842}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516602,"byte_end":516611,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6899}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516756,"byte_end":516765,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518238,"byte_end":518247,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518346,"byte_end":518355,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6914},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519139,"byte_end":519148,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6918}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520166,"byte_end":520175,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6923}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520320,"byte_end":520329,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6927}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520512,"byte_end":520521,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6933}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521604,"byte_end":521608,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522041,"byte_end":522045,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522100,"byte_end":522107,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6959}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522544,"byte_end":522551,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522602,"byte_end":522610,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":523038,"byte_end":523046,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535390,"byte_end":535395,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535589,"byte_end":535594,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7082}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535770,"byte_end":535775,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7086},{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536765,"byte_end":536770,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536798,"byte_end":536803,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7123},{"krate":0,"index":7124}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":537964,"byte_end":537970,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165},{"krate":0,"index":7166}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538938,"byte_end":538944,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7170}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":539156,"byte_end":539162,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7175},{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7179}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541241,"byte_end":541245,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541312,"byte_end":541316,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211},{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541680,"byte_end":541684,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7216},{"krate":0,"index":7217}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542586,"byte_end":542591,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542942,"byte_end":542947,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7248}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":543123,"byte_end":543128,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7252},{"krate":0,"index":7253}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":543788,"byte_end":543799,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7282},{"krate":0,"index":15490},{"krate":0,"index":15491},{"krate":0,"index":15492},{"krate":0,"index":15493}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544056,"byte_end":544067,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7287},{"krate":0,"index":15494},{"krate":0,"index":15495},{"krate":0,"index":15496},{"krate":0,"index":15497}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544271,"byte_end":544282,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7292},{"krate":0,"index":15498},{"krate":0,"index":15499}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544444,"byte_end":544455,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7297}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":545064,"byte_end":545074,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7328},{"krate":0,"index":15553},{"krate":0,"index":15554},{"krate":0,"index":15555},{"krate":0,"index":15556},{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":545377,"byte_end":545387,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7335},{"krate":0,"index":7336},{"krate":0,"index":7338},{"krate":0,"index":7340},{"krate":0,"index":7342}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":546343,"byte_end":546353,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7347},{"krate":0,"index":15557},{"krate":0,"index":15558}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":546459,"byte_end":546469,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7351}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547020,"byte_end":547024,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547091,"byte_end":547095,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7385}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547283,"byte_end":547287,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7389},{"krate":0,"index":7390}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548493,"byte_end":548500,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7444}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548939,"byte_end":548946,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":549058,"byte_end":549065,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7454},{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":549841,"byte_end":549848,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7461},{"krate":0,"index":7462}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":552147,"byte_end":552153,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7511},{"krate":0,"index":7512}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554070,"byte_end":554074,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7558}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554337,"byte_end":554341,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7565}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554678,"byte_end":554682,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7573}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555053,"byte_end":555057,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7580},{"krate":0,"index":15704},{"krate":0,"index":15705}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555241,"byte_end":555245,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":15706},{"krate":0,"index":15707},{"krate":0,"index":15708},{"krate":0,"index":15709},{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555920,"byte_end":555924,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7596},{"krate":0,"index":7597},{"krate":0,"index":7598},{"krate":0,"index":7599},{"krate":0,"index":7600}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":557643,"byte_end":557654,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7643}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":558027,"byte_end":558038,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7650},{"krate":0,"index":15791},{"krate":0,"index":15792},{"krate":0,"index":15793},{"krate":0,"index":15794},{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559325,"byte_end":559336,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7658},{"krate":0,"index":15795},{"krate":0,"index":15796}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559559,"byte_end":559570,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7665}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559819,"byte_end":559830,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7672},{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":561374,"byte_end":561380,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":15850},{"krate":0,"index":15851},{"krate":0,"index":15852},{"krate":0,"index":15853},{"krate":0,"index":7714}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562108,"byte_end":562114,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562444,"byte_end":562450,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7724}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562624,"byte_end":562630,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7728},{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7731},{"krate":0,"index":7732}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524935,"byte_end":524936,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565364,"byte_end":565366,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565421,"byte_end":565423,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573517,"byte_end":573522,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573855,"byte_end":573860,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7950}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573953,"byte_end":573958,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7953}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574091,"byte_end":574097,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7961},{"krate":0,"index":7962}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574543,"byte_end":574548,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7967},{"krate":0,"index":7968}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575119,"byte_end":575124,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7974},{"krate":0,"index":7975}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578239,"byte_end":578254,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578685,"byte_end":578700,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7987}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578817,"byte_end":578832,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7992}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580061,"byte_end":580076,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7995}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580678,"byte_end":580688,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8003}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581700,"byte_end":581710,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8008}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581916,"byte_end":581926,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8011}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582024,"byte_end":582034,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8014},{"krate":0,"index":8015}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582175,"byte_end":582185,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8018}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582636,"byte_end":582652,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8030}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583782,"byte_end":583798,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8036}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584063,"byte_end":584079,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584191,"byte_end":584207,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8045}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584350,"byte_end":584366,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8049}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584643,"byte_end":584648,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584694,"byte_end":584699,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584866,"byte_end":584881,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584985,"byte_end":585000,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585204,"byte_end":585214,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585264,"byte_end":585274,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585342,"byte_end":585358,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585429,"byte_end":585445,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587449,"byte_end":587454,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587491,"byte_end":587496,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587512,"byte_end":587518,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8129},{"krate":0,"index":8130}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593138,"byte_end":593143,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8133}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593265,"byte_end":593270,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8136}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593598,"byte_end":593610,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8144}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593774,"byte_end":593786,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8147}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594007,"byte_end":594019,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594401,"byte_end":594412,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8152},{"krate":0,"index":8153}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594575,"byte_end":594586,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8156}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594724,"byte_end":594735,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8159}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":595087,"byte_end":595098,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8162}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596411,"byte_end":596420,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8204},{"krate":0,"index":8205}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598693,"byte_end":598704,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8207}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599487,"byte_end":599494,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8209}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599677,"byte_end":599684,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599697,"byte_end":599706,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8213}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":600695,"byte_end":600704,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8218},{"krate":0,"index":8219}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":600943,"byte_end":600952,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8223},{"krate":0,"index":8224}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601211,"byte_end":601222,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8227}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":601894,"byte_end":601895,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8247},{"krate":0,"index":8248}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602130,"byte_end":602131,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8256}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602401,"byte_end":602402,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603418,"byte_end":603422,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8272}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603516,"byte_end":603520,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8276},{"krate":0,"index":8277}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603779,"byte_end":603786,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8282},{"krate":0,"index":8283}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604009,"byte_end":604016,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8288}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604207,"byte_end":604214,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8293}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604519,"byte_end":604532,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8299},{"krate":0,"index":8300}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604949,"byte_end":604958,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8305},{"krate":0,"index":8306}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605242,"byte_end":605251,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8311}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605513,"byte_end":605522,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605844,"byte_end":605851,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8323},{"krate":0,"index":8324}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606070,"byte_end":606077,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8330}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606255,"byte_end":606262,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8336}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606563,"byte_end":606571,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8344},{"krate":0,"index":8345}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606794,"byte_end":606802,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8351}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606984,"byte_end":606992,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8357}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607302,"byte_end":607313,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8366},{"krate":0,"index":8367}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607573,"byte_end":607584,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607821,"byte_end":607832,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8379}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608199,"byte_end":608211,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8387},{"krate":0,"index":8388}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608472,"byte_end":608484,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8394}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608722,"byte_end":608734,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8400}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609353,"byte_end":609367,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8413},{"krate":0,"index":8414}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609590,"byte_end":609604,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8420}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609805,"byte_end":609819,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8426}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":610125,"byte_end":610131,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8436}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":610224,"byte_end":610230,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8440},{"krate":0,"index":8441}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/unfold_state.rs","byte_start":610835,"byte_end":610846,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8452},{"krate":0,"index":8453}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1977}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173744,"byte_end":173761,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6441}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":173960,"byte_end":173970,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6847}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10904,"byte_end":10908,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7024}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7784}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7883}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7885}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8463},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8463},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8463},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8463},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":61467,"byte_end":61474,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8463},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8510},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8510},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":8546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":8546},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":8546},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":9106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":9106},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":496},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":76841,"byte_end":76846,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":78553,"byte_end":78559,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":78718,"byte_end":78724,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79152,"byte_end":79160,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":504},"to":{"krate":23,"index":94}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":79519,"byte_end":79529,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":42508,"byte_end":42514,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13091},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":101955,"byte_end":101965,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":102116,"byte_end":102126,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9142},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":102249,"byte_end":102259,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9142},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":102968,"byte_end":102978,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":103108,"byte_end":103118,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9178},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":103361,"byte_end":103371,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9178},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":104324,"byte_end":104334,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9178},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":104577,"byte_end":104587,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9178},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":105624,"byte_end":105634,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":9178},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":107911,"byte_end":107924,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":9225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":108054,"byte_end":108067,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":9225},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":108310,"byte_end":108323,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":9225},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84501,"byte_end":84504,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":887},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":84587,"byte_end":84596,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":109632,"byte_end":109636,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110232,"byte_end":110236,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10171},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":110380,"byte_end":110384,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10171},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":110987,"byte_end":110994,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10177},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111555,"byte_end":111562,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111707,"byte_end":111714,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":111740,"byte_end":111747,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10177},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":112501,"byte_end":112510,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10183},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":113113,"byte_end":113122,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":114220,"byte_end":114229,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10183},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":114430,"byte_end":114439,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10183},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115759,"byte_end":115771,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10196},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":115997,"byte_end":116009,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":117122,"byte_end":117134,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10196},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":117338,"byte_end":117350,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10196},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119000,"byte_end":119012,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119110,"byte_end":119122,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119436,"byte_end":119448,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":10209},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":119635,"byte_end":119647,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10209},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120085,"byte_end":120091,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120785,"byte_end":120791,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":120933,"byte_end":120939,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":121667,"byte_end":121680,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10248},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":122246,"byte_end":122259,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10248},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":123279,"byte_end":123292,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10248},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125464,"byte_end":125469,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125648,"byte_end":125653,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125685,"byte_end":125690,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10287},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":125787,"byte_end":125792,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":133779,"byte_end":133786,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":136547,"byte_end":136554,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":137542,"byte_end":137549,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1467},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":138045,"byte_end":138051,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":140487,"byte_end":140493,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":141197,"byte_end":141203,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10641},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":141766,"byte_end":141775,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142782,"byte_end":142791,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":10649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":142974,"byte_end":142983,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":143653,"byte_end":143662,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":10649},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":152270,"byte_end":152280,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":154110,"byte_end":154120,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":155268,"byte_end":155278,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1730},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":155760,"byte_end":155769,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":157608,"byte_end":157617,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10977},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":158979,"byte_end":158987,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":160065,"byte_end":160073,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":161504,"byte_end":161512,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10985},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162491,"byte_end":162497,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":162836,"byte_end":162842,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163227,"byte_end":163233,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163614,"byte_end":163620,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":163861,"byte_end":163867,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10991},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":164206,"byte_end":164212,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":164488,"byte_end":164494,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":165029,"byte_end":165035,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10991},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":165342,"byte_end":165348,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10991},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":232804,"byte_end":232809,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":233035,"byte_end":233040,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11008},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":233249,"byte_end":233254,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11008},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":234850,"byte_end":234857,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":235122,"byte_end":235129,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11057},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":235307,"byte_end":235314,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11057},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236340,"byte_end":236345,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236739,"byte_end":236744,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11106},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":236994,"byte_end":236999,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11106},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":238124,"byte_end":238130,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":238350,"byte_end":238356,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11168},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":239064,"byte_end":239070,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11168},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":239796,"byte_end":239801,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11208},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240022,"byte_end":240027,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240159,"byte_end":240164,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11208},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":240282,"byte_end":240287,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11208},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":241093,"byte_end":241098,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":241254,"byte_end":241259,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11245},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":242008,"byte_end":242013,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11245},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":242761,"byte_end":242770,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":242956,"byte_end":242965,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11285},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":243083,"byte_end":243092,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11285},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":243745,"byte_end":243754,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11285},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":244533,"byte_end":244539,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11333},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245012,"byte_end":245018,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245341,"byte_end":245347,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11333},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":245684,"byte_end":245690,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11333},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":247069,"byte_end":247075,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11333},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":247862,"byte_end":247871,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11402},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248168,"byte_end":248177,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248444,"byte_end":248453,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11402},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":248720,"byte_end":248729,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11402},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":250147,"byte_end":250156,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11402},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":250831,"byte_end":250838,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":251007,"byte_end":251014,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11467},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":251206,"byte_end":251213,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11467},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":252035,"byte_end":252042,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11467},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":252727,"byte_end":252731,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11587},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253087,"byte_end":253091,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253352,"byte_end":253356,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11587},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":253591,"byte_end":253595,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11587},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255184,"byte_end":255187,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11656},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255517,"byte_end":255520,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":255773,"byte_end":255776,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11656},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":256005,"byte_end":256008,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11656},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":257760,"byte_end":257763,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11717},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258093,"byte_end":258096,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258348,"byte_end":258351,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11717},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":258580,"byte_end":258583,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":11717},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260419,"byte_end":260426,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":11778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260626,"byte_end":260633,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":11778},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/forward.rs","byte_start":260835,"byte_end":260842,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":11778},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":262647,"byte_end":262654,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":11901},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":262947,"byte_end":262954,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":11901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":263185,"byte_end":263192,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":11901},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":263431,"byte_end":263438,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":11901},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":264539,"byte_end":264543,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":11958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265040,"byte_end":265044,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":11958},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265142,"byte_end":265146,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":11958},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":265832,"byte_end":265836,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":11958},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":266348,"byte_end":266360,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268850,"byte_end":268862,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12006},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":268982,"byte_end":268994,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12006},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":269879,"byte_end":269882,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12090},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270071,"byte_end":270074,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270243,"byte_end":270246,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12090},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270414,"byte_end":270417,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12090},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":270959,"byte_end":270962,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12090},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271529,"byte_end":271533,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12236},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271584,"byte_end":271588,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271739,"byte_end":271743,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12236},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":271882,"byte_end":271886,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12236},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272537,"byte_end":272551,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272702,"byte_end":272716,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12244},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":272860,"byte_end":272874,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12244},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":274185,"byte_end":274193,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279690,"byte_end":279698,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12252},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":279840,"byte_end":279848,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12252},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":280633,"byte_end":280641,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12252},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281007,"byte_end":281011,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12300},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281256,"byte_end":281260,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":12300},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":281371,"byte_end":281375,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12300},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282072,"byte_end":282079,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12341},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282327,"byte_end":282334,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12341},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":282445,"byte_end":282452,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12341},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283172,"byte_end":283178,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12382},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283530,"byte_end":283536,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12382},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":283805,"byte_end":283811,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12382},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285072,"byte_end":285080,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12431},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285400,"byte_end":285408,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12431},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285592,"byte_end":285600,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12431},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":285971,"byte_end":285981,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3199},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286646,"byte_end":286650,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286841,"byte_end":286845,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12480},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":286963,"byte_end":286967,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12480},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":287778,"byte_end":287782,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12480},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":288564,"byte_end":288573,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12528},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289025,"byte_end":289034,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289360,"byte_end":289369,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12528},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":289617,"byte_end":289626,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12528},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":291240,"byte_end":291249,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12528},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":291926,"byte_end":291930,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":292103,"byte_end":292107,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12601},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":293079,"byte_end":293083,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12601},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":293331,"byte_end":293335,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12601},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294106,"byte_end":294115,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12649},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294563,"byte_end":294572,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":294891,"byte_end":294900,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12649},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":296419,"byte_end":296428,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12649},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":296784,"byte_end":296793,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12649},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":297812,"byte_end":297821,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12722},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":298109,"byte_end":298118,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":300235,"byte_end":300244,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":12722},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":301276,"byte_end":301285,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":12722},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":301522,"byte_end":301531,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":12722},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302227,"byte_end":302231,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12783},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302482,"byte_end":302486,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302732,"byte_end":302736,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12783},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":302962,"byte_end":302966,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":12783},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":304145,"byte_end":304149,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":12783},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":304848,"byte_end":304851,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":12848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306437,"byte_end":306440,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":12848},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":306635,"byte_end":306638,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":12848},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":309333,"byte_end":309339,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":12905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":309847,"byte_end":309853,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":12905},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":311469,"byte_end":311475,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12905},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":311698,"byte_end":311704,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":12905},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":312447,"byte_end":312458,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":12957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":312810,"byte_end":312821,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":12957},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":314990,"byte_end":315001,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":12957},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":315224,"byte_end":315235,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":12957},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":315999,"byte_end":316003,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":13009},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":316489,"byte_end":316493,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":316657,"byte_end":316661,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":317023,"byte_end":317027,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13009},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":318254,"byte_end":318258,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13009},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":318632,"byte_end":318636,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13009},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":319439,"byte_end":319454,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13082},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":319786,"byte_end":319801,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":320188,"byte_end":320203,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13082},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":321657,"byte_end":321672,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13082},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":321956,"byte_end":321971,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13082},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":322782,"byte_end":322790,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13131},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":323137,"byte_end":323145,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":323425,"byte_end":323433,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13131},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":324951,"byte_end":324959,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":13131},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":326577,"byte_end":326592,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":330711,"byte_end":330724,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331244,"byte_end":331257,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4024},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331655,"byte_end":331665,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331690,"byte_end":331700,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":331710,"byte_end":331720,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":332771,"byte_end":332781,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4039},"to":{"krate":23,"index":94}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":334382,"byte_end":334395,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":13186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":334599,"byte_end":334612,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":13186},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":335727,"byte_end":335743,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":13219},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":336217,"byte_end":336233,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337172,"byte_end":337192,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":13228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337459,"byte_end":337475,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13219},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":337680,"byte_end":337696,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":13219},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":342316,"byte_end":342332,"line_start":502,"line_end":502,"column_start":31,"column_end":47},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13219},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343125,"byte_end":343142,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13377},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343488,"byte_end":343505,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":343938,"byte_end":343955,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13377},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":344185,"byte_end":344202,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":13377},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346426,"byte_end":346437,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":13438},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346460,"byte_end":346471,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":13438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":346904,"byte_end":346915,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":13438},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347493,"byte_end":347502,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":13445},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":347550,"byte_end":347559,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":13445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":348023,"byte_end":348032,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":13445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":348754,"byte_end":348763,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":13445},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350370,"byte_end":350382,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4210},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350558,"byte_end":350570,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4210},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/split.rs","byte_start":350819,"byte_end":350831,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4210},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":351376,"byte_end":351387,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":13454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":351579,"byte_end":351590,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":13454},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":352442,"byte_end":352453,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":13454},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182222,"byte_end":182223,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4288},"to":{"krate":0,"index":4289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182366,"byte_end":182372,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":4289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":391841,"byte_end":391848,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":13498},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":392141,"byte_end":392148,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":13498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":392429,"byte_end":392436,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":13498},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":393579,"byte_end":393586,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":13498},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":393932,"byte_end":393939,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":13498},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394504,"byte_end":394514,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":13797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394707,"byte_end":394717,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":13797},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":394838,"byte_end":394848,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":13797},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":395272,"byte_end":395282,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":13797},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":395947,"byte_end":395953,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":13997},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":396245,"byte_end":396251,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":13997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":396529,"byte_end":396535,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":13997},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":397812,"byte_end":397818,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":13997},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":398161,"byte_end":398167,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":13997},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398722,"byte_end":398729,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14062},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398783,"byte_end":398790,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":398953,"byte_end":398960,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":14062},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":399102,"byte_end":399109,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14062},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":399885,"byte_end":399895,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14070},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":400191,"byte_end":400201,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":400446,"byte_end":400456,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":14070},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":401855,"byte_end":401864,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14127},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402260,"byte_end":402269,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402512,"byte_end":402521,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14127},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":402778,"byte_end":402787,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14127},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":404176,"byte_end":404185,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14127},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":404928,"byte_end":404940,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14196},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405240,"byte_end":405252,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405449,"byte_end":405461,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14196},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":405739,"byte_end":405751,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14196},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":407251,"byte_end":407263,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14196},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":407935,"byte_end":407945,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":408210,"byte_end":408220,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14261},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":408466,"byte_end":408476,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14261},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":409395,"byte_end":409405,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":14261},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410085,"byte_end":410095,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410235,"byte_end":410245,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14309},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":410433,"byte_end":410443,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14309},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":411441,"byte_end":411450,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":411669,"byte_end":411678,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14358},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":413062,"byte_end":413071,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":413566,"byte_end":413575,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14398},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415523,"byte_end":415532,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14398},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":415755,"byte_end":415764,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14398},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416191,"byte_end":416205,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14450},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416350,"byte_end":416364,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14450},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":416551,"byte_end":416565,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14450},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417175,"byte_end":417182,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14471},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417541,"byte_end":417548,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":417828,"byte_end":417835,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14471},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":418089,"byte_end":418096,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14471},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":421959,"byte_end":421968,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14540},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":422230,"byte_end":422239,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14540},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":423985,"byte_end":423997,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14597},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":424453,"byte_end":424465,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":14597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":424805,"byte_end":424817,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":14597},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":426316,"byte_end":426328,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":14597},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":426695,"byte_end":426707,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14597},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":427556,"byte_end":427568,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":14670},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":428020,"byte_end":428032,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":428370,"byte_end":428382,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14670},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":429989,"byte_end":430001,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14670},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":430388,"byte_end":430400,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":14670},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":431289,"byte_end":431307,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":14743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":431646,"byte_end":431664,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":14743},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":432941,"byte_end":432959,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":14743},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":433870,"byte_end":433881,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":14795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":434218,"byte_end":434229,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":14795},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":435506,"byte_end":435517,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":14795},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":436387,"byte_end":436407,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":436772,"byte_end":436792,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":14847},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":437031,"byte_end":437051,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":14847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":437499,"byte_end":437519,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":14847},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357853,"byte_end":357854,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5647},"to":{"krate":0,"index":5648}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357935,"byte_end":357944,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5648}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440283,"byte_end":440287,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":14908},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":440909,"byte_end":440913,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":14908},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442104,"byte_end":442110,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":14917},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442137,"byte_end":442143,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":14917},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":442451,"byte_end":442457,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":14917},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443054,"byte_end":443064,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":14926},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443108,"byte_end":443118,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":14926},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":443432,"byte_end":443442,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":14926},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445962,"byte_end":445967,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":14935},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":445999,"byte_end":446004,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":14935},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":446089,"byte_end":446094,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":14935},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":446343,"byte_end":446348,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":14935},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":447287,"byte_end":447291,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":14941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":447420,"byte_end":447424,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":14941},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":448029,"byte_end":448033,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":14941},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448692,"byte_end":448699,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":14977},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448731,"byte_end":448738,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":14977},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":448823,"byte_end":448830,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":14977},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":449075,"byte_end":449082,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":14977},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449469,"byte_end":449475,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6061},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":449506,"byte_end":449512,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6061},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":450277,"byte_end":450283,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6061},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":450979,"byte_end":450992,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":14983},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":451905,"byte_end":451918,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":14983},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":454805,"byte_end":454811,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":15022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":456115,"byte_end":456121,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":15022},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":456300,"byte_end":456306,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":15022},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457019,"byte_end":457027,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":15067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":457324,"byte_end":457332,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":15067},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":460359,"byte_end":460377,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":15086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":461826,"byte_end":461844,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":15086},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":462124,"byte_end":462142,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":15086},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":463254,"byte_end":463272,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":15086},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":465843,"byte_end":465849,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":15155},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":466089,"byte_end":466095,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":15155},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":466375,"byte_end":466381,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":15155},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":467929,"byte_end":467941,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":15208},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468046,"byte_end":468058,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":15208},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468089,"byte_end":468101,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":15208},"to":{"krate":2,"index":2755}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468224,"byte_end":468236,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":15208},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":468417,"byte_end":468429,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":15208},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471011,"byte_end":471025,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":471051,"byte_end":471065,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472631,"byte_end":472645,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":472738,"byte_end":472752,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6401},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":473914,"byte_end":473928,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474094,"byte_end":474108,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474388,"byte_end":474402,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6401},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":474572,"byte_end":474586,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/abort.rs","byte_start":501551,"byte_end":501562,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6535},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":502921,"byte_end":502929,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504003,"byte_end":504011,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504048,"byte_end":504058,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":15248},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504910,"byte_end":504920,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":15248},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":504968,"byte_end":504975,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":15258},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":505238,"byte_end":505245,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":15258},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":505286,"byte_end":505296,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":15267},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506165,"byte_end":506175,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":15267},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506223,"byte_end":506227,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506486,"byte_end":506490,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":15278},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506659,"byte_end":506669,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":15267},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506714,"byte_end":506724,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":15267},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506770,"byte_end":506780,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":15248},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506825,"byte_end":506835,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":15248},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506889,"byte_end":506897,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":506946,"byte_end":506954,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":15287},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508639,"byte_end":508643,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6666},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508678,"byte_end":508682,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6666},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":508714,"byte_end":508718,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6666},"to":{"krate":23,"index":94}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":509851,"byte_end":509855,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":510855,"byte_end":510859,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6666},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":512309,"byte_end":512324,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":514992,"byte_end":515007,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6737},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":476973,"byte_end":476989,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477030,"byte_end":477046,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477075,"byte_end":477091,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477116,"byte_end":477132,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6759},"to":{"krate":23,"index":15}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":477317,"byte_end":477333,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6759},"to":{"krate":23,"index":18}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479040,"byte_end":479056,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":479130,"byte_end":479146,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":490755,"byte_end":490771,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6759},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":495147,"byte_end":495151,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6796},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":497960,"byte_end":497976,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498114,"byte_end":498130,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":498701,"byte_end":498717,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":500367,"byte_end":500383,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":500853,"byte_end":500869,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":501145,"byte_end":501161,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6759},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":501283,"byte_end":501299,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516602,"byte_end":516611,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":516756,"byte_end":516765,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518238,"byte_end":518247,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":518346,"byte_end":518355,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15294},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":519139,"byte_end":519148,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15294},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520166,"byte_end":520175,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520320,"byte_end":520329,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":520512,"byte_end":520521,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15294},"to":{"krate":2,"index":7783}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":521604,"byte_end":521608,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15327},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522041,"byte_end":522045,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15327},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522100,"byte_end":522107,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15336},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522544,"byte_end":522551,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15336},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":522602,"byte_end":522610,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15345},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":523038,"byte_end":523046,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15345},"to":{"krate":2,"index":7852}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535390,"byte_end":535395,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15352},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535589,"byte_end":535594,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/close.rs","byte_start":535770,"byte_end":535775,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15352},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536765,"byte_end":536770,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15363},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/drain.rs","byte_start":536798,"byte_end":536803,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15363},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":537964,"byte_end":537970,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":538938,"byte_end":538944,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":15369},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/fanout.rs","byte_start":539156,"byte_end":539162,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":15369},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541241,"byte_end":541245,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":15414},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541312,"byte_end":541316,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":15414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/feed.rs","byte_start":541680,"byte_end":541684,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15414},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542586,"byte_end":542591,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15425},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":542942,"byte_end":542947,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/flush.rs","byte_start":543123,"byte_end":543128,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15425},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":543788,"byte_end":543799,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544056,"byte_end":544067,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15436},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544271,"byte_end":544282,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15436},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/err_into.rs","byte_start":544444,"byte_end":544455,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15436},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":545064,"byte_end":545074,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":545377,"byte_end":545387,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15500},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":546343,"byte_end":546353,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15500},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/map_err.rs","byte_start":546459,"byte_end":546469,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15500},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547020,"byte_end":547024,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15559},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547091,"byte_end":547095,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send.rs","byte_start":547283,"byte_end":547287,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15559},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548493,"byte_end":548500,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7434},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":548939,"byte_end":548946,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7434},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":549058,"byte_end":549065,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/send_all.rs","byte_start":549841,"byte_end":549848,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7434},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/unfold.rs","byte_start":552147,"byte_end":552153,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15569},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554070,"byte_end":554074,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":15627},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554337,"byte_end":554341,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":15627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":554678,"byte_end":554682,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":15627},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555053,"byte_end":555057,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":15627},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555241,"byte_end":555245,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with.rs","byte_start":555920,"byte_end":555924,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15627},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":557643,"byte_end":557654,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15710},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":558027,"byte_end":558038,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":15710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559325,"byte_end":559336,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":15710},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559559,"byte_end":559570,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":15710},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/with_flat_map.rs","byte_start":559819,"byte_end":559830,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":15710},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":561374,"byte_end":561380,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":15797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562108,"byte_end":562114,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":15797},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562444,"byte_end":562450,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":15797},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/buffer.rs","byte_start":562624,"byte_end":562630,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":15797},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":524935,"byte_end":524936,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7737},"to":{"krate":0,"index":7739}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/sink/mod.rs","byte_start":525085,"byte_end":525089,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":24,"index":17},"to":{"krate":0,"index":7739}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565364,"byte_end":565366,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":7867},"to":{"krate":0,"index":7870}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565421,"byte_end":565423,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7869},"to":{"krate":0,"index":7873}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":565502,"byte_end":565507,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":23,"index":15},"to":{"krate":0,"index":7870}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":568441,"byte_end":568451,"line_start":99,"line_end":99,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":18},"to":{"krate":0,"index":7873}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573517,"byte_end":573522,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7940},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573855,"byte_end":573860,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":7940},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":573953,"byte_end":573958,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7940},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574091,"byte_end":574097,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":574543,"byte_end":574548,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":575119,"byte_end":575124,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578239,"byte_end":578254,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578685,"byte_end":578700,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7977},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":578817,"byte_end":578832,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580061,"byte_end":580076,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":580678,"byte_end":580688,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581700,"byte_end":581710,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":581916,"byte_end":581926,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582024,"byte_end":582034,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582175,"byte_end":582185,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":582636,"byte_end":582652,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":583782,"byte_end":583798,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584063,"byte_end":584079,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584191,"byte_end":584207,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584350,"byte_end":584366,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584643,"byte_end":584648,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7940},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584694,"byte_end":584699,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7940},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584866,"byte_end":584881,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":584985,"byte_end":585000,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7977},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585204,"byte_end":585214,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585264,"byte_end":585274,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585342,"byte_end":585358,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":585429,"byte_end":585445,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8019},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587449,"byte_end":587454,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":15860},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587491,"byte_end":587496,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":15860},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":587512,"byte_end":587518,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":15854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593138,"byte_end":593143,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":15860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593265,"byte_end":593270,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":15860},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593598,"byte_end":593610,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8137},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":593774,"byte_end":593786,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8137},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594007,"byte_end":594019,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8137},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594401,"byte_end":594412,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":15867},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594575,"byte_end":594586,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":15867},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":594724,"byte_end":594735,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":15867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":595087,"byte_end":595098,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":15867},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":596411,"byte_end":596420,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":15875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":598693,"byte_end":598704,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":15922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599487,"byte_end":599494,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":15933},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599677,"byte_end":599684,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":15933},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":599697,"byte_end":599706,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":15875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":600695,"byte_end":600704,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":15875},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":600943,"byte_end":600952,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":15875},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":601211,"byte_end":601222,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":15922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":601894,"byte_end":601895,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8244},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602034,"byte_end":602041,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8239},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602130,"byte_end":602131,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8253},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602317,"byte_end":602323,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8249},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":602401,"byte_end":602402,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8261},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603418,"byte_end":603422,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8266},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603516,"byte_end":603520,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8266},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":603779,"byte_end":603786,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":15964},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604009,"byte_end":604016,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":15964},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604207,"byte_end":604214,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":15964},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604519,"byte_end":604532,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":15985},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":604949,"byte_end":604958,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":16001},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605242,"byte_end":605251,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":16001},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605513,"byte_end":605522,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":16001},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":605844,"byte_end":605851,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":16016},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606070,"byte_end":606077,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":16016},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606255,"byte_end":606262,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":16016},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606563,"byte_end":606571,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":16031},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606794,"byte_end":606802,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":16031},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":606984,"byte_end":606992,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":16031},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607302,"byte_end":607313,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":16046},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607573,"byte_end":607584,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":16046},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":607821,"byte_end":607832,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":16046},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608199,"byte_end":608211,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":16058},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608472,"byte_end":608484,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":16058},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":608722,"byte_end":608734,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":16058},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609353,"byte_end":609367,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":16070},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609590,"byte_end":609604,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":16070},"to":{"krate":0,"index":8249}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":609805,"byte_end":609819,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":16070},"to":{"krate":0,"index":8257}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":610125,"byte_end":610131,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8430},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":610224,"byte_end":610230,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8430},"to":{"krate":0,"index":8239}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/unfold_state.rs","byte_start":610835,"byte_end":610846,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":16103},"to":{"krate":4294967295,"index":4294967295}}]}