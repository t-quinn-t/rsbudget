{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0","program":"/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-attributes\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"async-process\"","--cfg","feature=\"attributes\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=40aecb5add8eb021","-C","extra-filename=-40aecb5add8eb021","--out-dir","/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","-L","dependency=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","--extern","async_attributes=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_attributes-ac5f6f9f091f3390.so","--extern","async_channel=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_channel-dd72f3eab7760ced.rmeta","--extern","async_global_executor=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_global_executor-1e784253a9aa07d2.rmeta","--extern","async_io=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_io-23b2b72cfb5ed1cf.rmeta","--extern","async_lock=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_lock-76c9171667b12fe2.rmeta","--extern","async_process=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_process-77cd26510d624f21.rmeta","--extern","crossbeam_utils=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libcrossbeam_utils-ee7e8a5782bb99c0.rmeta","--extern","futures_core=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_core-60458e76f3df90f4.rmeta","--extern","futures_io=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_io-7e7dff6b2cfca460.rmeta","--extern","futures_lite=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libfutures_lite-093e97c98ae6f298.rmeta","--extern","kv_log_macro=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libkv_log_macro-e49f6aed55c73a9c.rmeta","--extern","log=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/liblog-e97f0facaf0c0e35.rmeta","--extern","memchr=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libmemchr-42969de77fb93340.rmeta","--extern","num_cpus=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libnum_cpus-b6c37aa42dd025e0.rmeta","--extern","once_cell=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libonce_cell-f09fca34c233de76.rmeta","--extern","pin_project_lite=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libpin_project_lite-ea3d2cf69622cc1e.rmeta","--extern","pin_utils=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libpin_utils-88dc719c123778e1.rmeta","--extern","slab=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libslab-85676563150d8dd1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libasync_std-40aecb5add8eb021.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[349222458135700032,0]},"crate_root":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src","external_crates":[{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":20,"id":{"name":"async_attributes","disambiguator":[8664427145267721097,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":21,"id":{"name":"kv_log_macro","disambiguator":[10237321455192598520,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":22,"id":{"name":"log","disambiguator":[1394443043719247967,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":23,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":24,"id":{"name":"serde","disambiguator":[1115537474002606349,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":25,"id":{"name":"serde_derive","disambiguator":[12111812958458064915,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":26,"id":{"name":"value_bag","disambiguator":[4874739000364297949,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":27,"id":{"name":"ctor","disambiguator":[18104799359949978945,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":28,"id":{"name":"erased_serde","disambiguator":[7589146410408223281,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":29,"id":{"name":"serde_fmt","disambiguator":[18295812741325958671,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","num":30,"id":{"name":"futures_core","disambiguator":[9655805743935561678,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","num":31,"id":{"name":"pin_utils","disambiguator":[7302173720166050639,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","num":32,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","num":33,"id":{"name":"async_lock","disambiguator":[2430763068856868576,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","num":34,"id":{"name":"event_listener","disambiguator":[1614944608805918555,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":35,"id":{"name":"async_channel","disambiguator":[6157337523548597810,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":36,"id":{"name":"concurrent_queue","disambiguator":[8980289821448208517,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":37,"id":{"name":"cache_padded","disambiguator":[10356172941812467702,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","num":38,"id":{"name":"futures_io","disambiguator":[296652318703822718,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":39,"id":{"name":"async_process","disambiguator":[9361801141991386963,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","num":40,"id":{"name":"async_io","disambiguator":[5810419320985388811,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":41,"id":{"name":"futures_lite","disambiguator":[3727582263330087103,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":42,"id":{"name":"parking","disambiguator":[12090375701030850463,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":43,"id":{"name":"waker_fn","disambiguator":[9022767873912630142,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":44,"id":{"name":"fastrand","disambiguator":[10627925366935889127,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","num":45,"id":{"name":"memchr","disambiguator":[2097954395300491601,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":46,"id":{"name":"socket2","disambiguator":[18430510122980896358,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":47,"id":{"name":"libc","disambiguator":[7983304030901990540,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/rt/mod.rs","num":48,"id":{"name":"once_cell","disambiguator":[18281702906408608498,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":49,"id":{"name":"polling","disambiguator":[15724573486103253220,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":50,"id":{"name":"slab","disambiguator":[6653587815988834765,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":51,"id":{"name":"signal_hook","disambiguator":[4921010641992929966,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":52,"id":{"name":"signal_hook_registry","disambiguator":[17843080986603380322,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":53,"id":{"name":"crossbeam_utils","disambiguator":[2382910678223149374,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":54,"id":{"name":"lazy_static","disambiguator":[10224609335574576683,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":55,"id":{"name":"async_global_executor","disambiguator":[12102490496291326418,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":56,"id":{"name":"async_executor","disambiguator":[3602176673718571193,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":57,"id":{"name":"async_task","disambiguator":[14712604254451078463,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":58,"id":{"name":"blocking","disambiguator":[14144754201222379102,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":59,"id":{"name":"atomic_waker","disambiguator":[18006113248366990050,0]}}],"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":16},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10834,"byte_end":10838,"line_start":294,"line_end":294,"column_start":28,"column_end":32},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":17},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10840,"byte_end":10844,"line_start":294,"line_end":294,"column_start":34,"column_end":38},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13393},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927264,"byte_end":13927271,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":49135},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927273,"byte_end":13927277,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":13403},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927279,"byte_end":13927284,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":30,"index":169},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927306,"byte_end":13927311,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":30,"index":169},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/ready.rs","byte_start":14067443,"byte_end":14067448,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1975}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927366,"byte_end":13927375,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927436,"byte_end":13927444,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2320},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927467,"byte_end":13927474,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927498,"byte_end":13927505,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2123},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927507,"byte_end":13927518,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927539,"byte_end":13927543,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927566,"byte_end":13927572,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2347},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927566,"byte_end":13927572,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2334},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927599,"byte_end":13927609,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927630,"byte_end":13927635,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2182},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927695,"byte_end":13927700,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927727,"byte_end":13927738,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927740,"byte_end":13927748,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2193},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13928251,"byte_end":13928265,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13928482,"byte_end":13928493,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931077,"byte_end":13931083,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14234869,"byte_end":14234875,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2417}},{"kind":"Use","ref_id":{"krate":0,"index":2679},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931147,"byte_end":13931154,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2704},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931177,"byte_end":13931184,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931205,"byte_end":13931210,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931338,"byte_end":13931345,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931347,"byte_end":13931359,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":2748},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13931472,"byte_end":13931482,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":0,"index":1830},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944006,"byte_end":13944011,"line_start":304,"line_end":304,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3197},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944013,"byte_end":13944018,"line_start":304,"line_end":304,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1852},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944039,"byte_end":13944046,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944048,"byte_end":13944054,"line_start":305,"line_end":305,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1880},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944077,"byte_end":13944086,"line_start":306,"line_end":306,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944088,"byte_end":13944096,"line_start":306,"line_end":306,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944114,"byte_end":13944118,"line_start":307,"line_end":307,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9866},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944120,"byte_end":13944124,"line_start":307,"line_end":307,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944144,"byte_end":13944150,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3212},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944152,"byte_end":13944158,"line_start":308,"line_end":308,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944183,"byte_end":13944194,"line_start":309,"line_end":309,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3221},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944196,"byte_end":13944206,"line_start":309,"line_end":309,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":115}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944225,"byte_end":13944226,"line_start":310,"line_end":310,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Fuse, Stream","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11928},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946676,"byte_end":13946681,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11892},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946699,"byte_end":13946705,"line_start":99,"line_end":99,"column_start":17,"column_end":23},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11803},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946723,"byte_end":13946729,"line_start":100,"line_end":100,"column_start":17,"column_end":23},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11629},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946747,"byte_end":13946753,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11430},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946769,"byte_end":13946773,"line_start":102,"line_end":102,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11299},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946792,"byte_end":13946799,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":11123},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946814,"byte_end":13946817,"line_start":104,"line_end":104,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946833,"byte_end":13946837,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10609},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946853,"byte_end":13946857,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10560},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946879,"byte_end":13946888,"line_start":107,"line_end":107,"column_start":21,"column_end":30},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946907,"byte_end":13946913,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946929,"byte_end":13946933,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10424},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946955,"byte_end":13946964,"line_start":110,"line_end":110,"column_start":21,"column_end":30},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10375},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13946979,"byte_end":13946982,"line_start":111,"line_end":111,"column_start":14,"column_end":17},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947355,"byte_end":13947360,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947383,"byte_end":13947390,"line_start":129,"line_end":129,"column_start":22,"column_end":29},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10199},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947414,"byte_end":13947421,"line_start":130,"line_end":130,"column_start":23,"column_end":30},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947445,"byte_end":13947457,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10093},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947459,"byte_end":13947466,"line_start":131,"line_end":131,"column_start":37,"column_end":44},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10048},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947491,"byte_end":13947499,"line_start":132,"line_end":132,"column_start":23,"column_end":31},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":10007},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947520,"byte_end":13947525,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":30,"index":96},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947710,"byte_end":13947716,"line_start":146,"line_end":146,"column_start":31,"column_end":37},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":159}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944603,"byte_end":13944620,"line_start":334,"line_end":334,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944653,"byte_end":13944668,"line_start":335,"line_end":335,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3452},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944691,"byte_end":13944697,"line_start":336,"line_end":336,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3447},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944699,"byte_end":13944705,"line_start":336,"line_end":336,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944733,"byte_end":13944743,"line_start":337,"line_end":337,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3478},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944771,"byte_end":13944782,"line_start":338,"line_end":338,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3508},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944807,"byte_end":13944815,"line_start":339,"line_end":339,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3698},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944817,"byte_end":13944825,"line_start":339,"line_end":339,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944853,"byte_end":13944863,"line_start":340,"line_end":340,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3552},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944887,"byte_end":13944894,"line_start":341,"line_end":341,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3703},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944896,"byte_end":13944903,"line_start":341,"line_end":341,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3576},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944927,"byte_end":13944934,"line_start":342,"line_end":342,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944956,"byte_end":13944961,"line_start":343,"line_end":343,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3612},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13944988,"byte_end":13944998,"line_start":344,"line_end":344,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9703},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13945000,"byte_end":13945010,"line_start":344,"line_end":344,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":3630},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13945030,"byte_end":13945033,"line_start":345,"line_end":345,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":1,"index":4154},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344591,"byte_end":14344596,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":11058},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344598,"byte_end":14344607,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":11182},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344609,"byte_end":14344616,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":4744},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344618,"byte_end":14344628,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":4152},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344630,"byte_end":14344636,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":11194},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344638,"byte_end":14344646,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":38,"index":49},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344673,"byte_end":14344680,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":9655},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344682,"byte_end":14344687,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":9607},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344689,"byte_end":14344694,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":9473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344721,"byte_end":14344730,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":9432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344757,"byte_end":14344766,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5595},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344768,"byte_end":14344782,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5412},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344803,"byte_end":14344807,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5603},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344829,"byte_end":14344835,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5515},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344857,"byte_end":14344862,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344864,"byte_end":14344869,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4289}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344890,"byte_end":14344891,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5547},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344914,"byte_end":14344920,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5548},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344922,"byte_end":14344928,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":38,"index":47},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344949,"byte_end":14344953,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5575},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344974,"byte_end":14344978,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5576},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344980,"byte_end":14344984,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4289}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345006,"byte_end":14345007,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"_, Write","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":38,"index":49},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354871,"byte_end":14354878,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":38,"index":39},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354917,"byte_end":14354921,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":38,"index":47},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354960,"byte_end":14354964,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":38,"index":42},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14355003,"byte_end":14355008,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":0,"index":4605},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14355055,"byte_end":14355065,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":0,"index":4949},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14355107,"byte_end":14355114,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":0,"index":5012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14355156,"byte_end":14355163,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":0,"index":5199},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14355206,"byte_end":14355214,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":4397}},{"kind":"Use","ref_id":{"krate":0,"index":9655},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14355286,"byte_end":14355291,"line_start":6,"line_end":6,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4422}},{"kind":"Use","ref_id":{"krate":0,"index":9607},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14355308,"byte_end":14355313,"line_start":7,"line_end":7,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4422}},{"kind":"Use","ref_id":{"krate":38,"index":49},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14355485,"byte_end":14355497,"line_start":18,"line_end":18,"column_start":21,"column_end":33},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4422}},{"kind":"Use","ref_id":{"krate":0,"index":5584},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369150,"byte_end":14369155,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":4616}},{"kind":"Use","ref_id":{"krate":0,"index":9558},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369172,"byte_end":14369177,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":4616}},{"kind":"Use","ref_id":{"krate":0,"index":9518},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369193,"byte_end":14369197,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":4616}},{"kind":"Use","ref_id":{"krate":38,"index":39},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369220,"byte_end":14369229,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4616}},{"kind":"Use","ref_id":{"krate":38,"index":47},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14400450,"byte_end":14400459,"line_start":7,"line_end":7,"column_start":21,"column_end":30},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4969}},{"kind":"Use","ref_id":{"krate":38,"index":42},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14402260,"byte_end":14402270,"line_start":15,"line_end":15,"column_start":21,"column_end":31},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":5016}},{"kind":"Use","ref_id":{"krate":0,"index":5785},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345411,"byte_end":14345418,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345420,"byte_end":14345426,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5716},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345490,"byte_end":14345496,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5825},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345498,"byte_end":14345504,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5759},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345566,"byte_end":14345571,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5863},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345573,"byte_end":14345578,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345641,"byte_end":14345647,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5902},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345649,"byte_end":14345655,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":0,"index":5676},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345679,"byte_end":14345686,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":4289}},{"kind":"Use","ref_id":{"krate":1,"index":6961},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":14474345,"byte_end":14474352,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":5944}},{"kind":"Use","ref_id":{"krate":1,"index":6963},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":14474354,"byte_end":14474363,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":5944}},{"kind":"Use","ref_id":{"krate":1,"index":6965},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":14474365,"byte_end":14474374,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":5944}},{"kind":"Use","ref_id":{"krate":1,"index":6960},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":14474376,"byte_end":14474381,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":5944}},{"kind":"Use","ref_id":{"krate":1,"index":5898},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477439,"byte_end":14477452,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":5958}},{"kind":"Use","ref_id":{"krate":1,"index":5886},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477454,"byte_end":14477465,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":5958}},{"kind":"Use","ref_id":{"krate":1,"index":5836},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477467,"byte_end":14477481,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":5958}},{"kind":"Use","ref_id":{"krate":0,"index":6023},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479073,"byte_end":14479085,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":5974}},{"kind":"Use","ref_id":{"krate":0,"index":6134},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479106,"byte_end":14479114,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5974}},{"kind":"Use","ref_id":{"krate":0,"index":6120},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479116,"byte_end":14479128,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":5974}},{"kind":"Use","ref_id":{"krate":0,"index":6248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479147,"byte_end":14479157,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":5974}},{"kind":"Use","ref_id":{"krate":1,"index":11423},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479249,"byte_end":14479259,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5974}},{"kind":"Use","ref_id":{"krate":39,"index":62},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":14474244,"byte_end":14474248,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":5940}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346329,"byte_end":14346335,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":30,"index":96},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346386,"byte_end":14346392,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":2421},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346449,"byte_end":14346458,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":1693},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346514,"byte_end":14346523,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":38,"index":49},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346570,"byte_end":14346577,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":38,"index":39},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346629,"byte_end":14346633,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":38,"index":47},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346685,"byte_end":14346689,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":38,"index":42},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346741,"byte_end":14346746,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":4605},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346808,"byte_end":14346818,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":4949},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346879,"byte_end":14346886,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":5012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346947,"byte_end":14346954,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":5199},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14347015,"byte_end":14347023,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14347089,"byte_end":14347099,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14347169,"byte_end":14347186,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":0,"index":3432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14347237,"byte_end":14347252,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":4292}},{"kind":"Use","ref_id":{"krate":5,"index":5980},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353941,"byte_end":14353944,"line_start":175,"line_end":175,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":5,"index":6000},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353946,"byte_end":14353950,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":60},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353990,"byte_end":14353995,"line_start":178,"line_end":178,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":108},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353997,"byte_end":14354007,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":137},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354009,"byte_end":14354022,"line_start":178,"line_end":178,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":210},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354062,"byte_end":14354068,"line_start":181,"line_end":181,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":253},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354070,"byte_end":14354085,"line_start":181,"line_end":181,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":275},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354087,"byte_end":14354112,"line_start":181,"line_end":181,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":311},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354114,"byte_end":14354130,"line_start":181,"line_end":181,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":412},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354175,"byte_end":14354182,"line_start":184,"line_end":184,"column_start":26,"column_end":33},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":33,"index":423},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354184,"byte_end":14354201,"line_start":184,"line_end":184,"column_start":35,"column_end":52},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4293}},{"kind":"Use","ref_id":{"krate":0,"index":6345},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14354225,"byte_end":14354232,"line_start":185,"line_end":185,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":4293}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354569,"byte_end":14354570,"line_start":8,"line_end":8,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4324}},{"kind":"Use","ref_id":{"krate":0,"index":8052},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525390,"byte_end":14525400,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6694},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525421,"byte_end":14525429,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":8069},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525445,"byte_end":14525449,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":1,"index":10936},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525470,"byte_end":14525478,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":1,"index":10905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525498,"byte_end":14525506,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":8099},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525530,"byte_end":14525541,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":1,"index":10922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525564,"byte_end":14525575,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":8115},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525595,"byte_end":14525602,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6583},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525627,"byte_end":14525639,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6602},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525655,"byte_end":14525659,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6622},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525681,"byte_end":14525691,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6641},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525717,"byte_end":14525731,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6945},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525752,"byte_end":14525761,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":6962},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525781,"byte_end":14525789,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525805,"byte_end":14525809,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7053},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525829,"byte_end":14525837,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7083},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525858,"byte_end":14525867,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7102},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525893,"byte_end":14525907,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7121},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525929,"byte_end":14525939,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7140},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525965,"byte_end":14525979,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7159},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14526002,"byte_end":14526013,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7178},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14526031,"byte_end":14526037,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14526064,"byte_end":14526079,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7216},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14526107,"byte_end":14526123,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":0,"index":7234},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14526140,"byte_end":14526145,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":6490}},{"kind":"Use","ref_id":{"krate":1,"index":10936},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file_type.rs","byte_start":14569748,"byte_end":14569756,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6931}},{"kind":"Use","ref_id":{"krate":1,"index":10905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574988,"byte_end":14574996,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6952}},{"kind":"Use","ref_id":{"krate":1,"index":10922},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/permissions.rs","byte_start":14589721,"byte_end":14589732,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6998}},{"kind":"Use","ref_id":{"krate":1,"index":7302},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609421,"byte_end":14609433,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":11636},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609435,"byte_end":14609444,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":7596},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609446,"byte_end":14609453,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":11545},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609455,"byte_end":14609461,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":11619},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609463,"byte_end":14609478,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":11706},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609480,"byte_end":14609496,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":7303},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609498,"byte_end":14609512,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":0,"index":8129},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609537,"byte_end":14609546,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":0,"index":8140},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609568,"byte_end":14609578,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":0,"index":8166},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609594,"byte_end":14609598,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":0,"index":8172},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609614,"byte_end":14609618,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609637,"byte_end":14609644,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":7241}},{"kind":"Use","ref_id":{"krate":1,"index":11361},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658436,"byte_end":14658450,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11386},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658470,"byte_end":14658478,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11282},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658499,"byte_end":14658505,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11306},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658507,"byte_end":14658515,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11309},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658517,"byte_end":14658525,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658547,"byte_end":14658557,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11276},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658559,"byte_end":14658571,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":1,"index":11279},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658573,"byte_end":14658585,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":7746},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658638,"byte_end":14658651,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":7879},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658702,"byte_end":14658710,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":8469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658712,"byte_end":14658723,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":8492},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658725,"byte_end":14658734,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":8517},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658785,"byte_end":14658794,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":7654}},{"kind":"Use","ref_id":{"krate":0,"index":7879},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/mod.rs","byte_start":14666846,"byte_end":14666854,"line_start":1,"line_end":1,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7810}},{"kind":"Use","ref_id":{"krate":0,"index":8469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/mod.rs","byte_start":14666856,"byte_end":14666867,"line_start":1,"line_end":1,"column_start":30,"column_end":41},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7810}},{"kind":"Use","ref_id":{"krate":0,"index":8492},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/mod.rs","byte_start":14666886,"byte_end":14666895,"line_start":2,"line_end":2,"column_start":17,"column_end":26},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7810}},{"kind":"Use","ref_id":{"krate":2,"index":46405},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":14712933,"byte_end":14712936,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":8540}},{"kind":"Use","ref_id":{"krate":1,"index":12044},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713367,"byte_end":14713377,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":1,"index":12031},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713468,"byte_end":14713474,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":1,"index":7821},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713565,"byte_end":14713570,"line_start":20,"line_end":20,"column_start":24,"column_end":29},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":39,"index":98},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713661,"byte_end":14713666,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Child","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":39,"index":207},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713757,"byte_end":14713768,"line_start":28,"line_end":28,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStderr","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":39,"index":197},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713859,"byte_end":14713869,"line_start":32,"line_end":32,"column_start":24,"column_end":34},"alias_span":null,"name":"ChildStdin","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":39,"index":202},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713960,"byte_end":14713971,"line_start":36,"line_end":36,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStdout","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":39,"index":143},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14714062,"byte_end":14714069,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":1,"index":7875},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14714119,"byte_end":14714124,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":1,"index":7874},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14714126,"byte_end":14714130,"line_start":43,"line_end":43,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":1,"index":7876},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14714132,"byte_end":14714134,"line_start":43,"line_end":43,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":8544}},{"kind":"Use","ref_id":{"krate":2,"index":14},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11511,"byte_end":11516,"line_start":337,"line_end":337,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":15},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11518,"byte_end":11525,"line_start":337,"line_end":337,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":115},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4324},{"krate":0,"index":6490},{"krate":0,"index":7241},{"krate":0,"index":7654},{"krate":0,"index":8040},{"krate":0,"index":8540},{"krate":0,"index":8544},{"krate":0,"index":8579},{"krate":0,"index":8613},{"krate":0,"index":8690},{"krate":0,"index":8716},{"krate":0,"index":8743},{"krate":0,"index":8836},{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9331}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5342,"byte_end":5367,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5368,"byte_end":5397,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5398,"byte_end":5433,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5438,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5477,"byte_end":5480,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5481,"byte_end":5541,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5546,"byte_end":5616,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5617,"byte_end":5684,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5685,"byte_end":5761,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5762,"byte_end":5781,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5782,"byte_end":5785,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5786,"byte_end":5825,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5876,"byte_end":5923,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5928,"byte_end":5942,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5947,"byte_end":6026,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6027,"byte_end":6102,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6103,"byte_end":6176,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6177,"byte_end":6197,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6202,"byte_end":6252,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6253,"byte_end":6256,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6368,"byte_end":6394,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6395,"byte_end":6429,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6430,"byte_end":6435,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6436,"byte_end":6439,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6440,"byte_end":6462,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6463,"byte_end":6484,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6485,"byte_end":6511,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6512,"byte_end":6517,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6518,"byte_end":6525,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6530,"byte_end":6601,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6602,"byte_end":6605,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6717,"byte_end":6747,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6748,"byte_end":6751,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6752,"byte_end":6774,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6775,"byte_end":6796,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6797,"byte_end":6827,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6828,"byte_end":6858,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6859,"byte_end":6906,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6907,"byte_end":6912,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6913,"byte_end":6920,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6921,"byte_end":6924,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6925,"byte_end":7002,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7003,"byte_end":7006,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7124,"byte_end":7158,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7159,"byte_end":7162,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7163,"byte_end":7185,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7186,"byte_end":7230,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7231,"byte_end":7293,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7294,"byte_end":7352,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7353,"byte_end":7356,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7357,"byte_end":7395,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7396,"byte_end":7399,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7400,"byte_end":7414,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7415,"byte_end":7480,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7481,"byte_end":7547,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7548,"byte_end":7620,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7621,"byte_end":7630,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7631,"byte_end":7636,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7637,"byte_end":7644,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7645,"byte_end":7690,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7691,"byte_end":7694,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7695,"byte_end":7709,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7710,"byte_end":7713,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7714,"byte_end":7735,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7736,"byte_end":7745,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7746,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7789,"byte_end":7887,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7888,"byte_end":7921,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7922,"byte_end":7990,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7991,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7995,"byte_end":8006,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8007,"byte_end":8035,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8036,"byte_end":8057,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8058,"byte_end":8085,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8086,"byte_end":8093,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8094,"byte_end":8097,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8098,"byte_end":8119,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8120,"byte_end":8129,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8130,"byte_end":8172,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8173,"byte_end":8271,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8272,"byte_end":8307,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8308,"byte_end":8378,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8379,"byte_end":8382,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8383,"byte_end":8394,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8395,"byte_end":8423,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8424,"byte_end":8445,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8446,"byte_end":8475,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8476,"byte_end":8483,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8484,"byte_end":8487,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8488,"byte_end":8566,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8567,"byte_end":8604,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8605,"byte_end":8608,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8609,"byte_end":8620,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8621,"byte_end":8649,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8650,"byte_end":8671,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8672,"byte_end":8697,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8698,"byte_end":8705,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8706,"byte_end":8709,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8710,"byte_end":8788,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8789,"byte_end":8807,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8808,"byte_end":8811,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8812,"byte_end":8823,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8824,"byte_end":8852,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8853,"byte_end":8874,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8875,"byte_end":8901,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8902,"byte_end":8909,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8910,"byte_end":8913,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8914,"byte_end":8992,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8993,"byte_end":9031,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9032,"byte_end":9035,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9036,"byte_end":9047,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9048,"byte_end":9076,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9077,"byte_end":9098,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9099,"byte_end":9125,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9126,"byte_end":9133,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9134,"byte_end":9137,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9138,"byte_end":9215,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9216,"byte_end":9258,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9259,"byte_end":9262,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9263,"byte_end":9274,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9275,"byte_end":9303,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9304,"byte_end":9325,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9326,"byte_end":9354,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9355,"byte_end":9377,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9378,"byte_end":9385,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9386,"byte_end":9389,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9390,"byte_end":9465,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9466,"byte_end":9503,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9504,"byte_end":9507,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9508,"byte_end":9519,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9520,"byte_end":9548,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9549,"byte_end":9570,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9571,"byte_end":9599,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9600,"byte_end":9624,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9625,"byte_end":9632,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9633,"byte_end":9636,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9637,"byte_end":9664,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9665,"byte_end":9668,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9669,"byte_end":9738,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9739,"byte_end":9751,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9752,"byte_end":9755,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9756,"byte_end":9818,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9819,"byte_end":9888,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9889,"byte_end":9956,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9957,"byte_end":10027,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10028,"byte_end":10090,"line_start":272,"line_end":272,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10091,"byte_end":10155,"line_start":273,"line_end":273,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10156,"byte_end":10220,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10221,"byte_end":10247,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10248,"byte_end":10251,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10345,"byte_end":10416,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10417,"byte_end":10474,"line_start":281,"line_end":281,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2056},{"krate":0,"index":2114},{"krate":0,"index":2125},{"krate":0,"index":2158},{"krate":0,"index":2171},{"krate":0,"index":2185},{"krate":0,"index":2196},{"krate":0,"index":2213},{"krate":0,"index":2229},{"krate":0,"index":2278},{"krate":0,"index":2317},{"krate":0,"index":2397},{"krate":0,"index":2400}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922526,"byte_end":13922583,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922584,"byte_end":13922587,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922588,"byte_end":13922680,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922681,"byte_end":13922693,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922694,"byte_end":13922697,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922698,"byte_end":13922755,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922756,"byte_end":13922759,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922760,"byte_end":13922781,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922782,"byte_end":13922785,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922786,"byte_end":13922885,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922886,"byte_end":13922983,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13922984,"byte_end":13923052,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923053,"byte_end":13923056,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923057,"byte_end":13923154,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923155,"byte_end":13923245,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923246,"byte_end":13923345,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923346,"byte_end":13923414,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923415,"byte_end":13923418,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923419,"byte_end":13923516,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923517,"byte_end":13923614,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923615,"byte_end":13923714,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923715,"byte_end":13923787,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923788,"byte_end":13923791,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923792,"byte_end":13923814,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923815,"byte_end":13923818,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923819,"byte_end":13923893,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923894,"byte_end":13923897,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923898,"byte_end":13923911,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923912,"byte_end":13923936,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923937,"byte_end":13923940,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923941,"byte_end":13923964,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923965,"byte_end":13923990,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923991,"byte_end":13923998,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13923999,"byte_end":13924006,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924007,"byte_end":13924010,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924011,"byte_end":13924108,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924109,"byte_end":13924196,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924197,"byte_end":13924200,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924201,"byte_end":13924300,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924301,"byte_end":13924368,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924369,"byte_end":13924372,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924373,"byte_end":13924380,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924381,"byte_end":13924405,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924406,"byte_end":13924409,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924410,"byte_end":13924449,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924450,"byte_end":13924455,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924456,"byte_end":13924491,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924492,"byte_end":13924517,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924518,"byte_end":13924525,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924526,"byte_end":13924547,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924548,"byte_end":13924574,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924575,"byte_end":13924580,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924581,"byte_end":13924589,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924590,"byte_end":13924597,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924598,"byte_end":13924601,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924602,"byte_end":13924678,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924679,"byte_end":13924682,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924683,"byte_end":13924707,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924708,"byte_end":13924711,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924712,"byte_end":13924791,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924792,"byte_end":13924858,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924859,"byte_end":13924862,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924863,"byte_end":13924870,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924871,"byte_end":13924903,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924904,"byte_end":13924928,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924929,"byte_end":13924932,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924933,"byte_end":13924972,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924973,"byte_end":13924978,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13924979,"byte_end":13925044,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925045,"byte_end":13925079,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925080,"byte_end":13925087,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925088,"byte_end":13925093,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925094,"byte_end":13925102,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925103,"byte_end":13925110,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925111,"byte_end":13925114,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925115,"byte_end":13925137,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925138,"byte_end":13925141,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925142,"byte_end":13925218,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925219,"byte_end":13925232,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925233,"byte_end":13925236,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925237,"byte_end":13925307,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925308,"byte_end":13925387,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925388,"byte_end":13925463,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925464,"byte_end":13925467,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925468,"byte_end":13925493,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925494,"byte_end":13925497,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925498,"byte_end":13925576,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925577,"byte_end":13925651,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925652,"byte_end":13925721,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925722,"byte_end":13925799,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925800,"byte_end":13925803,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925804,"byte_end":13925887,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925888,"byte_end":13925968,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13925969,"byte_end":13926054,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926055,"byte_end":13926129,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926130,"byte_end":13926215,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926216,"byte_end":13926280,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926281,"byte_end":13926284,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926285,"byte_end":13926304,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926305,"byte_end":13926308,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926309,"byte_end":13926401,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926402,"byte_end":13926495,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926496,"byte_end":13926585,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926586,"byte_end":13926615,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926616,"byte_end":13926619,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926620,"byte_end":13926656,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926657,"byte_end":13926685,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926686,"byte_end":13926728,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926729,"byte_end":13926789,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926790,"byte_end":13926838,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926839,"byte_end":13926901,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926902,"byte_end":13926938,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926939,"byte_end":13926993,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13926994,"byte_end":13927032,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927033,"byte_end":13927063,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927064,"byte_end":13927112,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927113,"byte_end":13927158,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13927159,"byte_end":13927205,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1996},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068134,"byte_end":14068143,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067531,"byte_end":14067592,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067593,"byte_end":14067596,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067597,"byte_end":14067675,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067676,"byte_end":14067753,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067754,"byte_end":14067831,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067832,"byte_end":14067835,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067836,"byte_end":14067874,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067875,"byte_end":14067878,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067879,"byte_end":14067931,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067932,"byte_end":14067935,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067936,"byte_end":14067950,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067951,"byte_end":14067954,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067955,"byte_end":14067971,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067972,"byte_end":14067975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067976,"byte_end":14067983,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14067984,"byte_end":14068023,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068024,"byte_end":14068029,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068030,"byte_end":14068054,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068055,"byte_end":14068058,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068059,"byte_end":14068087,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068088,"byte_end":14068093,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068094,"byte_end":14068102,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068103,"byte_end":14068110,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068111,"byte_end":14068120,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069445,"byte_end":14069453,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068761,"byte_end":14068823,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068824,"byte_end":14068827,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068828,"byte_end":14068927,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068928,"byte_end":14068966,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068967,"byte_end":14068970,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14068971,"byte_end":14069010,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069011,"byte_end":14069014,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069015,"byte_end":14069067,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069068,"byte_end":14069071,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069072,"byte_end":14069138,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069139,"byte_end":14069225,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069226,"byte_end":14069229,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069230,"byte_end":14069244,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069245,"byte_end":14069248,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069249,"byte_end":14069262,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069263,"byte_end":14069287,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069288,"byte_end":14069291,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069292,"byte_end":14069307,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069308,"byte_end":14069338,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069339,"byte_end":14069377,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069378,"byte_end":14069388,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069389,"byte_end":14069394,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069395,"byte_end":14069402,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":14069403,"byte_end":14069437,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2320},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070069,"byte_end":14070076,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2321}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14069971,"byte_end":14070031,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070190,"byte_end":14070193,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070138,"byte_end":14070164,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070169,"byte_end":14070178,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070313,"byte_end":14070317,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070251,"byte_end":14070287,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070292,"byte_end":14070301,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070936,"byte_end":14070941,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070838,"byte_end":14070885,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070890,"byte_end":14070924,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14071603,"byte_end":14071608,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"pub fn local<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14071470,"byte_end":14071525,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14071530,"byte_end":14071591,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14073933,"byte_end":14073941,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14073808,"byte_end":14073882,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14073887,"byte_end":14073921,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2122},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076386,"byte_end":14076393,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14075856,"byte_end":14075897,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14075898,"byte_end":14075901,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14075902,"byte_end":14075914,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14075915,"byte_end":14075918,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14075919,"byte_end":14076015,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076016,"byte_end":14076053,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076054,"byte_end":14076057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076058,"byte_end":14076092,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076093,"byte_end":14076121,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076122,"byte_end":14076178,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076179,"byte_end":14076182,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076183,"byte_end":14076197,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076198,"byte_end":14076201,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076202,"byte_end":14076209,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076210,"byte_end":14076249,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076250,"byte_end":14076255,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076256,"byte_end":14076280,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076281,"byte_end":14076284,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076285,"byte_end":14076355,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076356,"byte_end":14076361,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076362,"byte_end":14076370,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076371,"byte_end":14076378,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2123},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14077022,"byte_end":14077033,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"pub fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076492,"byte_end":14076596,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076597,"byte_end":14076660,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076661,"byte_end":14076664,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076665,"byte_end":14076699,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076700,"byte_end":14076728,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076729,"byte_end":14076785,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076786,"byte_end":14076789,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076790,"byte_end":14076804,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076805,"byte_end":14076808,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076809,"byte_end":14076816,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076817,"byte_end":14076841,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076842,"byte_end":14076845,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076846,"byte_end":14076877,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076878,"byte_end":14076949,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14076950,"byte_end":14077000,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14077001,"byte_end":14077006,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":14077007,"byte_end":14077014,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2334},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077490,"byte_end":14077500,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2337}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077199,"byte_end":14077245,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077246,"byte_end":14077249,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077250,"byte_end":14077333,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077334,"byte_end":14077386,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077387,"byte_end":14077390,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077391,"byte_end":14077428,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077429,"byte_end":14077432,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077433,"byte_end":14077461,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078309,"byte_end":14078313,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077972,"byte_end":14078016,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078021,"byte_end":14078024,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078029,"byte_end":14078043,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078048,"byte_end":14078051,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078056,"byte_end":14078063,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078068,"byte_end":14078107,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078112,"byte_end":14078117,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078122,"byte_end":14078146,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078151,"byte_end":14078154,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078159,"byte_end":14078195,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078200,"byte_end":14078213,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078218,"byte_end":14078225,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078230,"byte_end":14078274,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078279,"byte_end":14078284,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078289,"byte_end":14078297,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078440,"byte_end":14078446,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078362,"byte_end":14078383,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078388,"byte_end":14078422,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080281,"byte_end":14080286,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079667,"byte_end":14079711,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079712,"byte_end":14079715,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079716,"byte_end":14079809,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079810,"byte_end":14079813,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079814,"byte_end":14079878,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079879,"byte_end":14079882,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079883,"byte_end":14079961,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079962,"byte_end":14079965,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14079966,"byte_end":14080001,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080002,"byte_end":14080005,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080006,"byte_end":14080058,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080059,"byte_end":14080062,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080063,"byte_end":14080077,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080078,"byte_end":14080081,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080082,"byte_end":14080089,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080090,"byte_end":14080129,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080130,"byte_end":14080135,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080136,"byte_end":14080164,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080165,"byte_end":14080168,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080169,"byte_end":14080193,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080194,"byte_end":14080197,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080198,"byte_end":14080244,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080245,"byte_end":14080250,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080251,"byte_end":14080259,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":14080260,"byte_end":14080267,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2182},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080871,"byte_end":14080876,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080445,"byte_end":14080463,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080464,"byte_end":14080467,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080468,"byte_end":14080562,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080563,"byte_end":14080566,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080567,"byte_end":14080638,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080639,"byte_end":14080642,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080643,"byte_end":14080657,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080658,"byte_end":14080661,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080662,"byte_end":14080669,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080670,"byte_end":14080709,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080710,"byte_end":14080715,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080716,"byte_end":14080740,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080741,"byte_end":14080744,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080745,"byte_end":14080781,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080782,"byte_end":14080795,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080796,"byte_end":14080803,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080804,"byte_end":14080807,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080808,"byte_end":14080840,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080841,"byte_end":14080846,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080847,"byte_end":14080855,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":14080856,"byte_end":14080863,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2193},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081801,"byte_end":14081815,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"pub fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T +\nSend + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081088,"byte_end":14081115,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081116,"byte_end":14081119,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081120,"byte_end":14081214,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081215,"byte_end":14081306,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081307,"byte_end":14081320,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081321,"byte_end":14081324,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081325,"byte_end":14081375,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081376,"byte_end":14081379,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081380,"byte_end":14081420,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081421,"byte_end":14081455,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081456,"byte_end":14081459,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081460,"byte_end":14081474,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081475,"byte_end":14081478,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081479,"byte_end":14081495,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081496,"byte_end":14081499,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081500,"byte_end":14081507,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081508,"byte_end":14081542,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081543,"byte_end":14081582,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081583,"byte_end":14081588,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081589,"byte_end":14081613,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081614,"byte_end":14081617,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081618,"byte_end":14081647,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081648,"byte_end":14081691,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081692,"byte_end":14081698,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081699,"byte_end":14081710,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081711,"byte_end":14081716,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081717,"byte_end":14081725,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081726,"byte_end":14081733,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":14081784,"byte_end":14081793,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2341},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082089,"byte_end":14082093,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082037,"byte_end":14082060,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082474,"byte_end":14082476,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082410,"byte_end":14082448,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082453,"byte_end":14082462,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082713,"byte_end":14082717,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082523,"byte_end":14082557,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082562,"byte_end":14082565,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082570,"byte_end":14082634,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082639,"byte_end":14082642,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082647,"byte_end":14082701,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083345,"byte_end":14083351,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083092,"byte_end":14083127,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083128,"byte_end":14083131,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083132,"byte_end":14083146,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083147,"byte_end":14083150,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083151,"byte_end":14083158,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083159,"byte_end":14083183,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083184,"byte_end":14083187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083188,"byte_end":14083214,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083215,"byte_end":14083267,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083268,"byte_end":14083274,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083275,"byte_end":14083282,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2364},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084241,"byte_end":14084249,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2367}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084055,"byte_end":14084100,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084101,"byte_end":14084104,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084105,"byte_end":14084197,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084198,"byte_end":14084212,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2366},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084298,"byte_end":14084304,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2367},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084345,"byte_end":14084350,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085372,"byte_end":14085376,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084408,"byte_end":14084467,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084472,"byte_end":14084475,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084480,"byte_end":14084548,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084553,"byte_end":14084556,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084561,"byte_end":14084653,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084658,"byte_end":14084661,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084666,"byte_end":14084678,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084683,"byte_end":14084686,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084691,"byte_end":14084773,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084778,"byte_end":14084829,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084834,"byte_end":14084837,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084842,"byte_end":14084876,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084881,"byte_end":14084909,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084914,"byte_end":14084970,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084975,"byte_end":14084978,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084983,"byte_end":14084997,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085002,"byte_end":14085005,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085010,"byte_end":14085017,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085022,"byte_end":14085027,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085032,"byte_end":14085056,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085061,"byte_end":14085064,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085069,"byte_end":14085093,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085098,"byte_end":14085128,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085133,"byte_end":14085136,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085141,"byte_end":14085158,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085163,"byte_end":14085211,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085216,"byte_end":14085221,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085226,"byte_end":14085229,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085234,"byte_end":14085260,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085265,"byte_end":14085306,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085311,"byte_end":14085336,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085341,"byte_end":14085348,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085353,"byte_end":14085360,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086662,"byte_end":14086670,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085566,"byte_end":14085636,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085641,"byte_end":14085644,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085649,"byte_end":14085717,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085722,"byte_end":14085725,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085730,"byte_end":14085822,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085827,"byte_end":14085830,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085835,"byte_end":14085923,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085928,"byte_end":14085979,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085984,"byte_end":14085987,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14085992,"byte_end":14086026,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086031,"byte_end":14086059,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086064,"byte_end":14086120,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086125,"byte_end":14086128,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086133,"byte_end":14086147,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086152,"byte_end":14086155,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086160,"byte_end":14086167,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086172,"byte_end":14086177,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086182,"byte_end":14086206,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086211,"byte_end":14086214,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086219,"byte_end":14086243,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086248,"byte_end":14086278,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086283,"byte_end":14086286,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086291,"byte_end":14086308,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086313,"byte_end":14086358,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086363,"byte_end":14086368,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086373,"byte_end":14086376,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086381,"byte_end":14086407,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086412,"byte_end":14086454,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086459,"byte_end":14086488,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086493,"byte_end":14086500,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086505,"byte_end":14086508,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086513,"byte_end":14086585,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086590,"byte_end":14086638,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14086643,"byte_end":14086650,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2371},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088223,"byte_end":14088234,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2372}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088056,"byte_end":14088104,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088105,"byte_end":14088108,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088109,"byte_end":14088173,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2411},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234268,"byte_end":14234279,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"pub fn spawn_local<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> +\n'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233885,"byte_end":14233934,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233935,"byte_end":14233938,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233939,"byte_end":14233953,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233954,"byte_end":14233957,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233958,"byte_end":14233965,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14233966,"byte_end":14234000,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234001,"byte_end":14234040,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234041,"byte_end":14234046,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234047,"byte_end":14234071,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234072,"byte_end":14234075,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234076,"byte_end":14234118,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234119,"byte_end":14234132,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234133,"byte_end":14234140,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234141,"byte_end":14234144,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234145,"byte_end":14234177,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234178,"byte_end":14234183,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234184,"byte_end":14234192,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234193,"byte_end":14234200,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":14234251,"byte_end":14234260,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2690},{"krate":0,"index":2719},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":2738},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2757}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928552,"byte_end":13928576,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928577,"byte_end":13928580,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928581,"byte_end":13928612,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928613,"byte_end":13928616,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928617,"byte_end":13928690,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928691,"byte_end":13928767,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928768,"byte_end":13928841,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928842,"byte_end":13928919,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928920,"byte_end":13928937,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928938,"byte_end":13928941,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13928942,"byte_end":13929007,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929008,"byte_end":13929011,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929012,"byte_end":13929084,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929085,"byte_end":13929157,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929158,"byte_end":13929228,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929229,"byte_end":13929296,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929297,"byte_end":13929300,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929301,"byte_end":13929336,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929337,"byte_end":13929340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929341,"byte_end":13929420,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929421,"byte_end":13929507,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929508,"byte_end":13929574,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929575,"byte_end":13929578,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929579,"byte_end":13929649,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929650,"byte_end":13929722,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929723,"byte_end":13929746,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929747,"byte_end":13929750,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929751,"byte_end":13929824,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929825,"byte_end":13929902,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929903,"byte_end":13929976,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13929977,"byte_end":13930024,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930025,"byte_end":13930028,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930029,"byte_end":13930109,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930110,"byte_end":13930190,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930191,"byte_end":13930244,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930245,"byte_end":13930248,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930249,"byte_end":13930335,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930336,"byte_end":13930422,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930423,"byte_end":13930511,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930512,"byte_end":13930623,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930624,"byte_end":13930709,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930710,"byte_end":13930814,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930815,"byte_end":13930818,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930819,"byte_end":13930870,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930871,"byte_end":13930930,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930931,"byte_end":13930982,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13930983,"byte_end":13931042,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12282},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242512,"byte_end":14242523,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":12284},{"krate":0,"index":12285}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242645,"byte_end":14242648,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"pub fn new(F, Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12241},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":14243488,"byte_end":14243501,"line_start":11,"line_end":11,"column_start":16,"column_end":29},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":12244}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12149},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":14245151,"byte_end":14245155,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":12152},{"krate":0,"index":12153}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12104},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":14246403,"byte_end":14246410,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":12107},{"krate":0,"index":12108}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12059},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":14248171,"byte_end":14248175,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":12062},{"krate":0,"index":12063}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12014},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":14249588,"byte_end":14249595,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12017},{"krate":0,"index":12018}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2421},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14234997,"byte_end":14235006,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2437}],"decl_id":null,"docs":"    Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235495,"byte_end":14235500,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"pub fn delay(Self, Duration) -> DelayFuture<Self> where Self: Sized","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"/ Returns a Future that delays execution for a specified time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235021,"byte_end":14235085,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235090,"byte_end":14235093,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235098,"byte_end":14235112,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235117,"byte_end":14235120,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235125,"byte_end":14235132,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235137,"byte_end":14235176,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235181,"byte_end":14235211,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/ use async_std::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235216,"byte_end":14235242,"line_start":38,"line_end":38,"column_start":5,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235247,"byte_end":14235275,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235280,"byte_end":14235283,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let a = future::ready(1).delay(Duration::from_millis(2000));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235288,"byte_end":14235352,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ dbg!(a.await);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235357,"byte_end":14235375,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235380,"byte_end":14235388,"line_start":43,"line_end":43,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235393,"byte_end":14235400,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235405,"byte_end":14235433,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14236128,"byte_end":14236135,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self)\n-> FlattenFuture<Self, <Self::Output as IntoFuture>::Future> where\nSelf: Sized, <Self as Future>::Output: IntoFuture","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"/ Flatten out the execution of this future when the result itself","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235627,"byte_end":14235694,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ can be converted into another future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235699,"byte_end":14235740,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235745,"byte_end":14235748,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235753,"byte_end":14235767,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235772,"byte_end":14235775,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235780,"byte_end":14235787,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235792,"byte_end":14235831,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235836,"byte_end":14235866,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235871,"byte_end":14235874,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235879,"byte_end":14235925,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235930,"byte_end":14235971,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235976,"byte_end":14236008,"line_start":65,"line_end":65,"column_start":5,"column_end":37}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14236013,"byte_end":14236021,"line_start":66,"line_end":66,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14236026,"byte_end":14236033,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14236038,"byte_end":14236066,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14237354,"byte_end":14237358,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"race","qualname":"::future::future::FutureExt::race","value":"pub fn race<F>(Self, F) -> Race<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14237264,"byte_end":14237292,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14238735,"byte_end":14238743,"line_start":157,"line_end":157,"column_start":8,"column_end":16},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"pub fn try_race<F, T, E>(Self, F) -> TryRace<Self, F> where\nSelf: std::future::Future<Output = Result<T, E>> + Sized,\nF: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14238645,"byte_end":14238673,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14239731,"byte_end":14239735,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"join","qualname":"::future::future::FutureExt::join","value":"pub fn join<F>(Self, F) -> Join<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14239618,"byte_end":14239669,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14240971,"byte_end":14240979,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"pub fn try_join<F, A, B, E>(Self, F) -> TryJoin<Self, F> where\nSelf: std::future::Future<Output = Result<A, E>> + Sized,\nF: std::future::Future<Output = Result<B, E>>","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14240858,"byte_end":14240909,"line_start":239,"line_end":239,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14242061,"byte_end":14242068,"line_start":280,"line_end":280,"column_start":8,"column_end":15},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutFuture<Self> where Self: Sized","parent":{"krate":0,"index":2421},"children":[],"decl_id":null,"docs":"        Waits for both the future and a timeout, if the timeout completes before\n        the future, it returns a TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14241922,"byte_end":14241999,"line_start":278,"line_end":278,"column_start":5,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":2679},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251765,"byte_end":14251772,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251373,"byte_end":14251403,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251404,"byte_end":14251407,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251408,"byte_end":14251422,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251423,"byte_end":14251426,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251427,"byte_end":14251434,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251435,"byte_end":14251474,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251475,"byte_end":14251480,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251481,"byte_end":14251509,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251510,"byte_end":14251513,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251514,"byte_end":14251540,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251541,"byte_end":14251563,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251564,"byte_end":14251567,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251568,"byte_end":14251605,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251606,"byte_end":14251638,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251639,"byte_end":14251642,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251643,"byte_end":14251701,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251702,"byte_end":14251728,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251729,"byte_end":14251734,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251735,"byte_end":14251743,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251744,"byte_end":14251751,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2704},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252663,"byte_end":14252670,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252148,"byte_end":14252219,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252220,"byte_end":14252223,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252224,"byte_end":14252290,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252291,"byte_end":14252294,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252295,"byte_end":14252309,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252310,"byte_end":14252313,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252314,"byte_end":14252321,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252322,"byte_end":14252361,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252362,"byte_end":14252367,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252368,"byte_end":14252394,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252395,"byte_end":14252436,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252437,"byte_end":14252440,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252441,"byte_end":14252500,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252501,"byte_end":14252547,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252548,"byte_end":14252553,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252554,"byte_end":14252557,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252558,"byte_end":14252626,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252627,"byte_end":14252632,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252633,"byte_end":14252641,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252642,"byte_end":14252649,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253450,"byte_end":14253455,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253061,"byte_end":14253096,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253097,"byte_end":14253100,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253101,"byte_end":14253169,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253170,"byte_end":14253173,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253174,"byte_end":14253260,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253261,"byte_end":14253264,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253265,"byte_end":14253279,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253280,"byte_end":14253283,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253284,"byte_end":14253291,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253292,"byte_end":14253331,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253332,"byte_end":14253337,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253338,"byte_end":14253364,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253365,"byte_end":14253368,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253369,"byte_end":14253413,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253414,"byte_end":14253419,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253420,"byte_end":14253428,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":14253429,"byte_end":14253436,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932316,"byte_end":13932323,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931788,"byte_end":13931846,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931847,"byte_end":13931850,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931851,"byte_end":13931904,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931905,"byte_end":13931956,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931957,"byte_end":13931960,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931961,"byte_end":13931975,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931976,"byte_end":13931979,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931980,"byte_end":13931987,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13931988,"byte_end":13932062,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932063,"byte_end":13932068,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932069,"byte_end":13932097,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932098,"byte_end":13932101,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932102,"byte_end":13932128,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932129,"byte_end":13932132,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932133,"byte_end":13932173,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932174,"byte_end":13932213,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932214,"byte_end":13932270,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932271,"byte_end":13932276,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932277,"byte_end":13932294,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932295,"byte_end":13932302,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11977},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932541,"byte_end":13932554,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":11979},{"krate":0,"index":11980}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933486,"byte_end":13933498,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2725}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933383,"byte_end":13933429,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2748},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254229,"byte_end":14254239,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253511,"byte_end":14253546,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253547,"byte_end":14253550,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253551,"byte_end":14253565,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253566,"byte_end":14253569,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253570,"byte_end":14253577,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253578,"byte_end":14253626,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253627,"byte_end":14253649,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253650,"byte_end":14253678,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253679,"byte_end":14253682,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253683,"byte_end":14253701,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253702,"byte_end":14253705,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253706,"byte_end":14253723,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253724,"byte_end":14253775,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253776,"byte_end":14253805,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253806,"byte_end":14253824,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253825,"byte_end":14253834,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253835,"byte_end":14253840,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253841,"byte_end":14253844,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253845,"byte_end":14253877,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253878,"byte_end":14253915,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253916,"byte_end":14253919,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253920,"byte_end":14253986,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253987,"byte_end":14253990,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14253991,"byte_end":14254037,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254038,"byte_end":14254066,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254067,"byte_end":14254100,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254101,"byte_end":14254115,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254116,"byte_end":14254125,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254126,"byte_end":14254131,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254132,"byte_end":14254139,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254140,"byte_end":14254168,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2749},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254301,"byte_end":14254307,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254246,"byte_end":14254291,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":2750},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254374,"byte_end":14254380,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254314,"byte_end":14254364,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254458,"byte_end":14254469,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254418,"byte_end":14254450,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":1813},{"krate":0,"index":1836},{"krate":0,"index":1860},{"krate":0,"index":1889},{"krate":0,"index":1918},{"krate":0,"index":1938},{"krate":0,"index":3230},{"krate":0,"index":3428},{"krate":0,"index":3437},{"krate":0,"index":3459},{"krate":0,"index":3474},{"krate":0,"index":3481},{"krate":0,"index":3512},{"krate":0,"index":3525},{"krate":0,"index":3566},{"krate":0,"index":3592},{"krate":0,"index":3620},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933701,"byte_end":13933739,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933740,"byte_end":13933743,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933744,"byte_end":13933797,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933798,"byte_end":13933801,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933802,"byte_end":13933876,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933877,"byte_end":13933951,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13933952,"byte_end":13934028,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934029,"byte_end":13934099,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934100,"byte_end":13934103,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934104,"byte_end":13934179,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934180,"byte_end":13934183,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934184,"byte_end":13934202,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934203,"byte_end":13934206,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934207,"byte_end":13934252,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934253,"byte_end":13934256,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934257,"byte_end":13934334,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934335,"byte_end":13934415,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934416,"byte_end":13934457,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934458,"byte_end":13934531,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934532,"byte_end":13934605,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934606,"byte_end":13934683,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934684,"byte_end":13934763,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934764,"byte_end":13934820,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934821,"byte_end":13934824,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934825,"byte_end":13934846,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934847,"byte_end":13934874,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934875,"byte_end":13934898,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934899,"byte_end":13934902,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934903,"byte_end":13934941,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934942,"byte_end":13934945,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934946,"byte_end":13934958,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934959,"byte_end":13934962,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13934963,"byte_end":13935037,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935038,"byte_end":13935069,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935070,"byte_end":13935073,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935074,"byte_end":13935081,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935082,"byte_end":13935125,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935126,"byte_end":13935150,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935151,"byte_end":13935169,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935170,"byte_end":13935188,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935189,"byte_end":13935282,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935283,"byte_end":13935288,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935289,"byte_end":13935296,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935297,"byte_end":13935300,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935301,"byte_end":13935367,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935368,"byte_end":13935442,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935443,"byte_end":13935519,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935520,"byte_end":13935597,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935598,"byte_end":13935658,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935659,"byte_end":13935662,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935663,"byte_end":13935732,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935733,"byte_end":13935813,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935814,"byte_end":13935838,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935839,"byte_end":13935842,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935843,"byte_end":13935919,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935920,"byte_end":13935994,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13935995,"byte_end":13936013,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936014,"byte_end":13936017,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936018,"byte_end":13936095,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936096,"byte_end":13936171,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936172,"byte_end":13936199,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936200,"byte_end":13936203,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936204,"byte_end":13936240,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936241,"byte_end":13936274,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936275,"byte_end":13936320,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936321,"byte_end":13936370,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936371,"byte_end":13936374,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936375,"byte_end":13936409,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936410,"byte_end":13936413,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936414,"byte_end":13936492,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936493,"byte_end":13936496,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936497,"byte_end":13936540,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936541,"byte_end":13936592,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936593,"byte_end":13936640,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936641,"byte_end":13936644,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936645,"byte_end":13936709,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936710,"byte_end":13936739,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936740,"byte_end":13936743,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936744,"byte_end":13936769,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936770,"byte_end":13936773,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936774,"byte_end":13936850,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936851,"byte_end":13936923,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13936924,"byte_end":13937002,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937003,"byte_end":13937048,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937049,"byte_end":13937052,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937053,"byte_end":13937122,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937123,"byte_end":13937126,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937127,"byte_end":13937134,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937135,"byte_end":13937167,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937168,"byte_end":13937211,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937212,"byte_end":13937236,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937237,"byte_end":13937262,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937263,"byte_end":13937266,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937267,"byte_end":13937313,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937314,"byte_end":13937334,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937335,"byte_end":13937356,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937357,"byte_end":13937362,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937363,"byte_end":13937366,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937367,"byte_end":13937445,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937446,"byte_end":13937521,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937522,"byte_end":13937595,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937596,"byte_end":13937614,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937615,"byte_end":13937644,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937645,"byte_end":13937677,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937678,"byte_end":13937687,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937688,"byte_end":13937693,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937694,"byte_end":13937697,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937698,"byte_end":13937751,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937752,"byte_end":13937755,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937756,"byte_end":13937785,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937786,"byte_end":13937827,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937828,"byte_end":13937854,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937855,"byte_end":13937858,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937859,"byte_end":13937909,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13937910,"byte_end":13938008,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938009,"byte_end":13938076,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938077,"byte_end":13938105,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938106,"byte_end":13938109,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938110,"byte_end":13938172,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938173,"byte_end":13938204,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938205,"byte_end":13938250,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938251,"byte_end":13938271,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938272,"byte_end":13938305,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938306,"byte_end":13938319,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938320,"byte_end":13938329,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938330,"byte_end":13938335,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938336,"byte_end":13938339,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938340,"byte_end":13938369,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938370,"byte_end":13938444,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938445,"byte_end":13938450,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938451,"byte_end":13938488,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938489,"byte_end":13938492,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938493,"byte_end":13938535,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938536,"byte_end":13938558,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938559,"byte_end":13938562,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938563,"byte_end":13938605,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938606,"byte_end":13938628,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938629,"byte_end":13938632,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938633,"byte_end":13938675,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938676,"byte_end":13938698,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938699,"byte_end":13938702,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938703,"byte_end":13938745,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938746,"byte_end":13938768,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938769,"byte_end":13938772,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938773,"byte_end":13938815,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938816,"byte_end":13938838,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938839,"byte_end":13938844,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938845,"byte_end":13938862,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938863,"byte_end":13938870,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938871,"byte_end":13938874,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938875,"byte_end":13938935,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938936,"byte_end":13938939,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13938940,"byte_end":13939019,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939020,"byte_end":13939096,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939097,"byte_end":13939111,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939112,"byte_end":13939115,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939116,"byte_end":13939152,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939153,"byte_end":13939156,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939157,"byte_end":13939251,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939252,"byte_end":13939279,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939280,"byte_end":13939283,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939284,"byte_end":13939291,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939292,"byte_end":13939366,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939367,"byte_end":13939372,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939373,"byte_end":13939405,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939406,"byte_end":13939434,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::from_iter(1u8..6);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939435,"byte_end":13939482,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939483,"byte_end":13939486,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939487,"byte_end":13939532,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939533,"byte_end":13939559,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939560,"byte_end":13939565,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939566,"byte_end":13939571,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939572,"byte_end":13939589,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939590,"byte_end":13939597,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939598,"byte_end":13939601,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939602,"byte_end":13939679,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939680,"byte_end":13939755,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939756,"byte_end":13939789,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939790,"byte_end":13939793,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939794,"byte_end":13939870,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939871,"byte_end":13939942,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13939943,"byte_end":13940014,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940015,"byte_end":13940018,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940019,"byte_end":13940092,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940093,"byte_end":13940169,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` or `from_iter` as above will always","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940170,"byte_end":13940246,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ have to be called manually.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940247,"byte_end":13940278,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940279,"byte_end":13940282,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940283,"byte_end":13940324,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940325,"byte_end":13940388,"line_start":190,"line_end":190,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940389,"byte_end":13940392,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940393,"byte_end":13940407,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940408,"byte_end":13940411,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940412,"byte_end":13940484,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940485,"byte_end":13940555,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940556,"byte_end":13940569,"line_start":196,"line_end":196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940570,"byte_end":13940573,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940574,"byte_end":13940643,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940644,"byte_end":13940682,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940683,"byte_end":13940686,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940687,"byte_end":13940728,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940729,"byte_end":13940772,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940773,"byte_end":13940820,"line_start":203,"line_end":203,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940821,"byte_end":13940824,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940825,"byte_end":13940839,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940840,"byte_end":13940843,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940844,"byte_end":13940918,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940919,"byte_end":13940994,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13940995,"byte_end":13941068,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941069,"byte_end":13941144,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941145,"byte_end":13941205,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941206,"byte_end":13941209,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941210,"byte_end":13941217,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941218,"byte_end":13941250,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941251,"byte_end":13941325,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941326,"byte_end":13941331,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941332,"byte_end":13941364,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941365,"byte_end":13941393,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941394,"byte_end":13941434,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941435,"byte_end":13941468,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941469,"byte_end":13941474,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941475,"byte_end":13941492,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941493,"byte_end":13941500,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941501,"byte_end":13941504,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941505,"byte_end":13941581,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941582,"byte_end":13941650,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941651,"byte_end":13941654,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941655,"byte_end":13941666,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941667,"byte_end":13941733,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941734,"byte_end":13941764,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941765,"byte_end":13941772,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941773,"byte_end":13941776,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941777,"byte_end":13941850,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941851,"byte_end":13941880,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941881,"byte_end":13941884,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941885,"byte_end":13941892,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941893,"byte_end":13941967,"line_start":237,"line_end":237,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941968,"byte_end":13941973,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13941974,"byte_end":13942006,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942007,"byte_end":13942035,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942036,"byte_end":13942080,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942081,"byte_end":13942084,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942085,"byte_end":13942126,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942127,"byte_end":13942153,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942154,"byte_end":13942159,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942160,"byte_end":13942165,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942166,"byte_end":13942183,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942184,"byte_end":13942191,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942192,"byte_end":13942195,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942196,"byte_end":13942237,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942238,"byte_end":13942241,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942242,"byte_end":13942321,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942322,"byte_end":13942397,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942398,"byte_end":13942401,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942402,"byte_end":13942451,"line_start":255,"line_end":255,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942452,"byte_end":13942455,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942456,"byte_end":13942470,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942471,"byte_end":13942474,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942475,"byte_end":13942546,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942547,"byte_end":13942570,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942571,"byte_end":13942574,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942575,"byte_end":13942582,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942583,"byte_end":13942611,"line_start":263,"line_end":263,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942612,"byte_end":13942650,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942651,"byte_end":13942658,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942659,"byte_end":13942662,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942663,"byte_end":13942734,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942735,"byte_end":13942764,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942765,"byte_end":13942768,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942769,"byte_end":13942776,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942777,"byte_end":13942851,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942852,"byte_end":13942857,"line_start":272,"line_end":272,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942858,"byte_end":13942890,"line_start":273,"line_end":273,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942891,"byte_end":13942919,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::from_iter(0u8..);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942920,"byte_end":13942963,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13942964,"byte_end":13943007,"line_start":276,"line_end":276,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943008,"byte_end":13943011,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943012,"byte_end":13943068,"line_start":278,"line_end":278,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943069,"byte_end":13943100,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943101,"byte_end":13943106,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943107,"byte_end":13943112,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943113,"byte_end":13943130,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943131,"byte_end":13943138,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943139,"byte_end":13943142,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943143,"byte_end":13943215,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943216,"byte_end":13943219,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943220,"byte_end":13943293,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943294,"byte_end":13943372,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943373,"byte_end":13943449,"line_start":289,"line_end":289,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943450,"byte_end":13943518,"line_start":290,"line_end":290,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943519,"byte_end":13943561,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943562,"byte_end":13943565,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943566,"byte_end":13943579,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943580,"byte_end":13943624,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943625,"byte_end":13943695,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943696,"byte_end":13943770,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943771,"byte_end":13943825,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943826,"byte_end":13943833,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943834,"byte_end":13943837,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943838,"byte_end":13943902,"line_start":300,"line_end":300,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943903,"byte_end":13943946,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13943947,"byte_end":13943988,"line_start":302,"line_end":302,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14003815,"byte_end":14003824,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14003764,"byte_end":14003803,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005170,"byte_end":14005179,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005119,"byte_end":14005158,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11928},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":14006826,"byte_end":14006831,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11931},{"krate":0,"index":11932}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11892},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":14008158,"byte_end":14008164,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":11894}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11839},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":14009088,"byte_end":14009097,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":11842},{"krate":0,"index":11843},{"krate":0,"index":11844},{"krate":0,"index":11845}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11803},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":14011779,"byte_end":14011785,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":11805}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11763},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":14012544,"byte_end":14012549,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11765},{"krate":0,"index":11766}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11723},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":14013427,"byte_end":14013436,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11725},{"krate":0,"index":11726}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11678},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":14014513,"byte_end":14014521,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":11681},{"krate":0,"index":11682}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11629},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":14016060,"byte_end":14016066,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11632},{"krate":0,"index":11633}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11580},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":14017039,"byte_end":14017048,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11583},{"krate":0,"index":11584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018027,"byte_end":14018037,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14017976,"byte_end":14018015,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019023,"byte_end":14019036,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14018972,"byte_end":14019011,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11518},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":14020113,"byte_end":14020123,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11522},{"krate":0,"index":11523},{"krate":0,"index":11524}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":14021313,"byte_end":14021326,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":11476},{"krate":0,"index":11477}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11430},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":14022506,"byte_end":14022510,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11432},{"krate":0,"index":11433}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11389},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":14023666,"byte_end":14023674,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":11392}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11348},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":14024899,"byte_end":14024907,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":11351}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11299},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":14026136,"byte_end":14026143,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11302},{"krate":0,"index":11303}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11254},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":14027005,"byte_end":14027015,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":11257},{"krate":0,"index":11258}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11213},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":14028228,"byte_end":14028236,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":11216}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11172},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":14029471,"byte_end":14029479,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":11175}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11123},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":14030477,"byte_end":14030480,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11126},{"krate":0,"index":11127}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11078},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":14031304,"byte_end":14031313,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":11081},{"krate":0,"index":11082}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11021},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":14032581,"byte_end":14032592,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":11025},{"krate":0,"index":11026},{"krate":0,"index":11027}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10964},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":14034005,"byte_end":14034019,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10968},{"krate":0,"index":10969},{"krate":0,"index":10970}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10919},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":14035659,"byte_end":14035668,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":10922},{"krate":0,"index":10923}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10862},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":14036933,"byte_end":14036944,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":10866},{"krate":0,"index":10867},{"krate":0,"index":10868}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10805},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":14038383,"byte_end":14038397,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10809},{"krate":0,"index":10810},{"krate":0,"index":10811}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10760},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":14040157,"byte_end":14040165,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":10763},{"krate":0,"index":10764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":14041465,"byte_end":14041475,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":14041414,"byte_end":14041453,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14041955,"byte_end":14041964,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14041904,"byte_end":14041943,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10707},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":14043218,"byte_end":14043234,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":10710},{"krate":0,"index":10711},{"krate":0,"index":10712},{"krate":0,"index":10713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14045963,"byte_end":14045977,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14045912,"byte_end":14045951,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10649},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":14047449,"byte_end":14047453,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10653},{"krate":0,"index":10654}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10609},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":14048669,"byte_end":14048673,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10611},{"krate":0,"index":10612}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10560},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":14049888,"byte_end":14049897,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10563},{"krate":0,"index":10564}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":14051431,"byte_end":14051437,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":10518},{"krate":0,"index":10519},{"krate":0,"index":10520}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":14052840,"byte_end":14052844,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10475},{"krate":0,"index":10476}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10424},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":14054079,"byte_end":14054088,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10427},{"krate":0,"index":10428}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1458},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055097,"byte_end":14055110,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055046,"byte_end":14055085,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056437,"byte_end":14056453,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056386,"byte_end":14056425,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10375},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14057811,"byte_end":14057814,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10378},{"krate":0,"index":10379},{"krate":0,"index":10380}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10338},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":14286986,"byte_end":14286997,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":10340},{"krate":0,"index":10341}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":14288299,"byte_end":14288304,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10292},{"krate":0,"index":10293}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10252},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14290040,"byte_end":14290047,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10254},{"krate":0,"index":10255}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10199},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":14292185,"byte_end":14292192,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":10203},{"krate":0,"index":10204}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10137},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":14293692,"byte_end":14293707,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":10141},{"krate":0,"index":10142},{"krate":0,"index":10143}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10093},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14295167,"byte_end":14295174,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10095},{"krate":0,"index":10096},{"krate":0,"index":10097}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3183},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296382,"byte_end":14296394,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":3184}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296177,"byte_end":14296223,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296274,"byte_end":14296325,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10048},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":14297192,"byte_end":14297200,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":10050},{"krate":0,"index":10051},{"krate":0,"index":10052},{"krate":0,"index":10053}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10007},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":14298704,"byte_end":14298709,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":10009},{"krate":0,"index":10010},{"krate":0,"index":10011}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9944},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":14299692,"byte_end":14299703,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":9948},{"krate":0,"index":9949}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1693},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947838,"byte_end":13947847,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1808}],"decl_id":null,"docs":"    Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13948580,"byte_end":13948584,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13949128,"byte_end":13949132,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13949769,"byte_end":13949779,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13950962,"byte_end":13950970,"line_start":276,"line_end":276,"column_start":8,"column_end":16},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13950872,"byte_end":13950900,"line_start":274,"line_end":274,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13951776,"byte_end":13951783,"line_start":312,"line_end":312,"column_start":8,"column_end":15},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13952595,"byte_end":13952600,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13953380,"byte_end":13953386,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13954148,"byte_end":13954154,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13954894,"byte_end":13954899,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13955705,"byte_end":13955714,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13956913,"byte_end":13956918,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"pub fn delay(Self, std::time::Duration) -> Delay<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13956800,"byte_end":13956851,"line_start":517,"line_end":517,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13957643,"byte_end":13957646,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13958470,"byte_end":13958477,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        A combinator that does something with each element in the stream, passing the value\n        on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13959386,"byte_end":13959390,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13960198,"byte_end":13960202,"line_start":661,"line_end":661,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13960872,"byte_end":13960878,"line_start":691,"line_end":691,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13961970,"byte_end":13961978,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where Self: Sized,\nU: IntoStream, F: FnMut(Self::Item) -> U","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13961880,"byte_end":13961908,"line_start":729,"line_end":729,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13962791,"byte_end":13962798,"line_start":765,"line_end":765,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoStream","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13962701,"byte_end":13962729,"line_start":763,"line_end":763,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13963658,"byte_end":13963668,"line_start":806,"line_end":806,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13964553,"byte_end":13964563,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified key function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13965519,"byte_end":13965529,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified key function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13966562,"byte_end":13966568,"line_start":913,"line_end":913,"column_start":8,"column_end":14},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified comparison function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13967424,"byte_end":13967427,"line_start":947,"line_end":947,"column_start":8,"column_end":11},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13968221,"byte_end":13968224,"line_start":980,"line_end":980,"column_start":8,"column_end":11},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13969188,"byte_end":13969194,"line_start":1017,"line_end":1017,"column_start":8,"column_end":14},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified comparison function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13970668,"byte_end":13970671,"line_start":1081,"line_end":1081,"column_start":8,"column_end":11},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13972037,"byte_end":13972040,"line_start":1137,"line_end":1137,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13972020,"byte_end":13972029,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13973131,"byte_end":13973135,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13973812,"byte_end":13973820,"line_start":1214,"line_end":1214,"column_start":8,"column_end":16},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13974533,"byte_end":13974537,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13975404,"byte_end":13975413,"line_start":1285,"line_end":1285,"column_start":8,"column_end":17},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"pub fn partition<B, F>(Self, F) -> PartitionFuture<Self, F, B> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool, B: Default + Extend<Self::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13975314,"byte_end":13975342,"line_start":1283,"line_end":1283,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13976223,"byte_end":13976231,"line_start":1321,"line_end":1321,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13977617,"byte_end":13977620,"line_start":1377,"line_end":1377,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13977600,"byte_end":13977609,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13979032,"byte_end":13979038,"line_start":1432,"line_end":1432,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13978942,"byte_end":13978970,"line_start":1430,"line_end":1430,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13980306,"byte_end":13980310,"line_start":1473,"line_end":1473,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        A stream adaptor similar to [`fold`] that holds internal state and produces a new\n        stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13980289,"byte_end":13980298,"line_start":1472,"line_end":1472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13981318,"byte_end":13981328,"line_start":1508,"line_end":1508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13981985,"byte_end":13981989,"line_start":1536,"line_end":1536,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13983069,"byte_end":13983076,"line_start":1577,"line_end":1577,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Stream + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13982956,"byte_end":13983007,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13983930,"byte_end":13983938,"line_start":1612,"line_end":1612,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        A combinator that applies a function as long as it returns successfully, producing a single, final value.\n        Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13985035,"byte_end":13985047,"line_start":1658,"line_end":1658,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13986567,"byte_end":13986570,"line_start":1706,"line_end":1706,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13986550,"byte_end":13986559,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13987542,"byte_end":13987547,"line_start":1743,"line_end":1743,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> UnzipFuture<Self, FromA, FromB>\nwhere FromA: Default + Extend<A>, FromB: Default + Extend<B>,\nSelf: Stream<Item = (A, B)> + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13987452,"byte_end":13987480,"line_start":1741,"line_end":1741,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13989695,"byte_end":13989702,"line_start":1805,"line_end":1805,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<'a, B>(Self) -> Pin<Box<dyn Future<Output = B> + Send + 'a>>\nwhere Self: Sized + 'a + Send, B: FromStream<Self::Item>, Self::Item: Send","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13989605,"byte_end":13989633,"line_start":1803,"line_end":1803,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13990775,"byte_end":13990780,"line_start":1843,"line_end":1843,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13990685,"byte_end":13990713,"line_start":1841,"line_end":1841,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13991925,"byte_end":13991936,"line_start":1878,"line_end":1878,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13992923,"byte_end":13992931,"line_start":1918,"line_end":1918,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Searches for an element in a Stream that satisfies a predicate, returning\n        its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13994074,"byte_end":13994077,"line_start":1956,"line_end":1956,"column_start":8,"column_end":11},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13994836,"byte_end":13994841,"line_start":1990,"line_end":1990,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> CountFuture<Self> where Self: Sized","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13994746,"byte_end":13994774,"line_start":1988,"line_end":1988,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13995804,"byte_end":13995806,"line_start":2022,"line_end":2022,"column_start":8,"column_end":10},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13996873,"byte_end":13996875,"line_start":2059,"line_end":2059,"column_start":8,"column_end":10},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13997934,"byte_end":13997936,"line_start":2096,"line_end":2096,"column_start":8,"column_end":10},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13998993,"byte_end":13998995,"line_start":2133,"line_end":2133,"column_start":8,"column_end":10},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14000048,"byte_end":14000050,"line_start":2170,"line_end":2170,"column_start":8,"column_end":10},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14001097,"byte_end":14001099,"line_start":2207,"line_end":2207,"column_start":8,"column_end":10},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14002160,"byte_end":14002163,"line_start":2252,"line_end":2252,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"pub fn sum<'a, S>(Self) -> Pin<Box<dyn Future<Output = S> + 'a>> where\nSelf: Sized + Stream<Item = S> + 'a, S: Sum<Self::Item>","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14002070,"byte_end":14002098,"line_start":2250,"line_end":2250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14003365,"byte_end":14003372,"line_start":2298,"line_end":2298,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"pub fn product<'a, P>(Self) -> Pin<Box<dyn Future<Output = P> + 'a>> where\nSelf: Sized + Stream<Item = P> + 'a, P: Product","parent":{"krate":0,"index":1693},"children":[],"decl_id":null,"docs":"        Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14003275,"byte_end":14003303,"line_start":2296,"line_end":2296,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1830},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059687,"byte_end":14059692,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059256,"byte_end":14059306,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059307,"byte_end":14059310,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059311,"byte_end":14059374,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059375,"byte_end":14059402,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059403,"byte_end":14059406,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059407,"byte_end":14059435,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059436,"byte_end":14059439,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059440,"byte_end":14059454,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059455,"byte_end":14059458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059459,"byte_end":14059466,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059467,"byte_end":14059506,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059507,"byte_end":14059512,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059513,"byte_end":14059543,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059544,"byte_end":14059570,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059571,"byte_end":14059574,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059575,"byte_end":14059614,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059615,"byte_end":14059618,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059619,"byte_end":14059656,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059657,"byte_end":14059662,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059663,"byte_end":14059671,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059672,"byte_end":14059679,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3197},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059929,"byte_end":14059934,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3199}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059763,"byte_end":14059805,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059806,"byte_end":14059809,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059810,"byte_end":14059867,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059868,"byte_end":14059871,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059872,"byte_end":14059900,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3203},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060454,"byte_end":14060460,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":3205}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060230,"byte_end":14060285,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060286,"byte_end":14060289,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060290,"byte_end":14060353,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060354,"byte_end":14060381,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060382,"byte_end":14060385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060386,"byte_end":14060418,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1852},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061320,"byte_end":14061327,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060511,"byte_end":14060599,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060600,"byte_end":14060603,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060604,"byte_end":14060694,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060695,"byte_end":14060776,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060777,"byte_end":14060780,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060781,"byte_end":14060795,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060796,"byte_end":14060799,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060800,"byte_end":14060807,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060808,"byte_end":14060847,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060848,"byte_end":14060853,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060854,"byte_end":14060884,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060885,"byte_end":14060911,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060912,"byte_end":14060915,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060916,"byte_end":14060940,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060941,"byte_end":14060973,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060974,"byte_end":14060993,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060994,"byte_end":14061016,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061017,"byte_end":14061033,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061034,"byte_end":14061050,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061051,"byte_end":14061074,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061075,"byte_end":14061084,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061085,"byte_end":14061092,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061093,"byte_end":14061096,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061097,"byte_end":14061124,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061125,"byte_end":14061128,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061129,"byte_end":14061169,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061170,"byte_end":14061210,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061211,"byte_end":14061251,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061252,"byte_end":14061289,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061290,"byte_end":14061295,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061296,"byte_end":14061304,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061305,"byte_end":14061312,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9905},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062136,"byte_end":14062144,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":9907}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1880},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062644,"byte_end":14062653,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062176,"byte_end":14062215,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062216,"byte_end":14062219,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062220,"byte_end":14062234,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062235,"byte_end":14062238,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062239,"byte_end":14062246,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062247,"byte_end":14062286,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062287,"byte_end":14062292,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062293,"byte_end":14062323,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062324,"byte_end":14062350,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062351,"byte_end":14062354,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062355,"byte_end":14062407,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062408,"byte_end":14062411,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062412,"byte_end":14062452,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062453,"byte_end":14062493,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062494,"byte_end":14062534,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062535,"byte_end":14062575,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062576,"byte_end":14062613,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062614,"byte_end":14062619,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062620,"byte_end":14062628,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062629,"byte_end":14062636,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1909},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063739,"byte_end":14063743,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063406,"byte_end":14063453,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063454,"byte_end":14063457,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063458,"byte_end":14063472,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063473,"byte_end":14063476,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063477,"byte_end":14063484,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063485,"byte_end":14063524,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063525,"byte_end":14063530,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063531,"byte_end":14063561,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063562,"byte_end":14063588,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063589,"byte_end":14063592,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063593,"byte_end":14063625,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063626,"byte_end":14063629,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063630,"byte_end":14063670,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063671,"byte_end":14063708,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063709,"byte_end":14063714,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063715,"byte_end":14063723,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14063724,"byte_end":14063731,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9866},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14064043,"byte_end":14064047,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9868}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1932},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064933,"byte_end":14064939,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064584,"byte_end":14064642,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064643,"byte_end":14064646,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064647,"byte_end":14064661,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064662,"byte_end":14064665,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064666,"byte_end":14064673,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064674,"byte_end":14064713,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064714,"byte_end":14064719,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064720,"byte_end":14064750,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064751,"byte_end":14064777,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064778,"byte_end":14064781,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064782,"byte_end":14064816,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064817,"byte_end":14064820,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064821,"byte_end":14064861,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064862,"byte_end":14064902,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064903,"byte_end":14064908,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064909,"byte_end":14064917,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14064918,"byte_end":14064925,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3212},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065226,"byte_end":14065232,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3214}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065010,"byte_end":14065060,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065061,"byte_end":14065064,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065065,"byte_end":14065127,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065128,"byte_end":14065155,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065156,"byte_end":14065159,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065160,"byte_end":14065190,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3221},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065808,"byte_end":14065818,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":3223}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065539,"byte_end":14065627,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065628,"byte_end":14065631,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065632,"byte_end":14065699,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065700,"byte_end":14065727,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065728,"byte_end":14065731,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065732,"byte_end":14065772,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1954},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066924,"byte_end":14066935,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065873,"byte_end":14065975,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065976,"byte_end":14065979,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065980,"byte_end":14065994,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065995,"byte_end":14065998,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065999,"byte_end":14066015,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066016,"byte_end":14066019,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066020,"byte_end":14066027,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066028,"byte_end":14066067,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066068,"byte_end":14066073,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066074,"byte_end":14066104,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066105,"byte_end":14066131,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066132,"byte_end":14066135,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066136,"byte_end":14066174,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066175,"byte_end":14066178,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066179,"byte_end":14066206,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066207,"byte_end":14066210,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066211,"byte_end":14066251,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066252,"byte_end":14066292,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066293,"byte_end":14066333,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066334,"byte_end":14066374,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066375,"byte_end":14066383,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066384,"byte_end":14066391,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066392,"byte_end":14066395,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066396,"byte_end":14066413,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066414,"byte_end":14066417,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066418,"byte_end":14066425,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066426,"byte_end":14066465,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066466,"byte_end":14066471,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066472,"byte_end":14066502,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066503,"byte_end":14066529,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066530,"byte_end":14066533,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066534,"byte_end":14066552,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066553,"byte_end":14066589,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066590,"byte_end":14066611,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066612,"byte_end":14066627,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066628,"byte_end":14066640,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066641,"byte_end":14066647,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066648,"byte_end":14066661,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066662,"byte_end":14066665,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066666,"byte_end":14066693,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066694,"byte_end":14066697,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066698,"byte_end":14066738,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066739,"byte_end":14066779,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066780,"byte_end":14066820,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066821,"byte_end":14066861,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066862,"byte_end":14066899,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066900,"byte_end":14066908,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14066909,"byte_end":14066916,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3261},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":14308017,"byte_end":14308031,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":3264}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":14307966,"byte_end":14308005,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3286},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308542,"byte_end":14308555,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308491,"byte_end":14308530,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3317},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309564,"byte_end":14309575,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":3322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309513,"byte_end":14309552,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9809},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":14310661,"byte_end":14310672,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9813},{"krate":0,"index":9814},{"krate":0,"index":9815}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9752},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":14311899,"byte_end":14311913,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9756},{"krate":0,"index":9757},{"krate":0,"index":9758}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3415},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301487,"byte_end":14301504,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3424}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301108,"byte_end":14301159,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301160,"byte_end":14301163,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301164,"byte_end":14301238,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301239,"byte_end":14301310,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301311,"byte_end":14301359,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301360,"byte_end":14301363,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301364,"byte_end":14301397,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301398,"byte_end":14301426,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14303732,"byte_end":14303746,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"pub fn poll_next_back(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14304638,"byte_end":14304647,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"pub fn next_back(&mut Self) -> NextBackFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14305290,"byte_end":14305298,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"pub fn nth_back(&mut Self, usize) -> NthBackFuture<, Self> where Self: Unpin +\nSized","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14305980,"byte_end":14305985,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"pub fn rfind<P>(&mut Self, P) -> RFindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"            Returns the first element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14306619,"byte_end":14306624,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"pub fn rfold<B, F>(Self, B, F) -> RFoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14307621,"byte_end":14307630,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"pub fn try_rfold<B, F, E>(Self, B, F) -> TryRFoldFuture<Self, F, B> where\nSelf: Sized, F: FnMut(B, Self::Item) -> Result<B, E>","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315483,"byte_end":14315498,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":3433}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313088,"byte_end":14313129,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313130,"byte_end":14313133,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313134,"byte_end":14313212,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313213,"byte_end":14313285,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313286,"byte_end":14313357,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313358,"byte_end":14313414,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313415,"byte_end":14313418,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313419,"byte_end":14313486,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313487,"byte_end":14313560,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313561,"byte_end":14313601,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313602,"byte_end":14313605,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313606,"byte_end":14313639,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313640,"byte_end":14313693,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313694,"byte_end":14313697,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313698,"byte_end":14313775,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313776,"byte_end":14313847,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313848,"byte_end":14313927,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313928,"byte_end":14313931,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313932,"byte_end":14313956,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313957,"byte_end":14313960,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313961,"byte_end":14313975,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313976,"byte_end":14313979,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313980,"byte_end":14313996,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14313997,"byte_end":14314000,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314001,"byte_end":14314008,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314009,"byte_end":14314075,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314076,"byte_end":14314096,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314097,"byte_end":14314100,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314101,"byte_end":14314131,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314132,"byte_end":14314139,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314140,"byte_end":14314143,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314144,"byte_end":14314214,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314215,"byte_end":14314279,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314280,"byte_end":14314283,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314284,"byte_end":14314309,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314310,"byte_end":14314313,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314314,"byte_end":14314321,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314322,"byte_end":14314359,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314360,"byte_end":14314384,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314385,"byte_end":14314417,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314418,"byte_end":14314440,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314441,"byte_end":14314464,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314465,"byte_end":14314472,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314473,"byte_end":14314493,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314494,"byte_end":14314525,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314526,"byte_end":14314560,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314561,"byte_end":14314572,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314573,"byte_end":14314580,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314581,"byte_end":14314612,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314613,"byte_end":14314641,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314642,"byte_end":14314743,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314744,"byte_end":14314774,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314775,"byte_end":14314808,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314809,"byte_end":14314856,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314857,"byte_end":14314879,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314880,"byte_end":14314915,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314916,"byte_end":14314931,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314932,"byte_end":14314943,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314944,"byte_end":14314951,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314952,"byte_end":14314991,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314992,"byte_end":14314997,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14314998,"byte_end":14315036,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315037,"byte_end":14315107,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315108,"byte_end":14315140,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315141,"byte_end":14315167,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315168,"byte_end":14315177,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315178,"byte_end":14315183,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315184,"byte_end":14315187,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315188,"byte_end":14315217,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315218,"byte_end":14315221,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315222,"byte_end":14315255,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315256,"byte_end":14315259,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315260,"byte_end":14315293,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315294,"byte_end":14315303,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315304,"byte_end":14315311,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315312,"byte_end":14315350,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315394,"byte_end":14315422,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316276,"byte_end":14316279,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315513,"byte_end":14315575,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315580,"byte_end":14315583,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315588,"byte_end":14315659,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315664,"byte_end":14315735,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315740,"byte_end":14315808,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315813,"byte_end":14315825,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315830,"byte_end":14315833,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315838,"byte_end":14315907,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315912,"byte_end":14315925,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315930,"byte_end":14315933,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315938,"byte_end":14315983,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315988,"byte_end":14316041,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316046,"byte_end":14316049,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316054,"byte_end":14316068,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316073,"byte_end":14316076,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316081,"byte_end":14316097,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316102,"byte_end":14316105,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316110,"byte_end":14316117,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316122,"byte_end":14316188,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316193,"byte_end":14316213,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316218,"byte_end":14316221,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316226,"byte_end":14316256,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14316261,"byte_end":14316268,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3447},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317806,"byte_end":14317812,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":3449}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14316877,"byte_end":14316932,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14316933,"byte_end":14316936,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14316937,"byte_end":14317035,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317036,"byte_end":14317130,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317131,"byte_end":14317227,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317228,"byte_end":14317327,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317328,"byte_end":14317380,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317381,"byte_end":14317384,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317385,"byte_end":14317400,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317401,"byte_end":14317404,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317405,"byte_end":14317412,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317413,"byte_end":14317452,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317453,"byte_end":14317458,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317459,"byte_end":14317489,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317490,"byte_end":14317516,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317517,"byte_end":14317520,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317521,"byte_end":14317560,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317561,"byte_end":14317604,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317605,"byte_end":14317649,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317650,"byte_end":14317653,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317654,"byte_end":14317693,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317694,"byte_end":14317699,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317700,"byte_end":14317708,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317709,"byte_end":14317716,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317717,"byte_end":14317745,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317885,"byte_end":14317891,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"pub fn extend<'a, T: IntoStream<Item = A> + 'a>(&'a mut Self, T)\n-> Pin<Box<dyn Future<Output = ()> + Send + 'a>> where\n<T as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14317822,"byte_end":14317877,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":3452},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14319045,"byte_end":14319051,"line_start":70,"line_end":70,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"pub async fn extend<'a, C, T, S, '_>(&'_ mut C, S) -> /*impl Trait*/ where\nC: Extend<T>, S: IntoStream<Item = T> + 'a,\n<S as IntoStream>::IntoStream: Send","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318081,"byte_end":14318136,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318137,"byte_end":14318140,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318141,"byte_end":14318239,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318240,"byte_end":14318336,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318337,"byte_end":14318433,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318434,"byte_end":14318533,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318534,"byte_end":14318586,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318587,"byte_end":14318590,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318591,"byte_end":14318624,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318625,"byte_end":14318628,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318629,"byte_end":14318644,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318645,"byte_end":14318648,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318649,"byte_end":14318656,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318657,"byte_end":14318696,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318697,"byte_end":14318702,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318703,"byte_end":14318733,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318734,"byte_end":14318760,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318761,"byte_end":14318764,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318765,"byte_end":14318804,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318805,"byte_end":14318848,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318849,"byte_end":14318885,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318886,"byte_end":14318889,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318890,"byte_end":14318929,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318930,"byte_end":14318935,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318936,"byte_end":14318944,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318945,"byte_end":14318952,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":14318953,"byte_end":14318981,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322231,"byte_end":14322241,"line_start":118,"line_end":118,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T: Send>","parent":null,"children":[{"krate":0,"index":3471}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319324,"byte_end":14319355,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319356,"byte_end":14319359,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319360,"byte_end":14319453,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319454,"byte_end":14319524,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319525,"byte_end":14319528,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319529,"byte_end":14319558,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319559,"byte_end":14319562,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319563,"byte_end":14319577,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319578,"byte_end":14319581,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319582,"byte_end":14319598,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319599,"byte_end":14319602,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319603,"byte_end":14319610,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319611,"byte_end":14319685,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319686,"byte_end":14319691,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319692,"byte_end":14319722,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319723,"byte_end":14319769,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319770,"byte_end":14319773,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319774,"byte_end":14319821,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319822,"byte_end":14319825,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319826,"byte_end":14319873,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319874,"byte_end":14319877,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319878,"byte_end":14319917,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319918,"byte_end":14319923,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319924,"byte_end":14319941,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319942,"byte_end":14319949,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319950,"byte_end":14319953,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14319954,"byte_end":14320005,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320006,"byte_end":14320009,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320010,"byte_end":14320017,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320018,"byte_end":14320092,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320093,"byte_end":14320098,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320099,"byte_end":14320129,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320130,"byte_end":14320156,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320157,"byte_end":14320204,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320205,"byte_end":14320208,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320209,"byte_end":14320258,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320259,"byte_end":14320262,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320263,"byte_end":14320302,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320303,"byte_end":14320308,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320309,"byte_end":14320326,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320327,"byte_end":14320334,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320335,"byte_end":14320338,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320339,"byte_end":14320383,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320384,"byte_end":14320387,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320388,"byte_end":14320395,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320396,"byte_end":14320426,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320427,"byte_end":14320485,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320486,"byte_end":14320508,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320509,"byte_end":14320512,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320513,"byte_end":14320574,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320575,"byte_end":14320595,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320596,"byte_end":14320630,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320631,"byte_end":14320634,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320635,"byte_end":14320704,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320705,"byte_end":14320718,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320719,"byte_end":14320742,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320743,"byte_end":14320777,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320778,"byte_end":14320814,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320815,"byte_end":14320824,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320825,"byte_end":14320828,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320829,"byte_end":14320867,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320868,"byte_end":14320898,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320899,"byte_end":14320908,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320909,"byte_end":14320914,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320915,"byte_end":14320918,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320919,"byte_end":14320958,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14320959,"byte_end":14321002,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321003,"byte_end":14321062,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321063,"byte_end":14321085,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a + Send>>","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321086,"byte_end":14321146,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/    where","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321147,"byte_end":14321159,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/        <S as IntoStream>::IntoStream: Send,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321160,"byte_end":14321207,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/    {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321208,"byte_end":14321216,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321217,"byte_end":14321263,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321264,"byte_end":14321267,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321268,"byte_end":14321301,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321302,"byte_end":14321350,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321351,"byte_end":14321354,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321355,"byte_end":14321390,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321391,"byte_end":14321444,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321445,"byte_end":14321448,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321449,"byte_end":14321477,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321478,"byte_end":14321507,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321508,"byte_end":14321525,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321526,"byte_end":14321543,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321544,"byte_end":14321558,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321559,"byte_end":14321568,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321569,"byte_end":14321574,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321575,"byte_end":14321578,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321579,"byte_end":14321653,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321654,"byte_end":14321659,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321660,"byte_end":14321698,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321699,"byte_end":14321742,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321743,"byte_end":14321746,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321747,"byte_end":14321790,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321791,"byte_end":14321843,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321844,"byte_end":14321847,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321848,"byte_end":14321889,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321890,"byte_end":14321893,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321894,"byte_end":14321919,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321920,"byte_end":14321923,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321924,"byte_end":14321967,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14321968,"byte_end":14322017,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322018,"byte_end":14322021,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322022,"byte_end":14322063,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322064,"byte_end":14322069,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322070,"byte_end":14322087,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322088,"byte_end":14322095,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322096,"byte_end":14322099,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322100,"byte_end":14322141,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322142,"byte_end":14322170,"line_start":116,"line_end":116,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322766,"byte_end":14322777,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"pub fn from_stream<'a, S: IntoStream<Item = T> + 'a>(S)\n-> Pin<Box<dyn Future<Output = Self> + Send + 'a>> where\n<S as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322257,"byte_end":14322291,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322296,"byte_end":14322299,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322304,"byte_end":14322318,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322323,"byte_end":14322326,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322331,"byte_end":14322347,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322352,"byte_end":14322355,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322360,"byte_end":14322367,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322372,"byte_end":14322446,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322451,"byte_end":14322456,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322461,"byte_end":14322491,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322496,"byte_end":14322542,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322547,"byte_end":14322550,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322555,"byte_end":14322602,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322607,"byte_end":14322610,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322615,"byte_end":14322662,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322667,"byte_end":14322670,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322675,"byte_end":14322714,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322719,"byte_end":14322724,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322729,"byte_end":14322746,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":14322751,"byte_end":14322758,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3478},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323820,"byte_end":14323831,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14322975,"byte_end":14323041,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323042,"byte_end":14323045,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323046,"byte_end":14323124,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323125,"byte_end":14323202,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323203,"byte_end":14323274,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323275,"byte_end":14323278,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323279,"byte_end":14323354,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323355,"byte_end":14323430,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323431,"byte_end":14323505,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323506,"byte_end":14323562,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323563,"byte_end":14323566,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323567,"byte_end":14323647,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323648,"byte_end":14323699,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323700,"byte_end":14323730,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323731,"byte_end":14323759,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3508},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325230,"byte_end":14325238,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324079,"byte_end":14324134,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324135,"byte_end":14324138,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324139,"byte_end":14324208,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324209,"byte_end":14324286,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324287,"byte_end":14324337,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324338,"byte_end":14324341,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324342,"byte_end":14324421,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324422,"byte_end":14324431,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324432,"byte_end":14324435,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324436,"byte_end":14324515,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324516,"byte_end":14324595,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324596,"byte_end":14324631,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324632,"byte_end":14324635,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324636,"byte_end":14324666,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324667,"byte_end":14324670,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324671,"byte_end":14324713,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324714,"byte_end":14324717,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324718,"byte_end":14324732,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324733,"byte_end":14324736,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324737,"byte_end":14324755,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324756,"byte_end":14324759,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324760,"byte_end":14324773,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324774,"byte_end":14324804,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324805,"byte_end":14324831,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324832,"byte_end":14324860,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324861,"byte_end":14324864,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324865,"byte_end":14324939,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324940,"byte_end":14324945,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14324946,"byte_end":14325010,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325011,"byte_end":14325058,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325059,"byte_end":14325105,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325106,"byte_end":14325111,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325112,"byte_end":14325117,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325118,"byte_end":14325135,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325136,"byte_end":14325143,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325144,"byte_end":14325172,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3698},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325649,"byte_end":14325657,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325348,"byte_end":14325405,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325406,"byte_end":14325409,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325410,"byte_end":14325474,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325475,"byte_end":14325502,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325503,"byte_end":14325506,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325507,"byte_end":14325541,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325542,"byte_end":14325570,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326643,"byte_end":14326653,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326133,"byte_end":14326164,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326165,"byte_end":14326168,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326169,"byte_end":14326241,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326242,"byte_end":14326313,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326314,"byte_end":14326342,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326343,"byte_end":14326346,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326347,"byte_end":14326389,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326390,"byte_end":14326423,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326424,"byte_end":14326473,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326474,"byte_end":14326477,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326478,"byte_end":14326507,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326508,"byte_end":14326511,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326512,"byte_end":14326553,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326554,"byte_end":14326582,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3517},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326719,"byte_end":14326723,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326660,"byte_end":14326709,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3518},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326790,"byte_end":14326800,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326730,"byte_end":14326780,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326876,"byte_end":14326887,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"pub fn into_stream(Self) -> Self::IntoStream","parent":{"krate":0,"index":3516},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326834,"byte_end":14326868,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3703},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327440,"byte_end":14327447,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3705}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327236,"byte_end":14327278,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327279,"byte_end":14327282,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327283,"byte_end":14327346,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327347,"byte_end":14327374,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327375,"byte_end":14327378,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327379,"byte_end":14327411,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3552},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328009,"byte_end":14328016,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327485,"byte_end":14327535,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327536,"byte_end":14327539,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327540,"byte_end":14327605,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327606,"byte_end":14327620,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327621,"byte_end":14327624,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327625,"byte_end":14327632,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327633,"byte_end":14327672,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327673,"byte_end":14327678,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327679,"byte_end":14327707,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327708,"byte_end":14327711,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327712,"byte_end":14327742,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327743,"byte_end":14327769,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327770,"byte_end":14327773,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327774,"byte_end":14327815,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327816,"byte_end":14327869,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327870,"byte_end":14327873,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327874,"byte_end":14327904,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327905,"byte_end":14327908,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327909,"byte_end":14327937,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327938,"byte_end":14327974,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327975,"byte_end":14327978,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327979,"byte_end":14327984,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327985,"byte_end":14327993,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14327994,"byte_end":14328001,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3576},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329238,"byte_end":14329245,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3578}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328618,"byte_end":14328707,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328708,"byte_end":14328711,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328712,"byte_end":14328794,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328795,"byte_end":14328867,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328868,"byte_end":14328942,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328943,"byte_end":14328991,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328992,"byte_end":14328995,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14328996,"byte_end":14329048,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329049,"byte_end":14329090,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329091,"byte_end":14329148,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329149,"byte_end":14329177,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329381,"byte_end":14329388,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"pub fn product<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329269,"byte_end":14329342,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329347,"byte_end":14329373,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3612},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331987,"byte_end":14331997,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"pub fn successors<F, T>(Option<T>, F) -> Successors<F, T> where F: FnMut(&T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331373,"byte_end":14331469,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331470,"byte_end":14331480,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331481,"byte_end":14331484,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331485,"byte_end":14331499,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331500,"byte_end":14331503,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331504,"byte_end":14331511,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331512,"byte_end":14331563,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331564,"byte_end":14331569,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331570,"byte_end":14331600,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331601,"byte_end":14331627,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331628,"byte_end":14331631,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331632,"byte_end":14331699,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331700,"byte_end":14331703,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331704,"byte_end":14331745,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331746,"byte_end":14331787,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331788,"byte_end":14331829,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331830,"byte_end":14331871,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331872,"byte_end":14331875,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331876,"byte_end":14331881,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331882,"byte_end":14331892,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331893,"byte_end":14331900,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14331901,"byte_end":14331929,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":9703},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14332501,"byte_end":14332511,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":9706},{"krate":0,"index":9707}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14772625,"byte_end":14772634,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3630},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333833,"byte_end":14333836,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3632}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333262,"byte_end":14333334,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333335,"byte_end":14333338,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333339,"byte_end":14333417,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333418,"byte_end":14333486,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333487,"byte_end":14333561,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333562,"byte_end":14333606,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333607,"byte_end":14333610,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333611,"byte_end":14333651,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333652,"byte_end":14333693,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333694,"byte_end":14333743,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333744,"byte_end":14333772,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333973,"byte_end":14333976,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"pub fn sum<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333860,"byte_end":14333933,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333938,"byte_end":14333965,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":4290},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4422},{"krate":0,"index":4616},{"krate":0,"index":4969},{"krate":0,"index":5016},{"krate":0,"index":5213},{"krate":0,"index":5239},{"krate":0,"index":5314},{"krate":0,"index":5376},{"krate":0,"index":5423},{"krate":0,"index":5491},{"krate":0,"index":5526},{"krate":0,"index":5554},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5640},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5686},{"krate":0,"index":5723},{"krate":0,"index":5770},{"krate":0,"index":5788}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14335804,"byte_end":14335873,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14335874,"byte_end":14335877,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14335878,"byte_end":14335955,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14335956,"byte_end":14336025,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336026,"byte_end":14336082,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336083,"byte_end":14336151,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336152,"byte_end":14336155,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336156,"byte_end":14336207,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336208,"byte_end":14336211,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336212,"byte_end":14336272,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336273,"byte_end":14336276,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336277,"byte_end":14336297,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336298,"byte_end":14336301,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336302,"byte_end":14336381,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336382,"byte_end":14336457,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336458,"byte_end":14336533,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336534,"byte_end":14336613,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336614,"byte_end":14336693,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336694,"byte_end":14336708,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336709,"byte_end":14336712,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336713,"byte_end":14336726,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336727,"byte_end":14336755,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336756,"byte_end":14336786,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336787,"byte_end":14336790,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336791,"byte_end":14336865,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336866,"byte_end":14336871,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336872,"byte_end":14336917,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336918,"byte_end":14336947,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336948,"byte_end":14336951,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336952,"byte_end":14336978,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14336979,"byte_end":14337018,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337019,"byte_end":14337022,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337023,"byte_end":14337069,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337070,"byte_end":14337075,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337076,"byte_end":14337093,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337094,"byte_end":14337101,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337102,"byte_end":14337105,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337106,"byte_end":14337188,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337189,"byte_end":14337266,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337267,"byte_end":14337331,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337332,"byte_end":14337335,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337336,"byte_end":14337359,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337360,"byte_end":14337363,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337364,"byte_end":14337439,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337440,"byte_end":14337510,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337511,"byte_end":14337588,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337589,"byte_end":14337605,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337606,"byte_end":14337609,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337610,"byte_end":14337623,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337624,"byte_end":14337652,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337653,"byte_end":14337685,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337686,"byte_end":14337716,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337717,"byte_end":14337720,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337721,"byte_end":14337795,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337796,"byte_end":14337801,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337802,"byte_end":14337847,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337848,"byte_end":14337877,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337878,"byte_end":14337881,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337882,"byte_end":14337926,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337927,"byte_end":14337965,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337966,"byte_end":14337969,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337970,"byte_end":14337996,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14337997,"byte_end":14338036,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338037,"byte_end":14338040,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338041,"byte_end":14338087,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338088,"byte_end":14338093,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338094,"byte_end":14338111,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338112,"byte_end":14338119,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338120,"byte_end":14338123,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338124,"byte_end":14338210,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338211,"byte_end":14338289,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338290,"byte_end":14338293,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338294,"byte_end":14338324,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338325,"byte_end":14338328,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338329,"byte_end":14338410,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338411,"byte_end":14338485,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338486,"byte_end":14338567,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338568,"byte_end":14338642,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338643,"byte_end":14338717,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338718,"byte_end":14338721,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338722,"byte_end":14338798,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338799,"byte_end":14338825,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338826,"byte_end":14338829,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338830,"byte_end":14338843,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338844,"byte_end":14338872,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338873,"byte_end":14338906,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338907,"byte_end":14338937,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338938,"byte_end":14338941,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14338942,"byte_end":14339016,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339017,"byte_end":14339022,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339023,"byte_end":14339064,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339065,"byte_end":14339104,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339105,"byte_end":14339140,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339141,"byte_end":14339144,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339145,"byte_end":14339175,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339176,"byte_end":14339217,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339218,"byte_end":14339221,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339222,"byte_end":14339249,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339250,"byte_end":14339255,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339256,"byte_end":14339273,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339274,"byte_end":14339281,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339282,"byte_end":14339285,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339286,"byte_end":14339367,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339368,"byte_end":14339401,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339402,"byte_end":14339405,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339406,"byte_end":14339419,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339420,"byte_end":14339448,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339449,"byte_end":14339483,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339484,"byte_end":14339517,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339518,"byte_end":14339521,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339522,"byte_end":14339596,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339597,"byte_end":14339602,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339603,"byte_end":14339646,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339647,"byte_end":14339652,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339653,"byte_end":14339696,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339697,"byte_end":14339700,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339701,"byte_end":14339738,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339739,"byte_end":14339774,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339775,"byte_end":14339835,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339836,"byte_end":14339842,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339843,"byte_end":14339848,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339849,"byte_end":14339866,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339867,"byte_end":14339874,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339875,"byte_end":14339878,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339879,"byte_end":14339911,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339912,"byte_end":14339915,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339916,"byte_end":14339968,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339969,"byte_end":14339972,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339973,"byte_end":14339986,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14339987,"byte_end":14340009,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340010,"byte_end":14340013,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340014,"byte_end":14340088,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340089,"byte_end":14340094,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340095,"byte_end":14340129,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340130,"byte_end":14340133,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340134,"byte_end":14340179,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340180,"byte_end":14340183,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340184,"byte_end":14340228,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340229,"byte_end":14340234,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340235,"byte_end":14340252,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340253,"byte_end":14340260,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340261,"byte_end":14340264,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340265,"byte_end":14340344,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340345,"byte_end":14340414,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340415,"byte_end":14340479,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340480,"byte_end":14340483,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340484,"byte_end":14340497,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340498,"byte_end":14340520,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340521,"byte_end":14340524,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340525,"byte_end":14340599,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340600,"byte_end":14340605,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340606,"byte_end":14340640,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340641,"byte_end":14340644,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340645,"byte_end":14340698,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340699,"byte_end":14340704,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340705,"byte_end":14340722,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340723,"byte_end":14340730,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340731,"byte_end":14340734,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340735,"byte_end":14340793,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340794,"byte_end":14340797,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340798,"byte_end":14340811,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340812,"byte_end":14340834,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340835,"byte_end":14340869,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340870,"byte_end":14340873,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340874,"byte_end":14340948,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340949,"byte_end":14340954,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340955,"byte_end":14340992,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340993,"byte_end":14340998,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14340999,"byte_end":14341016,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341017,"byte_end":14341024,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341025,"byte_end":14341028,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341029,"byte_end":14341108,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341109,"byte_end":14341126,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341127,"byte_end":14341130,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341131,"byte_end":14341152,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341153,"byte_end":14341156,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341157,"byte_end":14341231,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341232,"byte_end":14341308,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341309,"byte_end":14341319,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341320,"byte_end":14341323,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341324,"byte_end":14341337,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341338,"byte_end":14341366,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341367,"byte_end":14341400,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341401,"byte_end":14341431,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341432,"byte_end":14341435,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341436,"byte_end":14341510,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341511,"byte_end":14341516,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341517,"byte_end":14341558,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341559,"byte_end":14341594,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341595,"byte_end":14341598,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341599,"byte_end":14341634,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341635,"byte_end":14341682,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341683,"byte_end":14341713,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341714,"byte_end":14341719,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341720,"byte_end":14341725,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341726,"byte_end":14341743,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341744,"byte_end":14341751,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341752,"byte_end":14341755,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341756,"byte_end":14341772,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341773,"byte_end":14341776,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341777,"byte_end":14341859,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341860,"byte_end":14341941,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341942,"byte_end":14341985,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341986,"byte_end":14341989,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14341990,"byte_end":14342003,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342004,"byte_end":14342026,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342027,"byte_end":14342030,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342031,"byte_end":14342105,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342106,"byte_end":14342111,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342112,"byte_end":14342169,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342170,"byte_end":14342175,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342176,"byte_end":14342193,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342194,"byte_end":14342201,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342202,"byte_end":14342205,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342206,"byte_end":14342240,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342241,"byte_end":14342244,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342245,"byte_end":14342262,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342263,"byte_end":14342266,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342267,"byte_end":14342338,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342339,"byte_end":14342418,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342419,"byte_end":14342500,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342501,"byte_end":14342535,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342536,"byte_end":14342539,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342540,"byte_end":14342547,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342548,"byte_end":14342572,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342573,"byte_end":14342595,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342596,"byte_end":14342599,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342600,"byte_end":14342645,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342646,"byte_end":14342684,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342685,"byte_end":14342688,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342689,"byte_end":14342738,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342739,"byte_end":14342742,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342743,"byte_end":14342791,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342792,"byte_end":14342795,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342796,"byte_end":14342810,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342811,"byte_end":14342816,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342817,"byte_end":14342824,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342825,"byte_end":14342828,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342829,"byte_end":14342909,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342910,"byte_end":14342994,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14342995,"byte_end":14343079,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343080,"byte_end":14343130,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343131,"byte_end":14343134,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343135,"byte_end":14343168,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343169,"byte_end":14343172,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343173,"byte_end":14343254,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343255,"byte_end":14343335,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343336,"byte_end":14343423,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343424,"byte_end":14343514,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343515,"byte_end":14343601,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343602,"byte_end":14343665,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343666,"byte_end":14343669,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343670,"byte_end":14343699,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343700,"byte_end":14343731,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343732,"byte_end":14343761,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343762,"byte_end":14343797,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343798,"byte_end":14343834,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343835,"byte_end":14343882,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343883,"byte_end":14343921,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343922,"byte_end":14343962,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14343963,"byte_end":14344003,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344004,"byte_end":14344057,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344058,"byte_end":14344092,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344093,"byte_end":14344132,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344133,"byte_end":14344165,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344166,"byte_end":14344202,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344203,"byte_end":14344287,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344288,"byte_end":14344337,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344338,"byte_end":14344407,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14344408,"byte_end":14344494,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":4397},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4419}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354573,"byte_end":14354599,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354600,"byte_end":14354603,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354604,"byte_end":14354684,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354685,"byte_end":14354745,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354746,"byte_end":14354749,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354750,"byte_end":14354757,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354758,"byte_end":14354789,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354790,"byte_end":14354824,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":14354825,"byte_end":14354832,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9655},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":14363364,"byte_end":14363369,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9657},{"krate":0,"index":9658},{"krate":0,"index":9659},{"krate":0,"index":9660}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4493},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":14365266,"byte_end":14365280,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":14365215,"byte_end":14365254,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4529},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":14366743,"byte_end":14366758,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":14366692,"byte_end":14366731,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9607},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":14367983,"byte_end":14367988,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9609},{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9612}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4605},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14355616,"byte_end":14355626,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4610},{"krate":0,"index":4611}],"decl_id":null,"docs":"    Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14357213,"byte_end":14357223,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4605},"children":[],"decl_id":null,"docs":"        Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14358805,"byte_end":14358814,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":4605},"children":[],"decl_id":null,"docs":"        Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n        reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4610},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14360069,"byte_end":14360074,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":4605},"children":[],"decl_id":null,"docs":"        Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4611},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14361674,"byte_end":14361679,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":4605},"children":[],"decl_id":null,"docs":"        Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5584},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380881,"byte_end":14380886,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":5586}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380623,"byte_end":14380665,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380666,"byte_end":14380669,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380670,"byte_end":14380740,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380741,"byte_end":14380804,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380805,"byte_end":14380808,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380809,"byte_end":14380852,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":9558},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382613,"byte_end":14382618,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9561},{"krate":0,"index":9562},{"krate":0,"index":9563}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383342,"byte_end":14383352,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382791,"byte_end":14382847,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382852,"byte_end":14382855,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382860,"byte_end":14382874,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382879,"byte_end":14382882,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382887,"byte_end":14382900,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382905,"byte_end":14382985,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382990,"byte_end":14382995,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383000,"byte_end":14383030,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383035,"byte_end":14383063,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383068,"byte_end":14383071,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383076,"byte_end":14383124,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383129,"byte_end":14383177,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383182,"byte_end":14383185,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383190,"byte_end":14383231,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383236,"byte_end":14383286,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383291,"byte_end":14383296,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383301,"byte_end":14383318,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383323,"byte_end":14383330,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383970,"byte_end":14383977,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383416,"byte_end":14383478,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383483,"byte_end":14383486,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383491,"byte_end":14383505,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383510,"byte_end":14383513,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383518,"byte_end":14383531,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383536,"byte_end":14383616,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383621,"byte_end":14383626,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383631,"byte_end":14383661,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383666,"byte_end":14383694,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383699,"byte_end":14383702,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383707,"byte_end":14383755,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383760,"byte_end":14383808,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383813,"byte_end":14383816,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383821,"byte_end":14383862,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383867,"byte_end":14383914,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383919,"byte_end":14383924,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383929,"byte_end":14383946,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14383951,"byte_end":14383958,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384793,"byte_end":14384800,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384046,"byte_end":14384116,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384121,"byte_end":14384124,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384129,"byte_end":14384202,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384207,"byte_end":14384280,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384285,"byte_end":14384297,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384302,"byte_end":14384305,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384310,"byte_end":14384324,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384329,"byte_end":14384332,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384337,"byte_end":14384350,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384355,"byte_end":14384435,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384440,"byte_end":14384445,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384450,"byte_end":14384480,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384485,"byte_end":14384513,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384518,"byte_end":14384521,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384526,"byte_end":14384574,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384579,"byte_end":14384627,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384632,"byte_end":14384635,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384640,"byte_end":14384685,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384690,"byte_end":14384737,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384742,"byte_end":14384747,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384752,"byte_end":14384769,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384774,"byte_end":14384781,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4713},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":14387891,"byte_end":14387901,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":14387840,"byte_end":14387879,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":14388471,"byte_end":14388486,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":14388420,"byte_end":14388459,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4776},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14389372,"byte_end":14389387,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14389321,"byte_end":14389360,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4824},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":14391826,"byte_end":14391844,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":14391775,"byte_end":14391814,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4860},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":14393251,"byte_end":14393269,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":14393200,"byte_end":14393239,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9518},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394157,"byte_end":14394161,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395051,"byte_end":14395056,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394273,"byte_end":14394347,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394352,"byte_end":14394367,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394372,"byte_end":14394375,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394380,"byte_end":14394390,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394395,"byte_end":14394398,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394403,"byte_end":14394480,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394485,"byte_end":14394549,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394554,"byte_end":14394557,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394562,"byte_end":14394591,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394596,"byte_end":14394599,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394604,"byte_end":14394618,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394623,"byte_end":14394626,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394631,"byte_end":14394644,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394649,"byte_end":14394729,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394734,"byte_end":14394739,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394744,"byte_end":14394774,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394779,"byte_end":14394807,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394812,"byte_end":14394815,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394820,"byte_end":14394861,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394866,"byte_end":14394869,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394874,"byte_end":14394904,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394909,"byte_end":14394936,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394941,"byte_end":14394944,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394949,"byte_end":14394991,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394996,"byte_end":14395001,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395006,"byte_end":14395027,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395032,"byte_end":14395039,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4899},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395845,"byte_end":14395854,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395103,"byte_end":14395174,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395179,"byte_end":14395253,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395258,"byte_end":14395333,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395338,"byte_end":14395362,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395367,"byte_end":14395370,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395375,"byte_end":14395389,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395394,"byte_end":14395397,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395402,"byte_end":14395415,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395420,"byte_end":14395500,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395505,"byte_end":14395510,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395515,"byte_end":14395545,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395550,"byte_end":14395578,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395583,"byte_end":14395586,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395591,"byte_end":14395632,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395637,"byte_end":14395640,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395645,"byte_end":14395675,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395680,"byte_end":14395711,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395716,"byte_end":14395741,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395746,"byte_end":14395749,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395754,"byte_end":14395789,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395794,"byte_end":14395799,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395804,"byte_end":14395821,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395826,"byte_end":14395833,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396471,"byte_end":14396481,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395919,"byte_end":14395973,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395978,"byte_end":14395981,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14395986,"byte_end":14396000,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396005,"byte_end":14396008,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396013,"byte_end":14396026,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396031,"byte_end":14396111,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396116,"byte_end":14396121,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396126,"byte_end":14396156,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396161,"byte_end":14396189,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396194,"byte_end":14396197,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396202,"byte_end":14396246,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396251,"byte_end":14396254,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396259,"byte_end":14396287,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396292,"byte_end":14396326,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396331,"byte_end":14396367,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396372,"byte_end":14396375,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396380,"byte_end":14396415,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396420,"byte_end":14396425,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396430,"byte_end":14396447,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396452,"byte_end":14396459,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397066,"byte_end":14397073,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396525,"byte_end":14396571,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396576,"byte_end":14396579,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396584,"byte_end":14396598,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396603,"byte_end":14396606,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396611,"byte_end":14396624,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396629,"byte_end":14396709,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396714,"byte_end":14396719,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396724,"byte_end":14396754,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396759,"byte_end":14396787,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396792,"byte_end":14396795,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396800,"byte_end":14396844,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396849,"byte_end":14396852,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396857,"byte_end":14396885,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396890,"byte_end":14396924,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396929,"byte_end":14396965,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396970,"byte_end":14396973,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14396978,"byte_end":14397010,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397015,"byte_end":14397020,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397025,"byte_end":14397042,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397047,"byte_end":14397054,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397848,"byte_end":14397855,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397120,"byte_end":14397174,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397179,"byte_end":14397182,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397187,"byte_end":14397260,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397265,"byte_end":14397337,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397342,"byte_end":14397353,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397358,"byte_end":14397361,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397366,"byte_end":14397380,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397385,"byte_end":14397388,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397393,"byte_end":14397406,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397411,"byte_end":14397491,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397496,"byte_end":14397501,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397506,"byte_end":14397536,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397541,"byte_end":14397569,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397574,"byte_end":14397577,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397582,"byte_end":14397626,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397631,"byte_end":14397634,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397639,"byte_end":14397667,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397672,"byte_end":14397706,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397711,"byte_end":14397747,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397752,"byte_end":14397755,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397760,"byte_end":14397792,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397797,"byte_end":14397802,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397807,"byte_end":14397824,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397829,"byte_end":14397836,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4949},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369336,"byte_end":14369343,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4952},{"krate":0,"index":4954},{"krate":0,"index":4956},{"krate":0,"index":4958},{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963}],"decl_id":null,"docs":"    Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4950},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14370419,"byte_end":14370423,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14371096,"byte_end":14371109,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14372103,"byte_end":14372114,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14373077,"byte_end":14373091,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14374949,"byte_end":14374959,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4960},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14376133,"byte_end":14376137,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14377224,"byte_end":14377230,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4962},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14378136,"byte_end":14378141,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14379168,"byte_end":14379173,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4994},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":14401605,"byte_end":14401615,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":4997},{"krate":0,"index":4998}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":14401554,"byte_end":14401593,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14400566,"byte_end":14400573,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":5013}],"decl_id":null,"docs":"    Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14401214,"byte_end":14401218,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":"        Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5038},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":14407434,"byte_end":14407445,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":5041}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":14407383,"byte_end":14407422,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5067},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":14407927,"byte_end":14407938,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":5070},{"krate":0,"index":5071}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":14407876,"byte_end":14407915,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5100},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":14408500,"byte_end":14408514,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":5103},{"krate":0,"index":5104}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":14408449,"byte_end":14408488,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5130},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":14409399,"byte_end":14409413,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":14409336,"byte_end":14409375,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":14409376,"byte_end":14409387,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5165},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":14410969,"byte_end":14410988,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":5168},{"krate":0,"index":5169}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":14410918,"byte_end":14410957,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5199},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14402381,"byte_end":14402389,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5205},{"krate":0,"index":5207}],"decl_id":null,"docs":"    Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14403209,"byte_end":14403214,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"        Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14403873,"byte_end":14403878,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"        Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14404497,"byte_end":14404511,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"        Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14405449,"byte_end":14405458,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"        Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14406503,"byte_end":14406512,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"        Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9473},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414175,"byte_end":14414184,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9475},{"krate":0,"index":9476},{"krate":0,"index":9477},{"krate":0,"index":9478}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5288},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414815,"byte_end":14414818,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414333,"byte_end":14414392,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414397,"byte_end":14414400,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414405,"byte_end":14414478,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414483,"byte_end":14414486,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414491,"byte_end":14414505,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414510,"byte_end":14414513,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414518,"byte_end":14414531,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414536,"byte_end":14414610,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414615,"byte_end":14414620,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414625,"byte_end":14414653,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414658,"byte_end":14414691,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414696,"byte_end":14414699,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414704,"byte_end":14414759,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414764,"byte_end":14414769,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414774,"byte_end":14414791,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414796,"byte_end":14414803,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5289},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415331,"byte_end":14415344,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414916,"byte_end":14414978,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414983,"byte_end":14414986,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414991,"byte_end":14415005,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415010,"byte_end":14415013,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415018,"byte_end":14415031,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415036,"byte_end":14415110,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415115,"byte_end":14415120,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415125,"byte_end":14415153,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415158,"byte_end":14415191,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415196,"byte_end":14415199,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415204,"byte_end":14415275,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415280,"byte_end":14415285,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415290,"byte_end":14415307,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415312,"byte_end":14415319,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416065,"byte_end":14416072,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415570,"byte_end":14415616,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415621,"byte_end":14415624,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415629,"byte_end":14415695,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415700,"byte_end":14415703,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415708,"byte_end":14415722,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415727,"byte_end":14415730,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415735,"byte_end":14415748,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415753,"byte_end":14415827,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415832,"byte_end":14415837,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415842,"byte_end":14415870,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415875,"byte_end":14415908,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415913,"byte_end":14415916,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415921,"byte_end":14415976,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415981,"byte_end":14416009,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416014,"byte_end":14416019,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416024,"byte_end":14416041,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416046,"byte_end":14416053,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5293},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416632,"byte_end":14416639,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416119,"byte_end":14416173,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416178,"byte_end":14416181,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416186,"byte_end":14416252,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416257,"byte_end":14416260,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416265,"byte_end":14416279,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416284,"byte_end":14416287,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416292,"byte_end":14416305,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416310,"byte_end":14416384,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416389,"byte_end":14416394,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416399,"byte_end":14416427,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416432,"byte_end":14416465,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416470,"byte_end":14416473,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416478,"byte_end":14416540,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416545,"byte_end":14416576,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416581,"byte_end":14416586,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416591,"byte_end":14416608,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416613,"byte_end":14416620,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5295},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417436,"byte_end":14417442,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416937,"byte_end":14416984,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416989,"byte_end":14416992,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14416997,"byte_end":14417066,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417071,"byte_end":14417074,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417079,"byte_end":14417093,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417098,"byte_end":14417101,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417106,"byte_end":14417119,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417124,"byte_end":14417198,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417203,"byte_end":14417208,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417213,"byte_end":14417241,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417246,"byte_end":14417279,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417284,"byte_end":14417287,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417292,"byte_end":14417347,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417352,"byte_end":14417380,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417385,"byte_end":14417390,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417395,"byte_end":14417412,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417417,"byte_end":14417424,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5296},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14418024,"byte_end":14418034,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417510,"byte_end":14417575,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417580,"byte_end":14417583,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417588,"byte_end":14417651,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417656,"byte_end":14417659,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417664,"byte_end":14417678,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417683,"byte_end":14417686,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417691,"byte_end":14417704,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417709,"byte_end":14417783,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417788,"byte_end":14417793,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417798,"byte_end":14417826,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417831,"byte_end":14417864,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417869,"byte_end":14417872,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417877,"byte_end":14417932,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417937,"byte_end":14417968,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417973,"byte_end":14417978,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14417983,"byte_end":14418000,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14418005,"byte_end":14418012,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9432},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14426950,"byte_end":14426959,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9434},{"krate":0,"index":9435},{"krate":0,"index":9436}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5595},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427824,"byte_end":14427838,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427053,"byte_end":14427119,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427120,"byte_end":14427193,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427194,"byte_end":14427246,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427247,"byte_end":14427250,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427251,"byte_end":14427265,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427266,"byte_end":14427269,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427270,"byte_end":14427283,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427284,"byte_end":14427358,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427359,"byte_end":14427392,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427393,"byte_end":14427427,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427428,"byte_end":14427431,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427432,"byte_end":14427514,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427515,"byte_end":14427518,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427519,"byte_end":14427567,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427568,"byte_end":14427622,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427623,"byte_end":14427642,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427643,"byte_end":14427662,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427663,"byte_end":14427706,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427707,"byte_end":14427747,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427748,"byte_end":14427757,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427758,"byte_end":14427764,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427765,"byte_end":14427770,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427771,"byte_end":14427788,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427789,"byte_end":14427795,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5355},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428421,"byte_end":14428424,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427899,"byte_end":14427991,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427996,"byte_end":14428029,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428034,"byte_end":14428037,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428042,"byte_end":14428056,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428061,"byte_end":14428064,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428069,"byte_end":14428082,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428087,"byte_end":14428114,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428119,"byte_end":14428193,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428198,"byte_end":14428231,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428236,"byte_end":14428270,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428275,"byte_end":14428278,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428283,"byte_end":14428365,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428370,"byte_end":14428375,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428380,"byte_end":14428397,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428402,"byte_end":14428409,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5356},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429091,"byte_end":14429104,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428522,"byte_end":14428587,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428592,"byte_end":14428595,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428600,"byte_end":14428614,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428619,"byte_end":14428622,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428627,"byte_end":14428682,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428687,"byte_end":14428690,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428695,"byte_end":14428708,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428713,"byte_end":14428740,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428745,"byte_end":14428819,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428824,"byte_end":14428857,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428862,"byte_end":14428896,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428901,"byte_end":14428904,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428909,"byte_end":14428971,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14428976,"byte_end":14429035,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429040,"byte_end":14429045,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429050,"byte_end":14429067,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429072,"byte_end":14429079,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429818,"byte_end":14429825,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429281,"byte_end":14429327,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429332,"byte_end":14429335,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429340,"byte_end":14429354,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429359,"byte_end":14429362,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429367,"byte_end":14429380,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429385,"byte_end":14429412,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429417,"byte_end":14429491,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429496,"byte_end":14429529,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429534,"byte_end":14429568,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429573,"byte_end":14429576,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429581,"byte_end":14429663,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429668,"byte_end":14429671,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429676,"byte_end":14429720,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429725,"byte_end":14429762,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429767,"byte_end":14429772,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429777,"byte_end":14429794,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429799,"byte_end":14429806,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5358},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430463,"byte_end":14430470,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429872,"byte_end":14429926,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429931,"byte_end":14429934,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14429939,"byte_end":14430004,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430009,"byte_end":14430012,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430017,"byte_end":14430031,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430036,"byte_end":14430039,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430044,"byte_end":14430057,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430062,"byte_end":14430136,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430141,"byte_end":14430174,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430179,"byte_end":14430213,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430218,"byte_end":14430221,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430226,"byte_end":14430308,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430313,"byte_end":14430316,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430321,"byte_end":14430365,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430370,"byte_end":14430407,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430412,"byte_end":14430417,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430422,"byte_end":14430439,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430444,"byte_end":14430451,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431536,"byte_end":14431546,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430767,"byte_end":14430822,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430827,"byte_end":14430830,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430835,"byte_end":14430897,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14430902,"byte_end":14430995,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431000,"byte_end":14431003,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431008,"byte_end":14431056,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431061,"byte_end":14431075,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431080,"byte_end":14431083,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431088,"byte_end":14431101,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431106,"byte_end":14431180,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431185,"byte_end":14431218,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431223,"byte_end":14431257,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431262,"byte_end":14431265,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431270,"byte_end":14431352,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431357,"byte_end":14431360,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431365,"byte_end":14431413,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431418,"byte_end":14431474,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431479,"byte_end":14431484,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431489,"byte_end":14431506,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431511,"byte_end":14431518,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432316,"byte_end":14432322,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431783,"byte_end":14431839,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431844,"byte_end":14431847,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431852,"byte_end":14431866,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431871,"byte_end":14431874,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431879,"byte_end":14431892,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431897,"byte_end":14431971,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14431976,"byte_end":14432009,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432014,"byte_end":14432048,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432053,"byte_end":14432056,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432061,"byte_end":14432143,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432148,"byte_end":14432151,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432156,"byte_end":14432204,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432209,"byte_end":14432260,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432265,"byte_end":14432270,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432275,"byte_end":14432292,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14432297,"byte_end":14432304,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5412},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439383,"byte_end":14439387,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R, W>(R, W) -> /*impl Trait*/ where R: Read + Unpin,\nW: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438131,"byte_end":14438188,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438189,"byte_end":14438192,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438193,"byte_end":14438261,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438262,"byte_end":14438326,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438327,"byte_end":14438343,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438344,"byte_end":14438347,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438348,"byte_end":14438411,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438412,"byte_end":14438449,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438450,"byte_end":14438453,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438454,"byte_end":14438534,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438535,"byte_end":14438600,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438601,"byte_end":14438604,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438605,"byte_end":14438664,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438665,"byte_end":14438668,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438669,"byte_end":14438737,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438738,"byte_end":14438774,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438775,"byte_end":14438778,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438779,"byte_end":14438791,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438792,"byte_end":14438795,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438796,"byte_end":14438871,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438872,"byte_end":14438947,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14438948,"byte_end":14439017,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439018,"byte_end":14439021,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439022,"byte_end":14439036,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439037,"byte_end":14439040,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439041,"byte_end":14439048,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439049,"byte_end":14439123,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439124,"byte_end":14439129,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439130,"byte_end":14439152,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439153,"byte_end":14439156,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439157,"byte_end":14439194,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439195,"byte_end":14439229,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439230,"byte_end":14439233,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439234,"byte_end":14439280,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439281,"byte_end":14439286,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439287,"byte_end":14439304,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439305,"byte_end":14439312,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439313,"byte_end":14439369,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5603},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441707,"byte_end":14441713,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":5605}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14440883,"byte_end":14440946,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14440947,"byte_end":14440975,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14440976,"byte_end":14440979,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14440980,"byte_end":14441048,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441049,"byte_end":14441121,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441122,"byte_end":14441201,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441202,"byte_end":14441227,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441228,"byte_end":14441231,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441232,"byte_end":14441306,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441307,"byte_end":14441374,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441375,"byte_end":14441408,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441409,"byte_end":14441412,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441413,"byte_end":14441442,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441443,"byte_end":14441472,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441473,"byte_end":14441504,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441505,"byte_end":14441567,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441568,"byte_end":14441631,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441632,"byte_end":14441662,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442300,"byte_end":14442303,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441777,"byte_end":14441852,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441857,"byte_end":14441860,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441865,"byte_end":14441939,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441944,"byte_end":14442012,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442017,"byte_end":14442055,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442060,"byte_end":14442063,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442068,"byte_end":14442082,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442087,"byte_end":14442090,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442095,"byte_end":14442102,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442107,"byte_end":14442137,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442142,"byte_end":14442145,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442150,"byte_end":14442189,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442194,"byte_end":14442242,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442247,"byte_end":14442276,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442281,"byte_end":14442288,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5462},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442762,"byte_end":14442772,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442415,"byte_end":14442472,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442477,"byte_end":14442480,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442485,"byte_end":14442499,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442504,"byte_end":14442507,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442512,"byte_end":14442519,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442524,"byte_end":14442554,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442559,"byte_end":14442562,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442567,"byte_end":14442606,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442611,"byte_end":14442659,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442664,"byte_end":14442693,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442698,"byte_end":14442701,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442706,"byte_end":14442738,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442743,"byte_end":14442750,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443182,"byte_end":14443189,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442829,"byte_end":14442889,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442894,"byte_end":14442897,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442902,"byte_end":14442916,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442921,"byte_end":14442924,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442929,"byte_end":14442936,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442941,"byte_end":14442971,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442976,"byte_end":14442979,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14442984,"byte_end":14443023,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443028,"byte_end":14443076,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443081,"byte_end":14443110,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443115,"byte_end":14443118,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443123,"byte_end":14443158,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443163,"byte_end":14443170,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443763,"byte_end":14443770,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443245,"byte_end":14443313,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443318,"byte_end":14443321,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443326,"byte_end":14443399,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443404,"byte_end":14443466,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443471,"byte_end":14443474,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443479,"byte_end":14443493,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443498,"byte_end":14443501,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443506,"byte_end":14443513,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443518,"byte_end":14443548,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443553,"byte_end":14443556,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443561,"byte_end":14443604,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443609,"byte_end":14443657,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443662,"byte_end":14443691,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443696,"byte_end":14443699,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443704,"byte_end":14443739,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443744,"byte_end":14443751,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5465},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444491,"byte_end":14444499,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443834,"byte_end":14443882,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443887,"byte_end":14443890,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443895,"byte_end":14443909,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443914,"byte_end":14443917,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443922,"byte_end":14443929,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14443934,"byte_end":14444008,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444013,"byte_end":14444018,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444023,"byte_end":14444053,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444058,"byte_end":14444092,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444097,"byte_end":14444129,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444134,"byte_end":14444137,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444142,"byte_end":14444194,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444199,"byte_end":14444202,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444207,"byte_end":14444242,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444247,"byte_end":14444250,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444255,"byte_end":14444298,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444303,"byte_end":14444338,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444343,"byte_end":14444346,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444351,"byte_end":14444395,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444400,"byte_end":14444435,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444440,"byte_end":14444445,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444450,"byte_end":14444467,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444472,"byte_end":14444479,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444969,"byte_end":14444981,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444557,"byte_end":14444594,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444599,"byte_end":14444602,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444607,"byte_end":14444621,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444626,"byte_end":14444629,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444634,"byte_end":14444641,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444646,"byte_end":14444676,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444681,"byte_end":14444684,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444689,"byte_end":14444741,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444746,"byte_end":14444749,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444754,"byte_end":14444789,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444794,"byte_end":14444797,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444802,"byte_end":14444827,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444832,"byte_end":14444867,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444872,"byte_end":14444875,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444880,"byte_end":14444905,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444910,"byte_end":14444945,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14444950,"byte_end":14444957,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5515},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448525,"byte_end":14448530,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448130,"byte_end":14448173,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448174,"byte_end":14448177,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448178,"byte_end":14448192,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448193,"byte_end":14448196,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448197,"byte_end":14448208,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448209,"byte_end":14448283,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448284,"byte_end":14448289,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448290,"byte_end":14448312,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448313,"byte_end":14448343,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448344,"byte_end":14448347,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448348,"byte_end":14448377,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448378,"byte_end":14448411,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448412,"byte_end":14448452,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448453,"byte_end":14448456,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448457,"byte_end":14448485,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448486,"byte_end":14448491,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448492,"byte_end":14448509,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448510,"byte_end":14448517,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448748,"byte_end":14448753,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5517}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448574,"byte_end":14448609,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448610,"byte_end":14448613,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448614,"byte_end":14448675,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448676,"byte_end":14448703,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448704,"byte_end":14448707,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448708,"byte_end":14448736,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":5547},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449998,"byte_end":14450004,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449479,"byte_end":14449548,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449549,"byte_end":14449552,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449553,"byte_end":14449649,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449650,"byte_end":14449653,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449654,"byte_end":14449669,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449670,"byte_end":14449673,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449674,"byte_end":14449685,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449686,"byte_end":14449760,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449761,"byte_end":14449766,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449767,"byte_end":14449789,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449790,"byte_end":14449820,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449821,"byte_end":14449824,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449825,"byte_end":14449853,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449854,"byte_end":14449907,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449908,"byte_end":14449911,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449912,"byte_end":14449958,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449959,"byte_end":14449964,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449965,"byte_end":14449982,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14449983,"byte_end":14449990,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5548},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450274,"byte_end":14450280,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5549}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450050,"byte_end":14450132,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450133,"byte_end":14450136,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450137,"byte_end":14450199,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450200,"byte_end":14450227,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450228,"byte_end":14450231,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450232,"byte_end":14450262,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5575},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451156,"byte_end":14451160,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450814,"byte_end":14450868,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450869,"byte_end":14450872,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450873,"byte_end":14450887,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450888,"byte_end":14450891,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450892,"byte_end":14450903,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450904,"byte_end":14450978,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450979,"byte_end":14450984,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14450985,"byte_end":14451007,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451008,"byte_end":14451038,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451039,"byte_end":14451042,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451043,"byte_end":14451075,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451076,"byte_end":14451116,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451117,"byte_end":14451122,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451123,"byte_end":14451140,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451141,"byte_end":14451148,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5576},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451388,"byte_end":14451392,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":5577}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451202,"byte_end":14451248,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451249,"byte_end":14451252,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451253,"byte_end":14451331,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451332,"byte_end":14451345,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451346,"byte_end":14451349,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451350,"byte_end":14451376,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":5676},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452836,"byte_end":14452843,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452223,"byte_end":14452286,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452287,"byte_end":14452290,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452291,"byte_end":14452347,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452348,"byte_end":14452407,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452408,"byte_end":14452411,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452412,"byte_end":14452426,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452427,"byte_end":14452430,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452431,"byte_end":14452444,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452445,"byte_end":14452519,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452520,"byte_end":14452525,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452526,"byte_end":14452554,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452555,"byte_end":14452558,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452559,"byte_end":14452581,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452582,"byte_end":14452585,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452586,"byte_end":14452633,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452634,"byte_end":14452666,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452667,"byte_end":14452704,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452705,"byte_end":14452755,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452756,"byte_end":14452770,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452771,"byte_end":14452777,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452778,"byte_end":14452790,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452791,"byte_end":14452796,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452797,"byte_end":14452814,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14452815,"byte_end":14452822,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5716},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454790,"byte_end":14454796,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454021,"byte_end":14454094,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454095,"byte_end":14454098,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454099,"byte_end":14454160,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454161,"byte_end":14454164,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454165,"byte_end":14454237,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454238,"byte_end":14454241,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454242,"byte_end":14454289,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454290,"byte_end":14454293,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454294,"byte_end":14454385,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454386,"byte_end":14454478,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454479,"byte_end":14454492,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454493,"byte_end":14454496,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454497,"byte_end":14454511,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454512,"byte_end":14454515,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454516,"byte_end":14454529,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454530,"byte_end":14454604,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454605,"byte_end":14454610,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454611,"byte_end":14454633,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454634,"byte_end":14454664,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454665,"byte_end":14454668,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454669,"byte_end":14454703,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454704,"byte_end":14454750,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454751,"byte_end":14454756,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454757,"byte_end":14454774,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454775,"byte_end":14454782,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5825},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455426,"byte_end":14455432,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14454954,"byte_end":14455012,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455013,"byte_end":14455016,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455017,"byte_end":14455097,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455098,"byte_end":14455107,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455108,"byte_end":14455111,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455112,"byte_end":14455159,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455160,"byte_end":14455163,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455164,"byte_end":14455255,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455256,"byte_end":14455348,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455349,"byte_end":14455362,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455363,"byte_end":14455366,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14455367,"byte_end":14455397,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5759},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461089,"byte_end":14461094,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460335,"byte_end":14460408,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460409,"byte_end":14460412,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460413,"byte_end":14460473,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460474,"byte_end":14460477,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460478,"byte_end":14460548,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460549,"byte_end":14460552,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460553,"byte_end":14460600,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460601,"byte_end":14460604,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460605,"byte_end":14460696,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460697,"byte_end":14460788,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460789,"byte_end":14460802,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460803,"byte_end":14460806,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460807,"byte_end":14460821,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460822,"byte_end":14460825,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460826,"byte_end":14460839,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460840,"byte_end":14460914,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460915,"byte_end":14460920,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460921,"byte_end":14460943,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460944,"byte_end":14460947,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460948,"byte_end":14460976,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14460977,"byte_end":14461010,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461011,"byte_end":14461049,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461050,"byte_end":14461055,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461056,"byte_end":14461073,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461074,"byte_end":14461081,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5863},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461745,"byte_end":14461750,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461277,"byte_end":14461335,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461336,"byte_end":14461339,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461340,"byte_end":14461419,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461420,"byte_end":14461429,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461430,"byte_end":14461433,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461434,"byte_end":14461481,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461482,"byte_end":14461485,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461486,"byte_end":14461577,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461578,"byte_end":14461669,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461670,"byte_end":14461683,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461684,"byte_end":14461687,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14461688,"byte_end":14461716,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5761},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14463071,"byte_end":14463080,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462666,"byte_end":14462718,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462723,"byte_end":14462726,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462731,"byte_end":14462745,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462750,"byte_end":14462753,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462758,"byte_end":14462771,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462776,"byte_end":14462850,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462855,"byte_end":14462860,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462865,"byte_end":14462887,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462892,"byte_end":14462895,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462900,"byte_end":14462928,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462933,"byte_end":14462966,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462971,"byte_end":14463009,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14463014,"byte_end":14463019,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14463024,"byte_end":14463041,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14463046,"byte_end":14463053,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdio.rs","byte_start":14467377,"byte_end":14467383,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5785},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdio.rs","byte_start":14467554,"byte_end":14467561,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5818},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468634,"byte_end":14468640,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14467864,"byte_end":14467938,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14467939,"byte_end":14467942,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14467943,"byte_end":14468004,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468005,"byte_end":14468008,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468009,"byte_end":14468081,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468082,"byte_end":14468085,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468086,"byte_end":14468133,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468134,"byte_end":14468137,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468138,"byte_end":14468229,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468230,"byte_end":14468322,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468323,"byte_end":14468336,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468337,"byte_end":14468340,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468341,"byte_end":14468355,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468356,"byte_end":14468359,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468360,"byte_end":14468373,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468374,"byte_end":14468448,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468449,"byte_end":14468454,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468455,"byte_end":14468477,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468478,"byte_end":14468508,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468509,"byte_end":14468512,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468513,"byte_end":14468547,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468548,"byte_end":14468594,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468595,"byte_end":14468600,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468601,"byte_end":14468618,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468619,"byte_end":14468626,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5902},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469271,"byte_end":14469277,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468798,"byte_end":14468857,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468858,"byte_end":14468861,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468862,"byte_end":14468938,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468939,"byte_end":14468952,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468953,"byte_end":14468956,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14468957,"byte_end":14469004,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469005,"byte_end":14469008,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469009,"byte_end":14469100,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469101,"byte_end":14469193,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469194,"byte_end":14469207,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469208,"byte_end":14469211,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14469212,"byte_end":14469242,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4291},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":5940}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":14345927,"byte_end":14345954,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5940},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5958},{"krate":0,"index":5974},{"krate":0,"index":5941}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":15391,"byte_end":15426,"line_start":157,"line_end":157,"column_start":13,"column_end":48}},{"value":"/ Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":14473970,"byte_end":14474022,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":5944},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5949},{"krate":0,"index":5952},{"krate":0,"index":5955}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Unix-specific I/O extensions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":14474262,"byte_end":14474295,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5958},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":5962},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":6238},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6245}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific filesystem extensions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476500,"byte_end":14476540,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5968},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477161,"byte_end":14477168,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"pub async fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476614,"byte_end":14476664,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476665,"byte_end":14476668,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476669,"byte_end":14476739,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476740,"byte_end":14476743,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476744,"byte_end":14476816,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476817,"byte_end":14476820,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476821,"byte_end":14476913,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476914,"byte_end":14476917,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476918,"byte_end":14476932,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476933,"byte_end":14476936,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476937,"byte_end":14476950,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14476951,"byte_end":14477025,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477026,"byte_end":14477031,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477032,"byte_end":14477073,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477074,"byte_end":14477077,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477078,"byte_end":14477115,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477116,"byte_end":14477121,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477122,"byte_end":14477139,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":14477140,"byte_end":14477147,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5974},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":5979},{"krate":0,"index":5982},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":6063},{"krate":0,"index":6152},{"krate":0,"index":6252}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific networking extensions.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":14479013,"byte_end":14479053,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6023},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482863,"byte_end":14482875,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":6024}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14481974,"byte_end":14482001,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482002,"byte_end":14482005,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482006,"byte_end":14482096,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482097,"byte_end":14482142,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482143,"byte_end":14482146,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482147,"byte_end":14482221,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482222,"byte_end":14482225,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482226,"byte_end":14482267,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482268,"byte_end":14482338,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482339,"byte_end":14482365,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482366,"byte_end":14482404,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482405,"byte_end":14482435,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482436,"byte_end":14482439,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482440,"byte_end":14482455,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482456,"byte_end":14482459,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482460,"byte_end":14482473,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482474,"byte_end":14482548,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482549,"byte_end":14482554,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482555,"byte_end":14482602,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482603,"byte_end":14482606,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482607,"byte_end":14482666,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482667,"byte_end":14482725,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482726,"byte_end":14482729,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482730,"byte_end":14482764,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482765,"byte_end":14482819,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482820,"byte_end":14482825,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482826,"byte_end":14482843,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482844,"byte_end":14482851,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483506,"byte_end":14483510,"line_start":66,"line_end":66,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483120,"byte_end":14483179,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483184,"byte_end":14483187,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483192,"byte_end":14483206,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483211,"byte_end":14483214,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483219,"byte_end":14483232,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483237,"byte_end":14483311,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483316,"byte_end":14483321,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483326,"byte_end":14483373,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483378,"byte_end":14483381,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483386,"byte_end":14483444,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483449,"byte_end":14483454,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483459,"byte_end":14483476,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483481,"byte_end":14483488,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6031},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484094,"byte_end":14484101,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483727,"byte_end":14483789,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483794,"byte_end":14483797,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483802,"byte_end":14483816,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483821,"byte_end":14483824,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483829,"byte_end":14483842,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483847,"byte_end":14483921,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483926,"byte_end":14483931,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483936,"byte_end":14483983,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483988,"byte_end":14483991,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14483996,"byte_end":14484038,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484043,"byte_end":14484048,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484053,"byte_end":14484070,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484075,"byte_end":14484082,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484667,"byte_end":14484671,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484233,"byte_end":14484282,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484287,"byte_end":14484290,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484295,"byte_end":14484353,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484358,"byte_end":14484361,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484366,"byte_end":14484380,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484385,"byte_end":14484388,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484393,"byte_end":14484406,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484411,"byte_end":14484485,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484490,"byte_end":14484495,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484500,"byte_end":14484547,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484552,"byte_end":14484555,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484560,"byte_end":14484611,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484616,"byte_end":14484621,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484626,"byte_end":14484643,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484648,"byte_end":14484655,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6033},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485554,"byte_end":14485561,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub async fn connect<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484873,"byte_end":14484922,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484927,"byte_end":14484930,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14484935,"byte_end":14485022,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485027,"byte_end":14485086,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485091,"byte_end":14485094,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485099,"byte_end":14485125,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485130,"byte_end":14485156,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485161,"byte_end":14485197,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485202,"byte_end":14485205,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485210,"byte_end":14485224,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485229,"byte_end":14485232,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485237,"byte_end":14485250,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485255,"byte_end":14485329,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485334,"byte_end":14485339,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485344,"byte_end":14485391,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485396,"byte_end":14485399,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485404,"byte_end":14485446,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485451,"byte_end":14485492,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485497,"byte_end":14485502,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485507,"byte_end":14485524,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485529,"byte_end":14485536,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6037},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486165,"byte_end":14486175,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485764,"byte_end":14485803,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485808,"byte_end":14485811,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485816,"byte_end":14485830,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485835,"byte_end":14485838,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485843,"byte_end":14485856,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485861,"byte_end":14485935,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485940,"byte_end":14485945,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14485950,"byte_end":14485997,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486002,"byte_end":14486005,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486010,"byte_end":14486068,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486073,"byte_end":14486109,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486114,"byte_end":14486119,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486124,"byte_end":14486141,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486146,"byte_end":14486153,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486822,"byte_end":14486831,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486266,"byte_end":14486312,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486317,"byte_end":14486320,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486325,"byte_end":14486386,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486391,"byte_end":14486394,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486399,"byte_end":14486431,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486436,"byte_end":14486439,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486444,"byte_end":14486458,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486463,"byte_end":14486466,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486471,"byte_end":14486484,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486489,"byte_end":14486563,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486568,"byte_end":14486573,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486578,"byte_end":14486625,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486630,"byte_end":14486633,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486638,"byte_end":14486680,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486685,"byte_end":14486726,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486731,"byte_end":14486766,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486771,"byte_end":14486776,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486781,"byte_end":14486798,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486803,"byte_end":14486810,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487465,"byte_end":14487474,"line_start":197,"line_end":197,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486921,"byte_end":14486955,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486960,"byte_end":14486963,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14486968,"byte_end":14487058,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487063,"byte_end":14487066,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487071,"byte_end":14487085,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487090,"byte_end":14487093,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487098,"byte_end":14487111,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487116,"byte_end":14487190,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487195,"byte_end":14487200,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487205,"byte_end":14487252,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487257,"byte_end":14487260,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487265,"byte_end":14487307,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487312,"byte_end":14487344,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487349,"byte_end":14487403,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487408,"byte_end":14487413,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487418,"byte_end":14487435,"line_start":195,"line_end":195,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487440,"byte_end":14487447,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6042},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488094,"byte_end":14488098,"line_start":218,"line_end":218,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487588,"byte_end":14487622,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487627,"byte_end":14487630,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487635,"byte_end":14487684,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487689,"byte_end":14487692,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487697,"byte_end":14487711,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487716,"byte_end":14487719,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487724,"byte_end":14487737,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487742,"byte_end":14487816,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487821,"byte_end":14487826,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487831,"byte_end":14487878,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487883,"byte_end":14487886,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487891,"byte_end":14487949,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487954,"byte_end":14487986,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14487991,"byte_end":14488032,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488037,"byte_end":14488042,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488047,"byte_end":14488064,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488069,"byte_end":14488076,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488685,"byte_end":14488692,"line_start":238,"line_end":238,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488193,"byte_end":14488247,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488252,"byte_end":14488255,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488260,"byte_end":14488312,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488317,"byte_end":14488320,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488325,"byte_end":14488339,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488344,"byte_end":14488347,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488352,"byte_end":14488365,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488370,"byte_end":14488444,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488449,"byte_end":14488454,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488459,"byte_end":14488506,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488511,"byte_end":14488514,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488519,"byte_end":14488561,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488566,"byte_end":14488623,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488628,"byte_end":14488633,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488638,"byte_end":14488655,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488660,"byte_end":14488667,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6049},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489342,"byte_end":14489346,"line_start":259,"line_end":259,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488826,"byte_end":14488876,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488881,"byte_end":14488884,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488889,"byte_end":14488941,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488946,"byte_end":14488949,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488954,"byte_end":14488968,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488973,"byte_end":14488976,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488981,"byte_end":14488994,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14488999,"byte_end":14489073,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489078,"byte_end":14489083,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489088,"byte_end":14489135,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489140,"byte_end":14489143,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489148,"byte_end":14489190,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489195,"byte_end":14489236,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489241,"byte_end":14489280,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489285,"byte_end":14489290,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489295,"byte_end":14489312,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489317,"byte_end":14489324,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6052},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490162,"byte_end":14490170,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489437,"byte_end":14489502,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489507,"byte_end":14489510,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489515,"byte_end":14489605,"line_start":265,"line_end":265,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489610,"byte_end":14489699,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489704,"byte_end":14489707,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489712,"byte_end":14489782,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489787,"byte_end":14489790,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489795,"byte_end":14489810,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489815,"byte_end":14489818,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489823,"byte_end":14489836,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489841,"byte_end":14489915,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489920,"byte_end":14489925,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489930,"byte_end":14489977,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14489982,"byte_end":14490009,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490014,"byte_end":14490017,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490022,"byte_end":14490064,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490069,"byte_end":14490106,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490111,"byte_end":14490116,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490121,"byte_end":14490138,"line_start":281,"line_end":281,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490143,"byte_end":14490150,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6120},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493094,"byte_end":14493106,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":6121}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492002,"byte_end":14492061,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492062,"byte_end":14492065,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492066,"byte_end":14492164,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492165,"byte_end":14492262,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492263,"byte_end":14492279,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492280,"byte_end":14492283,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492284,"byte_end":14492340,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492341,"byte_end":14492344,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492345,"byte_end":14492419,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492420,"byte_end":14492423,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492424,"byte_end":14492465,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492466,"byte_end":14492536,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492537,"byte_end":14492563,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492564,"byte_end":14492598,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492599,"byte_end":14492602,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492603,"byte_end":14492617,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492618,"byte_end":14492621,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492622,"byte_end":14492635,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492636,"byte_end":14492710,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492711,"byte_end":14492716,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492717,"byte_end":14492764,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492765,"byte_end":14492795,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492796,"byte_end":14492799,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492800,"byte_end":14492860,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492861,"byte_end":14492904,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492905,"byte_end":14492908,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492909,"byte_end":14492961,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492962,"byte_end":14492995,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14492996,"byte_end":14493044,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493045,"byte_end":14493050,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493051,"byte_end":14493056,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493057,"byte_end":14493074,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493075,"byte_end":14493082,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6123},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493563,"byte_end":14493567,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493173,"byte_end":14493234,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493239,"byte_end":14493242,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493247,"byte_end":14493261,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493266,"byte_end":14493269,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493274,"byte_end":14493287,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493292,"byte_end":14493366,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493371,"byte_end":14493376,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493381,"byte_end":14493428,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493433,"byte_end":14493436,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493441,"byte_end":14493501,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493506,"byte_end":14493511,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493516,"byte_end":14493533,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493538,"byte_end":14493545,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494333,"byte_end":14494339,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493789,"byte_end":14493844,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493849,"byte_end":14493852,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493857,"byte_end":14493949,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493954,"byte_end":14493957,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493962,"byte_end":14493976,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493981,"byte_end":14493984,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493989,"byte_end":14494002,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494007,"byte_end":14494081,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494086,"byte_end":14494091,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494096,"byte_end":14494143,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494148,"byte_end":14494151,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494156,"byte_end":14494216,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494221,"byte_end":14494271,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494276,"byte_end":14494281,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494286,"byte_end":14494303,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494308,"byte_end":14494315,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6130},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495531,"byte_end":14495539,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494585,"byte_end":14494630,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494635,"byte_end":14494638,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494643,"byte_end":14494734,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494739,"byte_end":14494831,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494836,"byte_end":14494839,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494844,"byte_end":14494874,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494879,"byte_end":14494959,"line_start":110,"line_end":110,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494964,"byte_end":14494967,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494972,"byte_end":14494986,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494991,"byte_end":14494994,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14494999,"byte_end":14495012,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495017,"byte_end":14495091,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495096,"byte_end":14495101,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495106,"byte_end":14495153,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495158,"byte_end":14495188,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495193,"byte_end":14495196,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495201,"byte_end":14495261,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495266,"byte_end":14495309,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495314,"byte_end":14495317,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495322,"byte_end":14495374,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495379,"byte_end":14495412,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495417,"byte_end":14495465,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495470,"byte_end":14495475,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495480,"byte_end":14495485,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495490,"byte_end":14495507,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495512,"byte_end":14495519,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6131},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496082,"byte_end":14496092,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495662,"byte_end":14495716,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495721,"byte_end":14495724,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495729,"byte_end":14495743,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495748,"byte_end":14495751,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495756,"byte_end":14495769,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495774,"byte_end":14495848,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495853,"byte_end":14495858,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495863,"byte_end":14495910,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495915,"byte_end":14495918,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495923,"byte_end":14495983,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14495988,"byte_end":14496026,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496031,"byte_end":14496036,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496041,"byte_end":14496058,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496063,"byte_end":14496070,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6134},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497118,"byte_end":14497126,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":6136}],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496520,"byte_end":14496576,"line_start":168,"line_end":168,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496577,"byte_end":14496580,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496581,"byte_end":14496679,"line_start":170,"line_end":170,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496680,"byte_end":14496739,"line_start":171,"line_end":171,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496740,"byte_end":14496743,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496744,"byte_end":14496814,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496815,"byte_end":14496818,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496819,"byte_end":14496919,"line_start":175,"line_end":175,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496920,"byte_end":14497000,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497001,"byte_end":14497059,"line_start":177,"line_end":177,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497060,"byte_end":14497106,"line_start":178,"line_end":178,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6248},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499545,"byte_end":14499555,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":6249}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14498876,"byte_end":14498901,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14498902,"byte_end":14498905,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14498906,"byte_end":14498978,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14498979,"byte_end":14498982,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14498983,"byte_end":14499022,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499023,"byte_end":14499091,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499092,"byte_end":14499095,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499096,"byte_end":14499110,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499111,"byte_end":14499114,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499115,"byte_end":14499128,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499129,"byte_end":14499203,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499204,"byte_end":14499209,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499210,"byte_end":14499255,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499256,"byte_end":14499286,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499287,"byte_end":14499290,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499291,"byte_end":14499354,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499355,"byte_end":14499399,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499400,"byte_end":14499403,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499404,"byte_end":14499438,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499439,"byte_end":14499484,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499485,"byte_end":14499490,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499491,"byte_end":14499508,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499509,"byte_end":14499516,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6208},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500012,"byte_end":14500019,"line_start":59,"line_end":59,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499634,"byte_end":14499686,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499691,"byte_end":14499694,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499699,"byte_end":14499713,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499718,"byte_end":14499721,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499726,"byte_end":14499739,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499744,"byte_end":14499818,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499823,"byte_end":14499828,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499833,"byte_end":14499878,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499883,"byte_end":14499886,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499891,"byte_end":14499950,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499955,"byte_end":14499960,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499965,"byte_end":14499982,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499987,"byte_end":14499994,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6212},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500668,"byte_end":14500672,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500250,"byte_end":14500299,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500304,"byte_end":14500307,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500312,"byte_end":14500370,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500375,"byte_end":14500378,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500383,"byte_end":14500397,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500402,"byte_end":14500405,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500410,"byte_end":14500423,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500428,"byte_end":14500502,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500507,"byte_end":14500512,"line_start":74,"line_end":74,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500517,"byte_end":14500562,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500567,"byte_end":14500570,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500575,"byte_end":14500612,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500617,"byte_end":14500622,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500627,"byte_end":14500644,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500649,"byte_end":14500656,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6213},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501378,"byte_end":14501388,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14500949,"byte_end":14501017,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501022,"byte_end":14501025,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501030,"byte_end":14501044,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501049,"byte_end":14501052,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501057,"byte_end":14501070,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501075,"byte_end":14501149,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501154,"byte_end":14501159,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501164,"byte_end":14501209,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501214,"byte_end":14501217,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501222,"byte_end":14501281,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501286,"byte_end":14501322,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501327,"byte_end":14501332,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501337,"byte_end":14501354,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501359,"byte_end":14501366,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6214},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501908,"byte_end":14501917,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501479,"byte_end":14501548,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501553,"byte_end":14501556,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501561,"byte_end":14501575,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501580,"byte_end":14501583,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501588,"byte_end":14501601,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501606,"byte_end":14501680,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501685,"byte_end":14501690,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501695,"byte_end":14501740,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501745,"byte_end":14501748,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501753,"byte_end":14501812,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501817,"byte_end":14501852,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501857,"byte_end":14501862,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501867,"byte_end":14501884,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14501889,"byte_end":14501896,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6215},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502720,"byte_end":14502728,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502007,"byte_end":14502073,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502078,"byte_end":14502081,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502086,"byte_end":14502176,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502181,"byte_end":14502270,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502275,"byte_end":14502278,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502283,"byte_end":14502353,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502358,"byte_end":14502361,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502366,"byte_end":14502379,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502384,"byte_end":14502458,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502463,"byte_end":14502468,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502473,"byte_end":14502518,"line_start":138,"line_end":138,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502523,"byte_end":14502550,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502555,"byte_end":14502558,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502563,"byte_end":14502622,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502627,"byte_end":14502664,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502669,"byte_end":14502674,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502679,"byte_end":14502696,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502701,"byte_end":14502708,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4292},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6267},{"krate":0,"index":6270},{"krate":0,"index":6273},{"krate":0,"index":6276},{"krate":0,"index":6279},{"krate":0,"index":6282},{"krate":0,"index":6285},{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6294},{"krate":0,"index":6297}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346028,"byte_end":14346050,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346051,"byte_end":14346054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346055,"byte_end":14346135,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346136,"byte_end":14346139,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346140,"byte_end":14346154,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346155,"byte_end":14346158,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346159,"byte_end":14346187,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346188,"byte_end":14346191,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346192,"byte_end":14346199,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346200,"byte_end":14346230,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346231,"byte_end":14346261,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":14346262,"byte_end":14346269,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4293},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6307},{"krate":0,"index":6310},{"krate":0,"index":6313},{"krate":0,"index":6400}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347257,"byte_end":14347288,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347289,"byte_end":14347292,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347293,"byte_end":14347346,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347347,"byte_end":14347350,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347351,"byte_end":14347415,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347416,"byte_end":14347419,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347420,"byte_end":14347455,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347456,"byte_end":14347459,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347460,"byte_end":14347534,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347535,"byte_end":14347606,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347607,"byte_end":14347610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347611,"byte_end":14347680,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347681,"byte_end":14347751,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347752,"byte_end":14347823,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347824,"byte_end":14347827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347828,"byte_end":14347903,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347904,"byte_end":14347907,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347908,"byte_end":14347915,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347916,"byte_end":14347942,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347943,"byte_end":14347969,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347970,"byte_end":14347996,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14347997,"byte_end":14348000,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348001,"byte_end":14348016,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348017,"byte_end":14348033,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348034,"byte_end":14348052,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348053,"byte_end":14348071,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348072,"byte_end":14348094,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348095,"byte_end":14348113,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348114,"byte_end":14348156,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348157,"byte_end":14348175,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348176,"byte_end":14348185,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348186,"byte_end":14348191,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348192,"byte_end":14348199,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348200,"byte_end":14348203,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348204,"byte_end":14348281,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348282,"byte_end":14348347,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348348,"byte_end":14348367,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348368,"byte_end":14348371,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348372,"byte_end":14348443,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348444,"byte_end":14348478,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348479,"byte_end":14348482,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348483,"byte_end":14348560,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348561,"byte_end":14348634,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348635,"byte_end":14348638,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348639,"byte_end":14348714,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348715,"byte_end":14348766,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348767,"byte_end":14348770,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348771,"byte_end":14348851,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348852,"byte_end":14348929,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348930,"byte_end":14348958,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348959,"byte_end":14348962,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14348963,"byte_end":14349033,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349034,"byte_end":14349099,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349100,"byte_end":14349146,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349147,"byte_end":14349150,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349151,"byte_end":14349214,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349215,"byte_end":14349285,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349286,"byte_end":14349349,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349350,"byte_end":14349353,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349354,"byte_end":14349424,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349425,"byte_end":14349491,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349492,"byte_end":14349562,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349563,"byte_end":14349632,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349633,"byte_end":14349671,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349672,"byte_end":14349675,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349676,"byte_end":14349751,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349752,"byte_end":14349822,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349823,"byte_end":14349869,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349870,"byte_end":14349873,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349874,"byte_end":14349944,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14349945,"byte_end":14350024,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350025,"byte_end":14350028,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350029,"byte_end":14350058,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350059,"byte_end":14350062,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350063,"byte_end":14350143,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350144,"byte_end":14350164,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350165,"byte_end":14350168,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350169,"byte_end":14350245,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350246,"byte_end":14350322,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350323,"byte_end":14350401,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350402,"byte_end":14350451,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350452,"byte_end":14350455,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350456,"byte_end":14350526,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350527,"byte_end":14350584,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350585,"byte_end":14350640,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350641,"byte_end":14350644,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350645,"byte_end":14350712,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350713,"byte_end":14350770,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350771,"byte_end":14350841,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350842,"byte_end":14350908,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350909,"byte_end":14350912,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350913,"byte_end":14350979,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350980,"byte_end":14350983,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14350984,"byte_end":14351053,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351054,"byte_end":14351122,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351123,"byte_end":14351178,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351179,"byte_end":14351248,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351249,"byte_end":14351285,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351286,"byte_end":14351355,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351356,"byte_end":14351413,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351414,"byte_end":14351417,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351418,"byte_end":14351484,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351485,"byte_end":14351572,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351573,"byte_end":14351645,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351646,"byte_end":14351716,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351717,"byte_end":14351793,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351794,"byte_end":14351871,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351872,"byte_end":14351875,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351876,"byte_end":14351919,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351920,"byte_end":14351923,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14351924,"byte_end":14352002,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352003,"byte_end":14352068,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352069,"byte_end":14352110,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352111,"byte_end":14352114,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352115,"byte_end":14352181,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352182,"byte_end":14352243,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352244,"byte_end":14352298,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352299,"byte_end":14352367,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352368,"byte_end":14352379,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352380,"byte_end":14352383,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352384,"byte_end":14352449,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352450,"byte_end":14352462,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352463,"byte_end":14352466,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352467,"byte_end":14352537,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352538,"byte_end":14352605,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352606,"byte_end":14352662,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352663,"byte_end":14352666,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352667,"byte_end":14352735,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352736,"byte_end":14352806,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352807,"byte_end":14352822,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352823,"byte_end":14352826,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352827,"byte_end":14352893,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352894,"byte_end":14352952,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352953,"byte_end":14352956,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14352957,"byte_end":14353025,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353026,"byte_end":14353090,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353091,"byte_end":14353161,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353162,"byte_end":14353176,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353177,"byte_end":14353180,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If you're looking for channels, check out","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353181,"byte_end":14353226,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ [`async_std::channel`][crate::channel].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353227,"byte_end":14353270,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353271,"byte_end":14353274,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353275,"byte_end":14353303,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353304,"byte_end":14353340,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353341,"byte_end":14353373,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353374,"byte_end":14353406,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353407,"byte_end":14353441,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353442,"byte_end":14353445,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353446,"byte_end":14353460,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353461,"byte_end":14353464,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353465,"byte_end":14353527,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353528,"byte_end":14353531,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353532,"byte_end":14353539,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353540,"byte_end":14353579,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353580,"byte_end":14353585,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353586,"byte_end":14353624,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353625,"byte_end":14353649,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353650,"byte_end":14353653,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353654,"byte_end":14353691,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353692,"byte_end":14353716,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353717,"byte_end":14353720,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353721,"byte_end":14353749,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353750,"byte_end":14353779,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353780,"byte_end":14353786,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353787,"byte_end":14353798,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353799,"byte_end":14353802,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353803,"byte_end":14353839,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353840,"byte_end":14353845,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353846,"byte_end":14353854,"line_start":169,"line_end":169,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353855,"byte_end":14353862,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":14353864,"byte_end":14353904,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6459},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14505755,"byte_end":14505772,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14505986,"byte_end":14505995,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14505915,"byte_end":14505974,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6345},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507015,"byte_end":14507022,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":6346}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506036,"byte_end":14506060,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506061,"byte_end":14506064,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Condvar`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506065,"byte_end":14506125,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506126,"byte_end":14506129,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506130,"byte_end":14506212,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506213,"byte_end":14506216,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506217,"byte_end":14506231,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506232,"byte_end":14506235,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506236,"byte_end":14506243,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506244,"byte_end":14506283,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506284,"byte_end":14506289,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506290,"byte_end":14506313,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506314,"byte_end":14506317,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506318,"byte_end":14506360,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506361,"byte_end":14506385,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506386,"byte_end":14506389,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506390,"byte_end":14506451,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506452,"byte_end":14506481,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506482,"byte_end":14506485,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506486,"byte_end":14506563,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506564,"byte_end":14506592,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506593,"byte_end":14506628,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506629,"byte_end":14506673,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506674,"byte_end":14506698,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506699,"byte_end":14506759,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506760,"byte_end":14506786,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506787,"byte_end":14506794,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506795,"byte_end":14506798,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506799,"byte_end":14506838,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506839,"byte_end":14506869,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506870,"byte_end":14506910,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506911,"byte_end":14506932,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506933,"byte_end":14506976,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506977,"byte_end":14506982,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506983,"byte_end":14506986,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506987,"byte_end":14506995,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14506996,"byte_end":14507003,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6352},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507408,"byte_end":14507411,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507220,"byte_end":14507256,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507261,"byte_end":14507264,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507269,"byte_end":14507283,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507288,"byte_end":14507291,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507296,"byte_end":14507303,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507308,"byte_end":14507341,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507346,"byte_end":14507349,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507354,"byte_end":14507384,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507389,"byte_end":14507396,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6353},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508634,"byte_end":14508638,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"pub async fn wait<'a, T, '_>(&'_ Self, MutexGuard) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507500,"byte_end":14507582,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507587,"byte_end":14507590,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507595,"byte_end":14507685,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507690,"byte_end":14507756,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507761,"byte_end":14507764,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507769,"byte_end":14507783,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507788,"byte_end":14507791,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507796,"byte_end":14507803,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507808,"byte_end":14507847,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507852,"byte_end":14507875,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507880,"byte_end":14507883,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507888,"byte_end":14507930,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507935,"byte_end":14507959,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507964,"byte_end":14507967,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507972,"byte_end":14508033,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508038,"byte_end":14508067,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508072,"byte_end":14508075,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508080,"byte_end":14508108,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508113,"byte_end":14508148,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508153,"byte_end":14508197,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508202,"byte_end":14508226,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508231,"byte_end":14508291,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508296,"byte_end":14508322,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508327,"byte_end":14508334,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508339,"byte_end":14508342,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508347,"byte_end":14508386,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508391,"byte_end":14508421,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508426,"byte_end":14508466,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508471,"byte_end":14508492,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508497,"byte_end":14508540,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508545,"byte_end":14508550,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508555,"byte_end":14508563,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508568,"byte_end":14508575,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14508580,"byte_end":14508616,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6361},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510199,"byte_end":14510209,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub async fn wait_until<'a, T, F, '_>(&'_ Self, MutexGuard, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509036,"byte_end":14509125,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509130,"byte_end":14509217,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509222,"byte_end":14509265,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509270,"byte_end":14509273,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509278,"byte_end":14509292,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509297,"byte_end":14509300,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509305,"byte_end":14509312,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509317,"byte_end":14509356,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509361,"byte_end":14509366,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509371,"byte_end":14509394,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509399,"byte_end":14509402,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509407,"byte_end":14509449,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509454,"byte_end":14509478,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509483,"byte_end":14509486,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509491,"byte_end":14509552,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509557,"byte_end":14509586,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509591,"byte_end":14509594,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509599,"byte_end":14509627,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509632,"byte_end":14509667,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509672,"byte_end":14509716,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509721,"byte_end":14509745,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509750,"byte_end":14509810,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509815,"byte_end":14509841,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509846,"byte_end":14509853,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509858,"byte_end":14509861,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509866,"byte_end":14509905,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509910,"byte_end":14509940,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14509945,"byte_end":14510018,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510023,"byte_end":14510105,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510110,"byte_end":14510115,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510120,"byte_end":14510128,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510133,"byte_end":14510140,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510145,"byte_end":14510181,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6367},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511816,"byte_end":14511828,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"pub async fn wait_timeout<'a, T, '_>(&'_ Self, MutexGuard, Duration)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510496,"byte_end":14510591,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510596,"byte_end":14510599,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510604,"byte_end":14510685,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510690,"byte_end":14510693,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510698,"byte_end":14510712,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510717,"byte_end":14510720,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510725,"byte_end":14510732,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510737,"byte_end":14510776,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510781,"byte_end":14510786,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510791,"byte_end":14510814,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510819,"byte_end":14510847,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510852,"byte_end":14510855,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510860,"byte_end":14510902,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510907,"byte_end":14510931,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510936,"byte_end":14510939,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14510944,"byte_end":14511005,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511010,"byte_end":14511039,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511044,"byte_end":14511047,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511052,"byte_end":14511080,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511085,"byte_end":14511118,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511123,"byte_end":14511165,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511170,"byte_end":14511192,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511197,"byte_end":14511255,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511260,"byte_end":14511284,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511289,"byte_end":14511296,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511301,"byte_end":14511304,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511309,"byte_end":14511347,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511352,"byte_end":14511382,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511387,"byte_end":14511427,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511432,"byte_end":14511442,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511447,"byte_end":14511526,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511531,"byte_end":14511556,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511561,"byte_end":14511588,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511593,"byte_end":14511680,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511685,"byte_end":14511700,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511705,"byte_end":14511712,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511717,"byte_end":14511722,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511727,"byte_end":14511732,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511737,"byte_end":14511745,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511750,"byte_end":14511757,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14511762,"byte_end":14511798,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6372},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513476,"byte_end":14513494,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"pub async fn wait_timeout_until<'a, T, F,\n'_>(&'_ Self, MutexGuard, Duration, F) -> /*impl Trait*/ where\nF: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512210,"byte_end":14512305,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512310,"byte_end":14512368,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512373,"byte_end":14512376,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512381,"byte_end":14512395,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512400,"byte_end":14512407,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512412,"byte_end":14512451,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512456,"byte_end":14512479,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512484,"byte_end":14512512,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512517,"byte_end":14512520,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512525,"byte_end":14512567,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512572,"byte_end":14512596,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512601,"byte_end":14512604,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512609,"byte_end":14512670,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512675,"byte_end":14512704,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512709,"byte_end":14512712,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512717,"byte_end":14512745,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512750,"byte_end":14512785,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512790,"byte_end":14512834,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512839,"byte_end":14512863,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512868,"byte_end":14512928,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512933,"byte_end":14512959,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512964,"byte_end":14512971,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512976,"byte_end":14512979,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14512984,"byte_end":14513022,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513027,"byte_end":14513057,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513062,"byte_end":14513103,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513108,"byte_end":14513134,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513139,"byte_end":14513174,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513179,"byte_end":14513210,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513215,"byte_end":14513227,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513232,"byte_end":14513261,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513266,"byte_end":14513333,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513338,"byte_end":14513343,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513348,"byte_end":14513391,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513396,"byte_end":14513405,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513410,"byte_end":14513417,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513422,"byte_end":14513458,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514857,"byte_end":14514867,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14513966,"byte_end":14514012,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514017,"byte_end":14514020,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514025,"byte_end":14514039,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514044,"byte_end":14514047,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514052,"byte_end":14514059,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514064,"byte_end":14514115,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514120,"byte_end":14514143,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514148,"byte_end":14514151,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514156,"byte_end":14514198,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514203,"byte_end":14514227,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514232,"byte_end":14514235,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514240,"byte_end":14514301,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514306,"byte_end":14514335,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514340,"byte_end":14514343,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514348,"byte_end":14514376,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514381,"byte_end":14514416,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514421,"byte_end":14514465,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514470,"byte_end":14514494,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514499,"byte_end":14514559,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514564,"byte_end":14514590,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514595,"byte_end":14514602,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514607,"byte_end":14514610,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514615,"byte_end":14514654,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514659,"byte_end":14514689,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514694,"byte_end":14514734,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514739,"byte_end":14514760,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514765,"byte_end":14514808,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514813,"byte_end":14514818,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514823,"byte_end":14514833,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514838,"byte_end":14514845,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515904,"byte_end":14515914,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514922,"byte_end":14514969,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514974,"byte_end":14514977,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14514982,"byte_end":14514996,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515001,"byte_end":14515008,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515013,"byte_end":14515064,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515069,"byte_end":14515074,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515079,"byte_end":14515102,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515107,"byte_end":14515110,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515115,"byte_end":14515157,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515162,"byte_end":14515186,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515191,"byte_end":14515194,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515199,"byte_end":14515260,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515265,"byte_end":14515294,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515299,"byte_end":14515302,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515307,"byte_end":14515335,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515340,"byte_end":14515375,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515380,"byte_end":14515424,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515429,"byte_end":14515453,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515458,"byte_end":14515518,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515523,"byte_end":14515549,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515554,"byte_end":14515561,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515566,"byte_end":14515569,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515574,"byte_end":14515613,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515618,"byte_end":14515648,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515653,"byte_end":14515693,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515698,"byte_end":14515771,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515776,"byte_end":14515797,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515802,"byte_end":14515845,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515850,"byte_end":14515855,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515860,"byte_end":14515865,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515870,"byte_end":14515880,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515885,"byte_end":14515892,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4324},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","parent":null,"children":[{"krate":0,"index":4325}],"decl_id":null,"docs":" Channels","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354326,"byte_end":14354338,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354339,"byte_end":14354342,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Multi-producer, multi-consumer queues, used for message-based","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354343,"byte_end":14354408,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ communication. Can provide a lightweight inter-task synchronisation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354409,"byte_end":14354480,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ mechanism, at the cost of some extra memory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":14354481,"byte_end":14354529,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":6490},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":6491},{"krate":0,"index":6494},{"krate":0,"index":6497},{"krate":0,"index":6500},{"krate":0,"index":6503},{"krate":0,"index":6506},{"krate":0,"index":6509},{"krate":0,"index":6512},{"krate":0,"index":6515},{"krate":0,"index":6518},{"krate":0,"index":6521},{"krate":0,"index":6524},{"krate":0,"index":6527},{"krate":0,"index":6530},{"krate":0,"index":6533},{"krate":0,"index":6536},{"krate":0,"index":6539},{"krate":0,"index":6542},{"krate":0,"index":6545},{"krate":0,"index":6548},{"krate":0,"index":6551},{"krate":0,"index":6554},{"krate":0,"index":6557},{"krate":0,"index":6560},{"krate":0,"index":6563},{"krate":0,"index":6566},{"krate":0,"index":6589},{"krate":0,"index":6609},{"krate":0,"index":6628},{"krate":0,"index":6647},{"krate":0,"index":6668},{"krate":0,"index":6713},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6952},{"krate":0,"index":6967},{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7018},{"krate":0,"index":7066},{"krate":0,"index":7089},{"krate":0,"index":7108},{"krate":0,"index":7127},{"krate":0,"index":7146},{"krate":0,"index":7165},{"krate":0,"index":7185},{"krate":0,"index":7203},{"krate":0,"index":7221}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11084,"byte_end":11118,"line_start":314,"line_end":314,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524606,"byte_end":14524645,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524646,"byte_end":14524649,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524650,"byte_end":14524701,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524702,"byte_end":14524705,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524706,"byte_end":14524752,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524753,"byte_end":14524805,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524806,"byte_end":14524866,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524867,"byte_end":14524870,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524871,"byte_end":14524905,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524906,"byte_end":14524909,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524910,"byte_end":14524954,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14524955,"byte_end":14525005,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525006,"byte_end":14525009,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525010,"byte_end":14525024,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525025,"byte_end":14525028,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525029,"byte_end":14525078,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525079,"byte_end":14525082,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525083,"byte_end":14525096,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525097,"byte_end":14525171,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525172,"byte_end":14525177,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525178,"byte_end":14525206,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525207,"byte_end":14525237,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525238,"byte_end":14525241,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525242,"byte_end":14525290,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525291,"byte_end":14525335,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525336,"byte_end":14525341,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525342,"byte_end":14525359,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":14525360,"byte_end":14525367,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6583},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527429,"byte_end":14527441,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526627,"byte_end":14526668,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526669,"byte_end":14526672,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526673,"byte_end":14526771,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526772,"byte_end":14526791,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526792,"byte_end":14526795,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526796,"byte_end":14526863,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526864,"byte_end":14526867,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526868,"byte_end":14526952,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526953,"byte_end":14526956,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526957,"byte_end":14526969,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526970,"byte_end":14526973,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14526974,"byte_end":14527032,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527033,"byte_end":14527036,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527037,"byte_end":14527098,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527099,"byte_end":14527156,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527157,"byte_end":14527193,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527194,"byte_end":14527197,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527198,"byte_end":14527212,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527213,"byte_end":14527216,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527217,"byte_end":14527230,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527231,"byte_end":14527305,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527306,"byte_end":14527311,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527312,"byte_end":14527334,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527335,"byte_end":14527338,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527339,"byte_end":14527383,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527384,"byte_end":14527389,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527390,"byte_end":14527407,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":14527408,"byte_end":14527415,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6602},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14529031,"byte_end":14529035,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14527833,"byte_end":14527901,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14527902,"byte_end":14527905,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14527906,"byte_end":14528005,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528006,"byte_end":14528031,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528032,"byte_end":14528035,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528036,"byte_end":14528133,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528134,"byte_end":14528208,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528209,"byte_end":14528212,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528213,"byte_end":14528309,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528310,"byte_end":14528336,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528337,"byte_end":14528340,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528341,"byte_end":14528400,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528401,"byte_end":14528404,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528405,"byte_end":14528435,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528436,"byte_end":14528472,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528473,"byte_end":14528541,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528542,"byte_end":14528545,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528546,"byte_end":14528558,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528559,"byte_end":14528562,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528563,"byte_end":14528621,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528622,"byte_end":14528625,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528626,"byte_end":14528674,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528675,"byte_end":14528748,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528749,"byte_end":14528785,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528786,"byte_end":14528789,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528790,"byte_end":14528804,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528805,"byte_end":14528808,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528809,"byte_end":14528822,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528823,"byte_end":14528897,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528898,"byte_end":14528903,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528904,"byte_end":14528926,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528927,"byte_end":14528930,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528931,"byte_end":14528985,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528986,"byte_end":14528991,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14528992,"byte_end":14529009,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":14529010,"byte_end":14529017,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6622},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530430,"byte_end":14530440,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529465,"byte_end":14529493,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529494,"byte_end":14529497,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529498,"byte_end":14529595,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529596,"byte_end":14529687,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529688,"byte_end":14529691,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529692,"byte_end":14529757,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529758,"byte_end":14529761,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529762,"byte_end":14529808,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529809,"byte_end":14529889,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529890,"byte_end":14529893,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529894,"byte_end":14529906,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529907,"byte_end":14529910,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529911,"byte_end":14529969,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529970,"byte_end":14529973,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14529974,"byte_end":14530035,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530036,"byte_end":14530086,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530087,"byte_end":14530155,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530156,"byte_end":14530192,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530193,"byte_end":14530196,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530197,"byte_end":14530211,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530212,"byte_end":14530215,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530216,"byte_end":14530229,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530230,"byte_end":14530304,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530305,"byte_end":14530310,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530311,"byte_end":14530333,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530334,"byte_end":14530337,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530338,"byte_end":14530384,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530385,"byte_end":14530390,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530391,"byte_end":14530408,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":14530409,"byte_end":14530416,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6641},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531555,"byte_end":14531569,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14530800,"byte_end":14530871,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14530872,"byte_end":14530875,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14530876,"byte_end":14530945,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14530946,"byte_end":14530949,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14530950,"byte_end":14531038,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531039,"byte_end":14531042,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531043,"byte_end":14531055,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531056,"byte_end":14531059,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531060,"byte_end":14531118,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531119,"byte_end":14531122,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531123,"byte_end":14531184,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531185,"byte_end":14531276,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531277,"byte_end":14531313,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531314,"byte_end":14531317,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531318,"byte_end":14531332,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531333,"byte_end":14531336,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531337,"byte_end":14531350,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531351,"byte_end":14531425,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531426,"byte_end":14531431,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531432,"byte_end":14531454,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531455,"byte_end":14531458,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531459,"byte_end":14531509,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531510,"byte_end":14531515,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531516,"byte_end":14531533,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":14531534,"byte_end":14531541,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8052},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532351,"byte_end":14532361,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":8053},{"krate":0,"index":8054}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14531932,"byte_end":14531997,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14531998,"byte_end":14532001,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532002,"byte_end":14532082,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532083,"byte_end":14532086,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532087,"byte_end":14532148,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532149,"byte_end":14532152,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532153,"byte_end":14532228,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532229,"byte_end":14532313,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":6661},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532889,"byte_end":14532892,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532576,"byte_end":14532611,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532616,"byte_end":14532619,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532624,"byte_end":14532681,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532686,"byte_end":14532689,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532694,"byte_end":14532730,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532735,"byte_end":14532738,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532743,"byte_end":14532757,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532762,"byte_end":14532765,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532770,"byte_end":14532777,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532782,"byte_end":14532816,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532821,"byte_end":14532824,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532829,"byte_end":14532865,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532870,"byte_end":14532877,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6662},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533640,"byte_end":14533649,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533142,"byte_end":14533181,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533186,"byte_end":14533189,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533194,"byte_end":14533288,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533293,"byte_end":14533387,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533392,"byte_end":14533395,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533400,"byte_end":14533444,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533449,"byte_end":14533452,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533457,"byte_end":14533471,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533476,"byte_end":14533479,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533484,"byte_end":14533491,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533496,"byte_end":14533530,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533535,"byte_end":14533538,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533543,"byte_end":14533583,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533588,"byte_end":14533616,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533621,"byte_end":14533628,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6663},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534581,"byte_end":14534587,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533753,"byte_end":14533805,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533810,"byte_end":14533813,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533818,"byte_end":14533913,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533918,"byte_end":14533921,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533926,"byte_end":14533938,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533943,"byte_end":14533946,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14533951,"byte_end":14534009,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534014,"byte_end":14534017,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534022,"byte_end":14534083,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534088,"byte_end":14534179,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534184,"byte_end":14534220,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534225,"byte_end":14534228,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534233,"byte_end":14534247,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534252,"byte_end":14534255,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534260,"byte_end":14534273,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534278,"byte_end":14534352,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534357,"byte_end":14534362,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534367,"byte_end":14534401,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534406,"byte_end":14534409,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534414,"byte_end":14534435,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534440,"byte_end":14534464,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534469,"byte_end":14534504,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534509,"byte_end":14534525,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534530,"byte_end":14534535,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534540,"byte_end":14534557,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14534562,"byte_end":14534569,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6694},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535753,"byte_end":14535761,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535457,"byte_end":14535485,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535486,"byte_end":14535489,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535490,"byte_end":14535557,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535558,"byte_end":14535561,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535562,"byte_end":14535621,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535622,"byte_end":14535625,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535626,"byte_end":14535660,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535661,"byte_end":14535741,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6699},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536652,"byte_end":14536656,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535978,"byte_end":14536018,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536023,"byte_end":14536026,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536031,"byte_end":14536125,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536130,"byte_end":14536148,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536153,"byte_end":14536156,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536161,"byte_end":14536195,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536200,"byte_end":14536203,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536208,"byte_end":14536222,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536227,"byte_end":14536230,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536235,"byte_end":14536248,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536253,"byte_end":14536327,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536332,"byte_end":14536337,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536342,"byte_end":14536364,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536369,"byte_end":14536399,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536404,"byte_end":14536407,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536412,"byte_end":14536455,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536460,"byte_end":14536463,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536468,"byte_end":14536512,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536517,"byte_end":14536542,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536547,"byte_end":14536586,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536591,"byte_end":14536596,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536601,"byte_end":14536606,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536611,"byte_end":14536628,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536633,"byte_end":14536640,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6700},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537787,"byte_end":14537795,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536717,"byte_end":14536755,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536760,"byte_end":14536763,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536768,"byte_end":14536836,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536841,"byte_end":14536844,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536849,"byte_end":14536940,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536945,"byte_end":14536957,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536962,"byte_end":14536965,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14536970,"byte_end":14537020,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537025,"byte_end":14537028,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537033,"byte_end":14537045,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537050,"byte_end":14537053,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537058,"byte_end":14537116,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537121,"byte_end":14537124,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537129,"byte_end":14537202,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537207,"byte_end":14537272,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537277,"byte_end":14537313,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537318,"byte_end":14537321,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537326,"byte_end":14537340,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537345,"byte_end":14537348,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537353,"byte_end":14537366,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537371,"byte_end":14537445,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537450,"byte_end":14537455,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537460,"byte_end":14537482,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537487,"byte_end":14537517,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537522,"byte_end":14537525,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537530,"byte_end":14537573,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537578,"byte_end":14537581,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537586,"byte_end":14537630,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537635,"byte_end":14537660,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537665,"byte_end":14537715,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537720,"byte_end":14537725,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537730,"byte_end":14537735,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537740,"byte_end":14537757,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537762,"byte_end":14537769,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6704},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538988,"byte_end":14538997,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537931,"byte_end":14537970,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537975,"byte_end":14537978,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14537983,"byte_end":14538062,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538067,"byte_end":14538070,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538075,"byte_end":14538164,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538169,"byte_end":14538172,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538177,"byte_end":14538211,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538216,"byte_end":14538219,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538224,"byte_end":14538236,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538241,"byte_end":14538244,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538249,"byte_end":14538307,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538312,"byte_end":14538315,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538320,"byte_end":14538393,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538398,"byte_end":14538472,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538477,"byte_end":14538513,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538518,"byte_end":14538521,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538526,"byte_end":14538540,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538545,"byte_end":14538548,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538553,"byte_end":14538566,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538571,"byte_end":14538645,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538650,"byte_end":14538655,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538660,"byte_end":14538682,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538687,"byte_end":14538717,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538722,"byte_end":14538725,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538730,"byte_end":14538773,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538778,"byte_end":14538781,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538786,"byte_end":14538830,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538835,"byte_end":14538860,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538865,"byte_end":14538916,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538921,"byte_end":14538926,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538931,"byte_end":14538936,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538941,"byte_end":14538958,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14538963,"byte_end":14538970,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6708},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539677,"byte_end":14539686,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539134,"byte_end":14539199,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539204,"byte_end":14539207,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539212,"byte_end":14539226,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539231,"byte_end":14539234,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539239,"byte_end":14539252,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539257,"byte_end":14539331,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539336,"byte_end":14539341,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539346,"byte_end":14539368,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539373,"byte_end":14539403,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539408,"byte_end":14539411,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539416,"byte_end":14539459,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539464,"byte_end":14539467,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539472,"byte_end":14539516,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539521,"byte_end":14539546,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539551,"byte_end":14539611,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539616,"byte_end":14539621,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539626,"byte_end":14539631,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539636,"byte_end":14539653,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539658,"byte_end":14539665,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8069},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541946,"byte_end":14541950,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":8070},{"krate":0,"index":8071}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540654,"byte_end":14540689,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540690,"byte_end":14540693,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540694,"byte_end":14540790,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540791,"byte_end":14540803,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540804,"byte_end":14540807,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540808,"byte_end":14540903,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14540904,"byte_end":14541002,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541003,"byte_end":14541006,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541007,"byte_end":14541062,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541063,"byte_end":14541066,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541067,"byte_end":14541101,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541102,"byte_end":14541174,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541175,"byte_end":14541178,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541179,"byte_end":14541193,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541194,"byte_end":14541197,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541198,"byte_end":14541247,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541248,"byte_end":14541251,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541252,"byte_end":14541265,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541266,"byte_end":14541340,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541341,"byte_end":14541346,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541347,"byte_end":14541375,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541376,"byte_end":14541406,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541407,"byte_end":14541410,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541411,"byte_end":14541459,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541460,"byte_end":14541504,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541505,"byte_end":14541510,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541511,"byte_end":14541528,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541529,"byte_end":14541536,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541537,"byte_end":14541540,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541541,"byte_end":14541596,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541597,"byte_end":14541600,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541601,"byte_end":14541614,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541615,"byte_end":14541689,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541690,"byte_end":14541695,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541696,"byte_end":14541724,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541725,"byte_end":14541755,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541756,"byte_end":14541759,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541760,"byte_end":14541806,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541807,"byte_end":14541841,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541842,"byte_end":14541885,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541886,"byte_end":14541891,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541892,"byte_end":14541909,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14541910,"byte_end":14541917,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6805},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543411,"byte_end":14543415,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542578,"byte_end":14542613,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542618,"byte_end":14542621,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542626,"byte_end":14542686,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542691,"byte_end":14542694,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542699,"byte_end":14542711,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542716,"byte_end":14542719,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542724,"byte_end":14542782,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542787,"byte_end":14542790,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542795,"byte_end":14542843,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542848,"byte_end":14542909,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542914,"byte_end":14542950,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542955,"byte_end":14542958,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542963,"byte_end":14543044,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543049,"byte_end":14543052,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543057,"byte_end":14543119,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543124,"byte_end":14543127,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543132,"byte_end":14543146,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543151,"byte_end":14543154,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543159,"byte_end":14543172,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543177,"byte_end":14543251,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543256,"byte_end":14543261,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543266,"byte_end":14543294,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543299,"byte_end":14543302,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543307,"byte_end":14543349,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543354,"byte_end":14543359,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543364,"byte_end":14543381,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543386,"byte_end":14543393,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6811},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544668,"byte_end":14544674,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543723,"byte_end":14543759,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543764,"byte_end":14543767,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543772,"byte_end":14543863,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543868,"byte_end":14543871,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543876,"byte_end":14543936,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543941,"byte_end":14543944,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543949,"byte_end":14543961,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543966,"byte_end":14543969,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14543974,"byte_end":14544032,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544037,"byte_end":14544040,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544045,"byte_end":14544094,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544099,"byte_end":14544164,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544169,"byte_end":14544205,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544210,"byte_end":14544213,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544218,"byte_end":14544299,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544304,"byte_end":14544307,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544312,"byte_end":14544374,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544379,"byte_end":14544382,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544387,"byte_end":14544401,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544406,"byte_end":14544409,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544414,"byte_end":14544427,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544432,"byte_end":14544506,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544511,"byte_end":14544516,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544521,"byte_end":14544549,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544554,"byte_end":14544557,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544562,"byte_end":14544606,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544611,"byte_end":14544616,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544621,"byte_end":14544638,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544643,"byte_end":14544650,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545697,"byte_end":14545705,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544925,"byte_end":14544993,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14544998,"byte_end":14545001,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545006,"byte_end":14545083,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545088,"byte_end":14545091,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545096,"byte_end":14545186,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545191,"byte_end":14545283,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545288,"byte_end":14545291,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545296,"byte_end":14545310,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545315,"byte_end":14545318,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545323,"byte_end":14545336,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545341,"byte_end":14545415,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545420,"byte_end":14545425,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545430,"byte_end":14545458,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545463,"byte_end":14545493,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545498,"byte_end":14545501,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545506,"byte_end":14545554,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545559,"byte_end":14545603,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545608,"byte_end":14545635,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545640,"byte_end":14545645,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545650,"byte_end":14545667,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14545672,"byte_end":14545679,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546910,"byte_end":14546919,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546042,"byte_end":14546097,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546102,"byte_end":14546105,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546110,"byte_end":14546197,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546202,"byte_end":14546205,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546210,"byte_end":14546302,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546307,"byte_end":14546355,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546360,"byte_end":14546363,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546368,"byte_end":14546448,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546453,"byte_end":14546456,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546461,"byte_end":14546495,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546500,"byte_end":14546503,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546508,"byte_end":14546522,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546527,"byte_end":14546530,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546535,"byte_end":14546548,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546553,"byte_end":14546627,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546632,"byte_end":14546637,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546642,"byte_end":14546670,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546675,"byte_end":14546705,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546710,"byte_end":14546713,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546718,"byte_end":14546766,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546771,"byte_end":14546815,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546820,"byte_end":14546848,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546853,"byte_end":14546858,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546863,"byte_end":14546880,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14546885,"byte_end":14546892,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6826},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548016,"byte_end":14548023,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547258,"byte_end":14547292,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547297,"byte_end":14547300,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547305,"byte_end":14547396,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547401,"byte_end":14547494,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547499,"byte_end":14547539,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547544,"byte_end":14547547,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547552,"byte_end":14547647,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547652,"byte_end":14547689,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547694,"byte_end":14547697,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547702,"byte_end":14547716,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547721,"byte_end":14547724,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547729,"byte_end":14547742,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547747,"byte_end":14547821,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547826,"byte_end":14547831,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547836,"byte_end":14547864,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547869,"byte_end":14547872,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547877,"byte_end":14547921,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547926,"byte_end":14547954,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547959,"byte_end":14547964,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547969,"byte_end":14547986,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14547991,"byte_end":14547998,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6831},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548842,"byte_end":14548850,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548473,"byte_end":14548503,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548508,"byte_end":14548511,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548516,"byte_end":14548530,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548535,"byte_end":14548538,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548543,"byte_end":14548556,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548561,"byte_end":14548635,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548640,"byte_end":14548645,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548650,"byte_end":14548678,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548683,"byte_end":14548686,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548691,"byte_end":14548733,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548738,"byte_end":14548780,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548785,"byte_end":14548790,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548795,"byte_end":14548812,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548817,"byte_end":14548824,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6835},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549696,"byte_end":14549711,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14548987,"byte_end":14549027,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549032,"byte_end":14549035,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549040,"byte_end":14549052,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549057,"byte_end":14549060,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549065,"byte_end":14549123,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549128,"byte_end":14549131,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549136,"byte_end":14549213,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549218,"byte_end":14549254,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549259,"byte_end":14549262,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549267,"byte_end":14549281,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549286,"byte_end":14549289,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549294,"byte_end":14549307,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549312,"byte_end":14549386,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549391,"byte_end":14549396,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549401,"byte_end":14549429,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549434,"byte_end":14549437,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549442,"byte_end":14549486,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549491,"byte_end":14549494,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549499,"byte_end":14549556,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549561,"byte_end":14549590,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549595,"byte_end":14549634,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549639,"byte_end":14549644,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549649,"byte_end":14549666,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549671,"byte_end":14549678,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6945},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573341,"byte_end":14573350,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572577,"byte_end":14572619,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572620,"byte_end":14572623,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572624,"byte_end":14572719,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572720,"byte_end":14572785,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572786,"byte_end":14572789,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572790,"byte_end":14572854,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572855,"byte_end":14572858,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572859,"byte_end":14572937,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572938,"byte_end":14572941,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572942,"byte_end":14572954,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572955,"byte_end":14572958,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14572959,"byte_end":14573017,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573018,"byte_end":14573021,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573022,"byte_end":14573069,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573070,"byte_end":14573106,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573107,"byte_end":14573110,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573111,"byte_end":14573125,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573126,"byte_end":14573129,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573130,"byte_end":14573143,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573144,"byte_end":14573218,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573219,"byte_end":14573224,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573225,"byte_end":14573247,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573248,"byte_end":14573251,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573252,"byte_end":14573295,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573296,"byte_end":14573301,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573302,"byte_end":14573319,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":14573320,"byte_end":14573327,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6962},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574789,"byte_end":14574797,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14573844,"byte_end":14573874,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14573875,"byte_end":14573878,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14573879,"byte_end":14573976,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14573977,"byte_end":14574068,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574069,"byte_end":14574081,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574082,"byte_end":14574085,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574086,"byte_end":14574149,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574150,"byte_end":14574153,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574154,"byte_end":14574204,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574205,"byte_end":14574281,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574282,"byte_end":14574285,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574286,"byte_end":14574298,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574299,"byte_end":14574302,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574303,"byte_end":14574361,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574362,"byte_end":14574365,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574366,"byte_end":14574427,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574428,"byte_end":14574502,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574503,"byte_end":14574539,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574540,"byte_end":14574543,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574544,"byte_end":14574558,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574559,"byte_end":14574562,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574563,"byte_end":14574576,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574577,"byte_end":14574651,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574652,"byte_end":14574657,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574658,"byte_end":14574680,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574681,"byte_end":14574684,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574685,"byte_end":14574743,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574744,"byte_end":14574749,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574750,"byte_end":14574767,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":14574768,"byte_end":14574775,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8099},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582423,"byte_end":14582434,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14580878,"byte_end":14580936,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14580937,"byte_end":14580940,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14580941,"byte_end":14580999,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581000,"byte_end":14581003,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581004,"byte_end":14581101,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581102,"byte_end":14581147,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581148,"byte_end":14581151,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581152,"byte_end":14581248,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581249,"byte_end":14581323,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581324,"byte_end":14581327,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581328,"byte_end":14581390,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581391,"byte_end":14581394,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581395,"byte_end":14581421,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581422,"byte_end":14581450,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581451,"byte_end":14581481,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581482,"byte_end":14581516,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581517,"byte_end":14581547,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581548,"byte_end":14581586,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581587,"byte_end":14581673,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581674,"byte_end":14581677,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581678,"byte_end":14581692,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581693,"byte_end":14581696,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581697,"byte_end":14581725,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581726,"byte_end":14581729,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581730,"byte_end":14581743,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581744,"byte_end":14581818,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581819,"byte_end":14581824,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581825,"byte_end":14581860,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581861,"byte_end":14581864,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581865,"byte_end":14581898,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581899,"byte_end":14581918,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581919,"byte_end":14581941,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581942,"byte_end":14581958,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581959,"byte_end":14581964,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581965,"byte_end":14581982,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581983,"byte_end":14581990,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581991,"byte_end":14581994,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14581995,"byte_end":14582079,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582080,"byte_end":14582083,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582084,"byte_end":14582097,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582098,"byte_end":14582172,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582173,"byte_end":14582178,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582179,"byte_end":14582214,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582215,"byte_end":14582218,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582219,"byte_end":14582252,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582253,"byte_end":14582272,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582273,"byte_end":14582293,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582294,"byte_end":14582315,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582316,"byte_end":14582338,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582339,"byte_end":14582355,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582356,"byte_end":14582361,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582362,"byte_end":14582379,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582380,"byte_end":14582387,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6984},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582931,"byte_end":14582934,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582482,"byte_end":14582517,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582522,"byte_end":14582525,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582530,"byte_end":14582575,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582580,"byte_end":14582583,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582588,"byte_end":14582602,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582607,"byte_end":14582610,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582615,"byte_end":14582628,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582633,"byte_end":14582707,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582712,"byte_end":14582717,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582722,"byte_end":14582757,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582762,"byte_end":14582765,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582770,"byte_end":14582803,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582808,"byte_end":14582827,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582832,"byte_end":14582854,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582859,"byte_end":14582875,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582880,"byte_end":14582885,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582890,"byte_end":14582907,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582912,"byte_end":14582919,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583505,"byte_end":14583509,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583014,"byte_end":14583054,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583059,"byte_end":14583062,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583067,"byte_end":14583149,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583154,"byte_end":14583157,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583162,"byte_end":14583176,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583181,"byte_end":14583184,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583189,"byte_end":14583202,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583207,"byte_end":14583281,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583286,"byte_end":14583291,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583296,"byte_end":14583331,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583336,"byte_end":14583339,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583344,"byte_end":14583377,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583382,"byte_end":14583401,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583406,"byte_end":14583428,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583433,"byte_end":14583449,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583454,"byte_end":14583459,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583464,"byte_end":14583481,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583486,"byte_end":14583493,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6986},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584229,"byte_end":14584234,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583606,"byte_end":14583647,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583652,"byte_end":14583655,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583660,"byte_end":14583742,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583747,"byte_end":14583750,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583755,"byte_end":14583849,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583854,"byte_end":14583872,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583877,"byte_end":14583880,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583885,"byte_end":14583899,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583904,"byte_end":14583907,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583912,"byte_end":14583925,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14583930,"byte_end":14584004,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584009,"byte_end":14584014,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584019,"byte_end":14584054,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584059,"byte_end":14584062,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584067,"byte_end":14584100,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584105,"byte_end":14584125,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584130,"byte_end":14584152,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584157,"byte_end":14584173,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584178,"byte_end":14584183,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584188,"byte_end":14584205,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584210,"byte_end":14584217,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584919,"byte_end":14584925,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584334,"byte_end":14584376,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584381,"byte_end":14584384,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584389,"byte_end":14584483,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584488,"byte_end":14584561,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584566,"byte_end":14584569,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584574,"byte_end":14584588,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584593,"byte_end":14584596,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584601,"byte_end":14584614,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584619,"byte_end":14584693,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584698,"byte_end":14584703,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584708,"byte_end":14584743,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584748,"byte_end":14584751,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584756,"byte_end":14584789,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584794,"byte_end":14584815,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584820,"byte_end":14584842,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584847,"byte_end":14584863,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584868,"byte_end":14584873,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584878,"byte_end":14584895,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14584900,"byte_end":14584907,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585733,"byte_end":14585741,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585028,"byte_end":14585087,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585092,"byte_end":14585095,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585100,"byte_end":14585176,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585181,"byte_end":14585184,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585189,"byte_end":14585272,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585277,"byte_end":14585280,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585285,"byte_end":14585313,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585318,"byte_end":14585348,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585353,"byte_end":14585356,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585361,"byte_end":14585375,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585380,"byte_end":14585383,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585388,"byte_end":14585401,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585406,"byte_end":14585480,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585485,"byte_end":14585490,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585495,"byte_end":14585530,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585535,"byte_end":14585538,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585543,"byte_end":14585576,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585581,"byte_end":14585601,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585606,"byte_end":14585629,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585634,"byte_end":14585656,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585661,"byte_end":14585677,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585682,"byte_end":14585687,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585692,"byte_end":14585709,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585714,"byte_end":14585721,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6989},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586580,"byte_end":14586586,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585850,"byte_end":14585920,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585925,"byte_end":14585928,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14585933,"byte_end":14586022,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586027,"byte_end":14586030,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586035,"byte_end":14586121,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586126,"byte_end":14586129,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586134,"byte_end":14586162,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586167,"byte_end":14586197,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586202,"byte_end":14586205,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586210,"byte_end":14586224,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586229,"byte_end":14586232,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586237,"byte_end":14586250,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586255,"byte_end":14586329,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586334,"byte_end":14586339,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586344,"byte_end":14586379,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586384,"byte_end":14586387,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586392,"byte_end":14586425,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586430,"byte_end":14586450,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586455,"byte_end":14586476,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586481,"byte_end":14586503,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586508,"byte_end":14586524,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586529,"byte_end":14586534,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586539,"byte_end":14586556,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586561,"byte_end":14586568,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587483,"byte_end":14587493,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586689,"byte_end":14586771,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586776,"byte_end":14586779,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586784,"byte_end":14586875,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586880,"byte_end":14586921,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586926,"byte_end":14586929,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14586934,"byte_end":14587020,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587025,"byte_end":14587028,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587033,"byte_end":14587061,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587066,"byte_end":14587096,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587101,"byte_end":14587104,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587109,"byte_end":14587123,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587128,"byte_end":14587131,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587136,"byte_end":14587149,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587154,"byte_end":14587228,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587233,"byte_end":14587238,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587243,"byte_end":14587278,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587283,"byte_end":14587286,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587291,"byte_end":14587324,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587329,"byte_end":14587349,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587354,"byte_end":14587379,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587384,"byte_end":14587406,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587411,"byte_end":14587427,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587432,"byte_end":14587437,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587442,"byte_end":14587459,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587464,"byte_end":14587471,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588931,"byte_end":14588935,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587608,"byte_end":14587653,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587658,"byte_end":14587661,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587666,"byte_end":14587678,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587683,"byte_end":14587686,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587691,"byte_end":14587749,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587754,"byte_end":14587757,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587762,"byte_end":14587843,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587848,"byte_end":14587897,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587902,"byte_end":14587986,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14587991,"byte_end":14588048,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588053,"byte_end":14588147,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588152,"byte_end":14588219,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588224,"byte_end":14588310,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588315,"byte_end":14588351,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588356,"byte_end":14588359,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588364,"byte_end":14588390,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588395,"byte_end":14588423,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588428,"byte_end":14588458,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588463,"byte_end":14588497,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588502,"byte_end":14588532,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588537,"byte_end":14588575,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588580,"byte_end":14588583,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588588,"byte_end":14588602,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588607,"byte_end":14588610,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588615,"byte_end":14588628,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588633,"byte_end":14588707,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588712,"byte_end":14588717,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588722,"byte_end":14588757,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588762,"byte_end":14588765,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588770,"byte_end":14588803,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588808,"byte_end":14588827,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588832,"byte_end":14588854,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588859,"byte_end":14588875,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588880,"byte_end":14588885,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588890,"byte_end":14588907,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14588912,"byte_end":14588919,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7012},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592439,"byte_end":14592443,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591434,"byte_end":14591487,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591488,"byte_end":14591491,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591492,"byte_end":14591591,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591592,"byte_end":14591688,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591689,"byte_end":14591701,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591702,"byte_end":14591705,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591706,"byte_end":14591787,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591788,"byte_end":14591791,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591792,"byte_end":14591851,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591852,"byte_end":14591855,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591856,"byte_end":14591902,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591903,"byte_end":14591971,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591972,"byte_end":14591975,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591976,"byte_end":14591988,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591989,"byte_end":14591992,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14591993,"byte_end":14592051,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592052,"byte_end":14592055,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592056,"byte_end":14592104,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592105,"byte_end":14592166,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592167,"byte_end":14592203,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592204,"byte_end":14592207,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592208,"byte_end":14592222,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592223,"byte_end":14592226,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592227,"byte_end":14592240,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592241,"byte_end":14592315,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592316,"byte_end":14592321,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592322,"byte_end":14592344,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592345,"byte_end":14592348,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592349,"byte_end":14592393,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592394,"byte_end":14592399,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592400,"byte_end":14592417,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":14592418,"byte_end":14592425,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7053},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594000,"byte_end":14594008,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14592908,"byte_end":14592955,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14592956,"byte_end":14592959,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14592960,"byte_end":14593054,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593055,"byte_end":14593095,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593096,"byte_end":14593099,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593100,"byte_end":14593163,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593164,"byte_end":14593167,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593168,"byte_end":14593210,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593211,"byte_end":14593249,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593250,"byte_end":14593326,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593327,"byte_end":14593330,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593331,"byte_end":14593343,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593344,"byte_end":14593347,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593348,"byte_end":14593406,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593407,"byte_end":14593410,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593411,"byte_end":14593464,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593465,"byte_end":14593547,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593548,"byte_end":14593584,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593585,"byte_end":14593588,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593589,"byte_end":14593603,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593604,"byte_end":14593607,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593608,"byte_end":14593621,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593622,"byte_end":14593696,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593697,"byte_end":14593702,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593703,"byte_end":14593725,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593726,"byte_end":14593756,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593757,"byte_end":14593760,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593761,"byte_end":14593808,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593809,"byte_end":14593812,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593813,"byte_end":14593861,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593862,"byte_end":14593887,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593888,"byte_end":14593948,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593949,"byte_end":14593954,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593955,"byte_end":14593960,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593961,"byte_end":14593978,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14593979,"byte_end":14593986,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8115},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594813,"byte_end":14594820,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594288,"byte_end":14594327,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594328,"byte_end":14594331,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594332,"byte_end":14594400,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594401,"byte_end":14594499,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594500,"byte_end":14594521,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594522,"byte_end":14594525,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594526,"byte_end":14594584,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594585,"byte_end":14594588,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594589,"byte_end":14594623,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594624,"byte_end":14594666,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594667,"byte_end":14594705,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14594706,"byte_end":14594784,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":7083},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596993,"byte_end":14597002,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596374,"byte_end":14596434,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596435,"byte_end":14596438,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596439,"byte_end":14596503,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596504,"byte_end":14596507,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596508,"byte_end":14596586,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596587,"byte_end":14596590,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596591,"byte_end":14596603,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596604,"byte_end":14596607,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596608,"byte_end":14596666,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596667,"byte_end":14596670,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596671,"byte_end":14596719,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596720,"byte_end":14596756,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596757,"byte_end":14596760,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596761,"byte_end":14596775,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596776,"byte_end":14596779,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596780,"byte_end":14596793,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596794,"byte_end":14596868,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596869,"byte_end":14596874,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596875,"byte_end":14596897,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596898,"byte_end":14596901,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596902,"byte_end":14596947,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596948,"byte_end":14596953,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596954,"byte_end":14596971,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":14596972,"byte_end":14596979,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7102},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598468,"byte_end":14598482,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597388,"byte_end":14597440,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597441,"byte_end":14597444,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597445,"byte_end":14597544,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597545,"byte_end":14597641,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597642,"byte_end":14597654,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597655,"byte_end":14597658,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597659,"byte_end":14597731,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597732,"byte_end":14597735,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597736,"byte_end":14597805,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597806,"byte_end":14597809,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597810,"byte_end":14597836,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597837,"byte_end":14597925,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597926,"byte_end":14597929,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597930,"byte_end":14597942,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597943,"byte_end":14597946,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14597947,"byte_end":14598005,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598006,"byte_end":14598009,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598010,"byte_end":14598058,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598059,"byte_end":14598120,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598121,"byte_end":14598185,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598186,"byte_end":14598222,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598223,"byte_end":14598226,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598227,"byte_end":14598241,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598242,"byte_end":14598245,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598246,"byte_end":14598259,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598260,"byte_end":14598334,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598335,"byte_end":14598340,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598341,"byte_end":14598363,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598364,"byte_end":14598367,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598368,"byte_end":14598422,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598423,"byte_end":14598428,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598429,"byte_end":14598446,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":14598447,"byte_end":14598454,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7121},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599510,"byte_end":14599520,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14598843,"byte_end":14598874,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14598875,"byte_end":14598878,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14598879,"byte_end":14598944,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14598945,"byte_end":14598948,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14598949,"byte_end":14599029,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599030,"byte_end":14599033,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599034,"byte_end":14599046,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599047,"byte_end":14599050,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599051,"byte_end":14599109,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599110,"byte_end":14599113,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599114,"byte_end":14599166,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599167,"byte_end":14599235,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599236,"byte_end":14599272,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599273,"byte_end":14599276,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599277,"byte_end":14599291,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599292,"byte_end":14599295,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599296,"byte_end":14599309,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599310,"byte_end":14599384,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599385,"byte_end":14599390,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599391,"byte_end":14599413,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599414,"byte_end":14599417,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599418,"byte_end":14599464,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599465,"byte_end":14599470,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599471,"byte_end":14599488,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":14599489,"byte_end":14599496,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7140},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600580,"byte_end":14600594,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14599880,"byte_end":14599928,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14599929,"byte_end":14599932,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14599933,"byte_end":14600002,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600003,"byte_end":14600006,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600007,"byte_end":14600095,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600096,"byte_end":14600099,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600100,"byte_end":14600112,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600113,"byte_end":14600116,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600117,"byte_end":14600175,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600176,"byte_end":14600179,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600180,"byte_end":14600232,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600233,"byte_end":14600301,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600302,"byte_end":14600338,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600339,"byte_end":14600342,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600343,"byte_end":14600357,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600358,"byte_end":14600361,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600362,"byte_end":14600375,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600376,"byte_end":14600450,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600451,"byte_end":14600456,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600457,"byte_end":14600479,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600480,"byte_end":14600483,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600484,"byte_end":14600534,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600535,"byte_end":14600540,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600541,"byte_end":14600558,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":14600559,"byte_end":14600566,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7159},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601597,"byte_end":14601608,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14600958,"byte_end":14600977,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14600978,"byte_end":14600981,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14600982,"byte_end":14601048,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601049,"byte_end":14601052,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601053,"byte_end":14601135,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601136,"byte_end":14601139,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601140,"byte_end":14601152,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601153,"byte_end":14601156,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601157,"byte_end":14601215,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601216,"byte_end":14601219,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601220,"byte_end":14601268,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601269,"byte_end":14601332,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601333,"byte_end":14601369,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601370,"byte_end":14601373,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601374,"byte_end":14601388,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601389,"byte_end":14601392,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601393,"byte_end":14601406,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601407,"byte_end":14601481,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601482,"byte_end":14601487,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601488,"byte_end":14601510,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601511,"byte_end":14601514,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601515,"byte_end":14601551,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601552,"byte_end":14601557,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601558,"byte_end":14601575,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":14601576,"byte_end":14601583,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7178},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602812,"byte_end":14602818,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14601964,"byte_end":14602014,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602015,"byte_end":14602018,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602019,"byte_end":14602115,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602116,"byte_end":14602130,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602131,"byte_end":14602134,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602135,"byte_end":14602196,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602197,"byte_end":14602200,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602201,"byte_end":14602273,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602274,"byte_end":14602277,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602278,"byte_end":14602290,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602291,"byte_end":14602294,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602295,"byte_end":14602353,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602354,"byte_end":14602357,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602358,"byte_end":14602419,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602420,"byte_end":14602471,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602472,"byte_end":14602543,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602544,"byte_end":14602580,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602581,"byte_end":14602584,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602585,"byte_end":14602599,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602600,"byte_end":14602603,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602604,"byte_end":14602617,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602618,"byte_end":14602692,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602693,"byte_end":14602698,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602699,"byte_end":14602721,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602722,"byte_end":14602725,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602726,"byte_end":14602766,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602767,"byte_end":14602772,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602773,"byte_end":14602790,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":14602791,"byte_end":14602798,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7198},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604145,"byte_end":14604160,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603320,"byte_end":14603371,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603372,"byte_end":14603375,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603376,"byte_end":14603446,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603447,"byte_end":14603450,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603451,"byte_end":14603541,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603542,"byte_end":14603545,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603546,"byte_end":14603558,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603559,"byte_end":14603562,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603563,"byte_end":14603621,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603622,"byte_end":14603625,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603626,"byte_end":14603687,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603688,"byte_end":14603778,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603779,"byte_end":14603815,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603816,"byte_end":14603819,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603820,"byte_end":14603834,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603835,"byte_end":14603838,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603839,"byte_end":14603852,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603853,"byte_end":14603927,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603928,"byte_end":14603933,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603934,"byte_end":14603956,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603957,"byte_end":14603960,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14603961,"byte_end":14604023,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604024,"byte_end":14604052,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604053,"byte_end":14604099,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604100,"byte_end":14604105,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604106,"byte_end":14604123,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":14604124,"byte_end":14604131,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7216},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605356,"byte_end":14605372,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604437,"byte_end":14604500,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604501,"byte_end":14604504,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604505,"byte_end":14604602,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604603,"byte_end":14604632,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604633,"byte_end":14604636,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604637,"byte_end":14604708,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604709,"byte_end":14604712,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604713,"byte_end":14604747,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604748,"byte_end":14604840,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604841,"byte_end":14604844,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604845,"byte_end":14604857,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604858,"byte_end":14604861,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604862,"byte_end":14604920,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604921,"byte_end":14604924,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604925,"byte_end":14604986,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14604987,"byte_end":14605061,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605062,"byte_end":14605098,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605099,"byte_end":14605102,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605103,"byte_end":14605117,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605118,"byte_end":14605121,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605122,"byte_end":14605135,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605136,"byte_end":14605210,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605211,"byte_end":14605216,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605217,"byte_end":14605239,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605240,"byte_end":14605243,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605244,"byte_end":14605310,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605311,"byte_end":14605316,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605317,"byte_end":14605334,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":14605335,"byte_end":14605342,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7234},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606430,"byte_end":14606435,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605638,"byte_end":14605696,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605697,"byte_end":14605700,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605701,"byte_end":14605798,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605799,"byte_end":14605814,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605815,"byte_end":14605818,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605819,"byte_end":14605879,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605880,"byte_end":14605883,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605884,"byte_end":14605954,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605955,"byte_end":14605958,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605959,"byte_end":14605971,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605972,"byte_end":14605975,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14605976,"byte_end":14606034,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606035,"byte_end":14606038,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606039,"byte_end":14606088,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606089,"byte_end":14606154,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606155,"byte_end":14606191,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606192,"byte_end":14606195,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606196,"byte_end":14606210,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606211,"byte_end":14606214,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606215,"byte_end":14606228,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606229,"byte_end":14606303,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606304,"byte_end":14606309,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606310,"byte_end":14606332,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606333,"byte_end":14606336,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606337,"byte_end":14606384,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606385,"byte_end":14606390,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606391,"byte_end":14606408,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":14606409,"byte_end":14606416,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":7241},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":7242},{"krate":0,"index":7254},{"krate":0,"index":7285},{"krate":0,"index":7328},{"krate":0,"index":7488},{"krate":0,"index":7617},{"krate":0,"index":7618},{"krate":0,"index":7621},{"krate":0,"index":7624},{"krate":0,"index":7627},{"krate":0,"index":7630},{"krate":0,"index":7633},{"krate":0,"index":7636},{"krate":0,"index":7639},{"krate":0,"index":7642},{"krate":0,"index":7645},{"krate":0,"index":7648},{"krate":0,"index":7651}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606771,"byte_end":14606808,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606809,"byte_end":14606812,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606813,"byte_end":14606866,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606867,"byte_end":14606870,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606871,"byte_end":14606959,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14606960,"byte_end":14607042,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607043,"byte_end":14607126,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607127,"byte_end":14607188,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607189,"byte_end":14607192,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607193,"byte_end":14607268,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607269,"byte_end":14607346,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607347,"byte_end":14607425,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607426,"byte_end":14607504,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607505,"byte_end":14607573,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607574,"byte_end":14607653,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607654,"byte_end":14607657,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607658,"byte_end":14607722,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607723,"byte_end":14607726,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607727,"byte_end":14607746,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607747,"byte_end":14607750,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607751,"byte_end":14607830,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607831,"byte_end":14607851,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607852,"byte_end":14607855,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607856,"byte_end":14607923,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607924,"byte_end":14607961,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607962,"byte_end":14607965,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607966,"byte_end":14607973,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14607974,"byte_end":14608004,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608005,"byte_end":14608029,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608030,"byte_end":14608033,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608034,"byte_end":14608079,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608080,"byte_end":14608083,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608084,"byte_end":14608115,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608116,"byte_end":14608168,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608169,"byte_end":14608172,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608173,"byte_end":14608210,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608211,"byte_end":14608262,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608263,"byte_end":14608266,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608267,"byte_end":14608304,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608305,"byte_end":14608356,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608357,"byte_end":14608364,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608365,"byte_end":14608368,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608369,"byte_end":14608415,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608416,"byte_end":14608419,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608420,"byte_end":14608427,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608428,"byte_end":14608461,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608462,"byte_end":14608465,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608466,"byte_end":14608490,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608491,"byte_end":14608532,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608533,"byte_end":14608536,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608537,"byte_end":14608562,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608563,"byte_end":14608589,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608590,"byte_end":14608593,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608594,"byte_end":14608624,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608625,"byte_end":14608628,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608629,"byte_end":14608693,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608694,"byte_end":14608738,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608739,"byte_end":14608816,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608817,"byte_end":14608824,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608825,"byte_end":14608828,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608829,"byte_end":14608867,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608868,"byte_end":14608922,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608923,"byte_end":14608959,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608960,"byte_end":14608990,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14608991,"byte_end":14609036,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609037,"byte_end":14609108,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609109,"byte_end":14609112,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609113,"byte_end":14609174,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609175,"byte_end":14609247,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":14609248,"byte_end":14609314,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8129},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610195,"byte_end":14610204,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":8131}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609702,"byte_end":14609750,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609751,"byte_end":14609754,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609755,"byte_end":14609824,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609825,"byte_end":14609860,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609861,"byte_end":14609864,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609865,"byte_end":14609879,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609880,"byte_end":14609883,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609884,"byte_end":14609891,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609892,"byte_end":14609922,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609923,"byte_end":14609926,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609927,"byte_end":14609964,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609965,"byte_end":14609968,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14609969,"byte_end":14610007,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610008,"byte_end":14610051,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610052,"byte_end":14610057,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610058,"byte_end":14610065,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610066,"byte_end":14610069,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610070,"byte_end":14610122,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610123,"byte_end":14610153,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8140},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611166,"byte_end":14611176,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":8142}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610596,"byte_end":14610650,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610651,"byte_end":14610654,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610655,"byte_end":14610725,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610726,"byte_end":14610761,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610762,"byte_end":14610765,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610766,"byte_end":14610780,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610781,"byte_end":14610784,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610785,"byte_end":14610792,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610793,"byte_end":14610823,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610824,"byte_end":14610827,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610828,"byte_end":14610873,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610874,"byte_end":14610877,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610878,"byte_end":14610918,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610919,"byte_end":14610955,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610956,"byte_end":14610961,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610962,"byte_end":14610969,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610970,"byte_end":14610973,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14610974,"byte_end":14611012,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611013,"byte_end":14611067,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611068,"byte_end":14611098,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7270},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611668,"byte_end":14611675,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611265,"byte_end":14611351,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611356,"byte_end":14611359,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611364,"byte_end":14611378,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611383,"byte_end":14611386,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611391,"byte_end":14611398,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611403,"byte_end":14611433,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611438,"byte_end":14611441,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611446,"byte_end":14611514,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611519,"byte_end":14611541,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611546,"byte_end":14611568,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611573,"byte_end":14611576,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611581,"byte_end":14611644,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611649,"byte_end":14611656,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8166},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612903,"byte_end":14612907,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8168}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612530,"byte_end":14612605,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612606,"byte_end":14612609,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612610,"byte_end":14612674,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612675,"byte_end":14612710,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612711,"byte_end":14612714,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612715,"byte_end":14612753,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612754,"byte_end":14612796,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612797,"byte_end":14612843,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612844,"byte_end":14612874,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7307},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613352,"byte_end":14613359,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612979,"byte_end":14613065,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613070,"byte_end":14613073,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613078,"byte_end":14613092,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613097,"byte_end":14613100,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613105,"byte_end":14613112,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613117,"byte_end":14613147,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613152,"byte_end":14613155,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613160,"byte_end":14613216,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613221,"byte_end":14613237,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613242,"byte_end":14613258,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613263,"byte_end":14613266,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613271,"byte_end":14613328,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613333,"byte_end":14613340,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8172},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615990,"byte_end":14615994,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":8173}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614711,"byte_end":14614733,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614734,"byte_end":14614737,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614738,"byte_end":14614797,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614798,"byte_end":14614801,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614802,"byte_end":14614880,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614881,"byte_end":14614962,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14614963,"byte_end":14615045,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615046,"byte_end":14615073,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615074,"byte_end":14615077,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615078,"byte_end":14615153,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615154,"byte_end":14615219,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615220,"byte_end":14615240,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615241,"byte_end":14615244,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615245,"byte_end":14615281,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615282,"byte_end":14615358,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615359,"byte_end":14615362,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615363,"byte_end":14615422,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615423,"byte_end":14615466,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615467,"byte_end":14615470,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615471,"byte_end":14615485,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615486,"byte_end":14615489,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615490,"byte_end":14615497,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615498,"byte_end":14615522,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615523,"byte_end":14615547,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615548,"byte_end":14615551,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615552,"byte_end":14615598,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615599,"byte_end":14615641,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615642,"byte_end":14615645,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615646,"byte_end":14615677,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615678,"byte_end":14615727,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615728,"byte_end":14615731,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615732,"byte_end":14615769,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615770,"byte_end":14615821,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615822,"byte_end":14615825,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615826,"byte_end":14615863,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615864,"byte_end":14615915,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14615916,"byte_end":14615923,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7379},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616626,"byte_end":14616629,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616044,"byte_end":14616096,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616101,"byte_end":14616104,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616109,"byte_end":14616144,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616149,"byte_end":14616152,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616157,"byte_end":14616171,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616176,"byte_end":14616179,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616184,"byte_end":14616191,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616196,"byte_end":14616226,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616231,"byte_end":14616234,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616239,"byte_end":14616264,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616269,"byte_end":14616276,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616281,"byte_end":14616284,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616289,"byte_end":14616354,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616359,"byte_end":14616362,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616367,"byte_end":14616374,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616379,"byte_end":14616409,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616414,"byte_end":14616417,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616422,"byte_end":14616463,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616468,"byte_end":14616509,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616514,"byte_end":14616558,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616563,"byte_end":14616602,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616607,"byte_end":14616614,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7381},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617152,"byte_end":14617161,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616773,"byte_end":14616816,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616821,"byte_end":14616824,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616829,"byte_end":14616895,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616900,"byte_end":14616903,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616908,"byte_end":14616922,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616927,"byte_end":14616930,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616935,"byte_end":14616942,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616947,"byte_end":14616971,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616976,"byte_end":14616979,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616984,"byte_end":14617014,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617019,"byte_end":14617022,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617027,"byte_end":14617077,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617082,"byte_end":14617128,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617133,"byte_end":14617140,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617751,"byte_end":14617757,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617223,"byte_end":14617283,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617288,"byte_end":14617291,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617296,"byte_end":14617360,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617365,"byte_end":14617432,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617437,"byte_end":14617469,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617474,"byte_end":14617477,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617482,"byte_end":14617544,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617549,"byte_end":14617552,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617557,"byte_end":14617571,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617576,"byte_end":14617579,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617584,"byte_end":14617591,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617596,"byte_end":14617626,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617631,"byte_end":14617634,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617639,"byte_end":14617675,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617680,"byte_end":14617727,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617732,"byte_end":14617739,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618550,"byte_end":14618565,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617822,"byte_end":14617862,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617867,"byte_end":14617870,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617875,"byte_end":14617922,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617927,"byte_end":14617972,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617977,"byte_end":14617980,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14617985,"byte_end":14618053,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618058,"byte_end":14618142,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618147,"byte_end":14618150,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618155,"byte_end":14618169,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618174,"byte_end":14618177,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618182,"byte_end":14618243,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618248,"byte_end":14618251,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618256,"byte_end":14618263,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618268,"byte_end":14618298,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618303,"byte_end":14618306,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618311,"byte_end":14618347,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618352,"byte_end":14618402,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618407,"byte_end":14618414,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618419,"byte_end":14618422,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618427,"byte_end":14618501,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618506,"byte_end":14618538,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7384},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618974,"byte_end":14618985,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618639,"byte_end":14618685,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618690,"byte_end":14618693,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618698,"byte_end":14618734,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618739,"byte_end":14618742,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618747,"byte_end":14618761,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618766,"byte_end":14618769,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618774,"byte_end":14618781,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618786,"byte_end":14618827,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618832,"byte_end":14618835,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618840,"byte_end":14618894,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618899,"byte_end":14618950,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14618955,"byte_end":14618962,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7385},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619685,"byte_end":14619696,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619065,"byte_end":14619139,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619144,"byte_end":14619170,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619175,"byte_end":14619178,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619183,"byte_end":14619247,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619252,"byte_end":14619304,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619309,"byte_end":14619312,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619317,"byte_end":14619392,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619397,"byte_end":14619470,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619475,"byte_end":14619478,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619483,"byte_end":14619517,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619522,"byte_end":14619525,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619530,"byte_end":14619544,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619549,"byte_end":14619552,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619557,"byte_end":14619564,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619569,"byte_end":14619599,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619604,"byte_end":14619607,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619612,"byte_end":14619661,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619666,"byte_end":14619673,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7386},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620112,"byte_end":14620123,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619758,"byte_end":14619822,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619827,"byte_end":14619830,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619835,"byte_end":14619892,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619897,"byte_end":14619900,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619905,"byte_end":14619945,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619950,"byte_end":14619953,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619958,"byte_end":14619972,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619977,"byte_end":14619980,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619985,"byte_end":14619992,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14619997,"byte_end":14620027,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620032,"byte_end":14620035,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620040,"byte_end":14620088,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620093,"byte_end":14620100,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7387},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620744,"byte_end":14620752,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620185,"byte_end":14620229,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620234,"byte_end":14620237,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620242,"byte_end":14620297,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620302,"byte_end":14620305,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620310,"byte_end":14620352,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620357,"byte_end":14620425,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620430,"byte_end":14620515,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620520,"byte_end":14620576,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620581,"byte_end":14620584,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620589,"byte_end":14620603,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620608,"byte_end":14620611,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620616,"byte_end":14620623,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620628,"byte_end":14620658,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620663,"byte_end":14620666,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620671,"byte_end":14620720,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620725,"byte_end":14620732,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7388},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621457,"byte_end":14621463,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620811,"byte_end":14620879,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620884,"byte_end":14620887,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620892,"byte_end":14620956,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620961,"byte_end":14620964,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14620969,"byte_end":14621049,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621054,"byte_end":14621057,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621062,"byte_end":14621076,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621081,"byte_end":14621084,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621089,"byte_end":14621096,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621101,"byte_end":14621131,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621136,"byte_end":14621139,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621144,"byte_end":14621181,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621186,"byte_end":14621226,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621231,"byte_end":14621273,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621278,"byte_end":14621281,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621286,"byte_end":14621334,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621339,"byte_end":14621384,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621389,"byte_end":14621433,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621438,"byte_end":14621445,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7390},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622586,"byte_end":14622595,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621547,"byte_end":14621602,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621607,"byte_end":14621610,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621615,"byte_end":14621708,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621713,"byte_end":14621803,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621808,"byte_end":14621899,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14621904,"byte_end":14621999,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622004,"byte_end":14622023,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622028,"byte_end":14622031,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622036,"byte_end":14622103,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622108,"byte_end":14622154,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622159,"byte_end":14622162,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622167,"byte_end":14622181,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622186,"byte_end":14622189,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622194,"byte_end":14622201,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622206,"byte_end":14622236,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622241,"byte_end":14622244,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622249,"byte_end":14622307,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622312,"byte_end":14622381,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622386,"byte_end":14622451,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622456,"byte_end":14622518,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622523,"byte_end":14622562,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622567,"byte_end":14622574,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7391},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623640,"byte_end":14623649,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622673,"byte_end":14622736,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622741,"byte_end":14622744,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622749,"byte_end":14622843,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622848,"byte_end":14622874,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622879,"byte_end":14622882,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622887,"byte_end":14622939,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622944,"byte_end":14622947,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14622952,"byte_end":14623032,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623037,"byte_end":14623040,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623045,"byte_end":14623059,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623064,"byte_end":14623067,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623072,"byte_end":14623079,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623084,"byte_end":14623108,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623113,"byte_end":14623116,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623121,"byte_end":14623151,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623156,"byte_end":14623159,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623164,"byte_end":14623240,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623245,"byte_end":14623327,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623332,"byte_end":14623412,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623417,"byte_end":14623499,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623504,"byte_end":14623562,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623567,"byte_end":14623616,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623621,"byte_end":14623628,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7392},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624903,"byte_end":14624915,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623719,"byte_end":14623782,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623787,"byte_end":14623790,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623795,"byte_end":14623807,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623812,"byte_end":14623815,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623820,"byte_end":14623882,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623887,"byte_end":14623925,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623930,"byte_end":14623933,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623938,"byte_end":14623978,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14623983,"byte_end":14624061,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624066,"byte_end":14624069,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624074,"byte_end":14624088,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624093,"byte_end":14624096,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624101,"byte_end":14624108,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624113,"byte_end":14624154,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624159,"byte_end":14624162,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624167,"byte_end":14624214,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624219,"byte_end":14624222,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624227,"byte_end":14624302,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624307,"byte_end":14624381,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624386,"byte_end":14624461,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624466,"byte_end":14624541,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624546,"byte_end":14624622,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624627,"byte_end":14624684,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624689,"byte_end":14624747,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624752,"byte_end":14624755,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624760,"byte_end":14624801,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624806,"byte_end":14624879,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14624884,"byte_end":14624891,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7394},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625600,"byte_end":14625611,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625080,"byte_end":14625132,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625137,"byte_end":14625140,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625145,"byte_end":14625195,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625200,"byte_end":14625203,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625208,"byte_end":14625222,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625227,"byte_end":14625230,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625235,"byte_end":14625242,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625247,"byte_end":14625277,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625282,"byte_end":14625285,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625290,"byte_end":14625330,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625335,"byte_end":14625338,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625343,"byte_end":14625381,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625386,"byte_end":14625425,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625430,"byte_end":14625475,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625480,"byte_end":14625526,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625531,"byte_end":14625534,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625539,"byte_end":14625576,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625581,"byte_end":14625588,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7396},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626037,"byte_end":14626046,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625711,"byte_end":14625764,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625769,"byte_end":14625772,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625777,"byte_end":14625827,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625832,"byte_end":14625835,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625840,"byte_end":14625854,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625859,"byte_end":14625862,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625867,"byte_end":14625874,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625879,"byte_end":14625909,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625914,"byte_end":14625917,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625922,"byte_end":14625962,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625967,"byte_end":14625970,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14625975,"byte_end":14626013,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626018,"byte_end":14626025,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7398},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626888,"byte_end":14626897,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626146,"byte_end":14626209,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626214,"byte_end":14626217,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626222,"byte_end":14626274,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626279,"byte_end":14626282,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626287,"byte_end":14626303,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626308,"byte_end":14626311,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626316,"byte_end":14626356,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626361,"byte_end":14626415,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626420,"byte_end":14626508,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626513,"byte_end":14626579,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626584,"byte_end":14626587,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626592,"byte_end":14626672,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626677,"byte_end":14626680,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626685,"byte_end":14626699,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626704,"byte_end":14626707,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626712,"byte_end":14626719,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626724,"byte_end":14626754,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626759,"byte_end":14626762,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626767,"byte_end":14626802,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626807,"byte_end":14626810,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626815,"byte_end":14626864,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626869,"byte_end":14626876,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7399},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627676,"byte_end":14627685,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14626967,"byte_end":14627024,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627029,"byte_end":14627032,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627037,"byte_end":14627058,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627063,"byte_end":14627066,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627071,"byte_end":14627111,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627116,"byte_end":14627159,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627164,"byte_end":14627241,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627246,"byte_end":14627311,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627316,"byte_end":14627319,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627324,"byte_end":14627376,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627381,"byte_end":14627461,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627466,"byte_end":14627469,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627474,"byte_end":14627488,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627493,"byte_end":14627496,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627501,"byte_end":14627508,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627513,"byte_end":14627543,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627548,"byte_end":14627551,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627556,"byte_end":14627591,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627596,"byte_end":14627599,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627604,"byte_end":14627652,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627657,"byte_end":14627664,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7400},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628226,"byte_end":14628230,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627755,"byte_end":14627819,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627824,"byte_end":14627827,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627832,"byte_end":14627909,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627914,"byte_end":14627917,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627922,"byte_end":14627958,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14627963,"byte_end":14628017,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628022,"byte_end":14628025,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628030,"byte_end":14628044,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628049,"byte_end":14628052,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628057,"byte_end":14628064,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628069,"byte_end":14628110,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628115,"byte_end":14628118,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628123,"byte_end":14628202,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628207,"byte_end":14628214,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7402},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628969,"byte_end":14628983,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628333,"byte_end":14628407,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628412,"byte_end":14628415,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628420,"byte_end":14628472,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628477,"byte_end":14628480,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628485,"byte_end":14628521,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628526,"byte_end":14628598,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628603,"byte_end":14628606,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628611,"byte_end":14628625,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628630,"byte_end":14628633,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628638,"byte_end":14628645,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628650,"byte_end":14628691,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628696,"byte_end":14628699,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628704,"byte_end":14628745,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628750,"byte_end":14628828,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628833,"byte_end":14628836,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628841,"byte_end":14628874,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628879,"byte_end":14628945,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14628950,"byte_end":14628957,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7404},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629602,"byte_end":14629616,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629098,"byte_end":14629172,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629177,"byte_end":14629180,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629185,"byte_end":14629237,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629242,"byte_end":14629245,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629250,"byte_end":14629286,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629291,"byte_end":14629363,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629368,"byte_end":14629371,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629376,"byte_end":14629390,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629395,"byte_end":14629398,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629403,"byte_end":14629410,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629415,"byte_end":14629456,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629461,"byte_end":14629464,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629469,"byte_end":14629504,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629509,"byte_end":14629578,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629583,"byte_end":14629590,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7406},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631203,"byte_end":14631213,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629731,"byte_end":14629792,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629797,"byte_end":14629800,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629805,"byte_end":14629873,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629878,"byte_end":14629881,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629886,"byte_end":14629954,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629959,"byte_end":14629991,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14629996,"byte_end":14629999,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630004,"byte_end":14630075,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630080,"byte_end":14630150,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630155,"byte_end":14630226,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630231,"byte_end":14630272,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630277,"byte_end":14630280,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630285,"byte_end":14630362,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630367,"byte_end":14630370,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630375,"byte_end":14630445,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630450,"byte_end":14630522,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630527,"byte_end":14630576,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630581,"byte_end":14630584,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630589,"byte_end":14630627,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630632,"byte_end":14630682,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630687,"byte_end":14630690,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630695,"byte_end":14630709,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630714,"byte_end":14630717,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630722,"byte_end":14630729,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630734,"byte_end":14630758,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630763,"byte_end":14630766,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630771,"byte_end":14630814,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630819,"byte_end":14630822,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630827,"byte_end":14630891,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630896,"byte_end":14630899,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630904,"byte_end":14630964,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14630969,"byte_end":14631047,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631052,"byte_end":14631134,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631139,"byte_end":14631179,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631184,"byte_end":14631191,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7407},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632119,"byte_end":14632123,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631327,"byte_end":14631398,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631403,"byte_end":14631414,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631419,"byte_end":14631422,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631427,"byte_end":14631502,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631507,"byte_end":14631547,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631552,"byte_end":14631555,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631560,"byte_end":14631598,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631603,"byte_end":14631669,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631674,"byte_end":14631677,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631682,"byte_end":14631696,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631701,"byte_end":14631704,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631709,"byte_end":14631716,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631721,"byte_end":14631745,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631750,"byte_end":14631753,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631758,"byte_end":14631796,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631801,"byte_end":14631804,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631809,"byte_end":14631859,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631864,"byte_end":14631943,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14631948,"byte_end":14631999,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632004,"byte_end":14632059,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632064,"byte_end":14632095,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632100,"byte_end":14632107,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7408},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632626,"byte_end":14632633,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632219,"byte_end":14632294,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632299,"byte_end":14632337,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632342,"byte_end":14632345,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632350,"byte_end":14632419,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632424,"byte_end":14632427,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632432,"byte_end":14632446,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632451,"byte_end":14632454,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632459,"byte_end":14632466,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632471,"byte_end":14632501,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632506,"byte_end":14632509,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632514,"byte_end":14632554,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632559,"byte_end":14632562,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632567,"byte_end":14632602,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632607,"byte_end":14632614,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7409},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633399,"byte_end":14633407,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632698,"byte_end":14632744,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632749,"byte_end":14632752,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632757,"byte_end":14632834,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632839,"byte_end":14632860,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632865,"byte_end":14632868,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632873,"byte_end":14632914,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632919,"byte_end":14632922,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632927,"byte_end":14632971,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632976,"byte_end":14632979,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14632984,"byte_end":14632998,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633003,"byte_end":14633006,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633011,"byte_end":14633024,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633029,"byte_end":14633103,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633108,"byte_end":14633113,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633118,"byte_end":14633148,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633153,"byte_end":14633156,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633161,"byte_end":14633203,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633208,"byte_end":14633250,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633255,"byte_end":14633298,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633303,"byte_end":14633308,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633313,"byte_end":14633330,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633335,"byte_end":14633342,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633347,"byte_end":14633381,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7412},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634139,"byte_end":14634155,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633489,"byte_end":14633568,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633573,"byte_end":14633576,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633581,"byte_end":14633630,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633635,"byte_end":14633638,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633643,"byte_end":14633703,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633708,"byte_end":14633711,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633716,"byte_end":14633730,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633735,"byte_end":14633738,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633743,"byte_end":14633756,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633761,"byte_end":14633835,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633840,"byte_end":14633845,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633850,"byte_end":14633880,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633885,"byte_end":14633888,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633893,"byte_end":14633935,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633940,"byte_end":14633990,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14633995,"byte_end":14634038,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634043,"byte_end":14634048,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634053,"byte_end":14634070,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634075,"byte_end":14634082,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634087,"byte_end":14634121,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7415},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634982,"byte_end":14634994,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634245,"byte_end":14634286,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634291,"byte_end":14634294,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634299,"byte_end":14634388,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634393,"byte_end":14634421,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634426,"byte_end":14634429,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634434,"byte_end":14634479,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634484,"byte_end":14634487,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634492,"byte_end":14634544,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634549,"byte_end":14634552,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634557,"byte_end":14634571,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634576,"byte_end":14634579,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634584,"byte_end":14634597,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634602,"byte_end":14634676,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634681,"byte_end":14634686,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634691,"byte_end":14634732,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634737,"byte_end":14634740,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634745,"byte_end":14634798,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634803,"byte_end":14634881,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634886,"byte_end":14634891,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634896,"byte_end":14634913,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634918,"byte_end":14634925,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14634930,"byte_end":14634964,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7418},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635649,"byte_end":14635658,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635075,"byte_end":14635145,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635150,"byte_end":14635153,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635158,"byte_end":14635200,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635205,"byte_end":14635208,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635213,"byte_end":14635259,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635264,"byte_end":14635267,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635272,"byte_end":14635286,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635291,"byte_end":14635294,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635299,"byte_end":14635312,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635317,"byte_end":14635391,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635396,"byte_end":14635401,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635406,"byte_end":14635436,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635441,"byte_end":14635444,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635449,"byte_end":14635499,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635504,"byte_end":14635548,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635553,"byte_end":14635558,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635563,"byte_end":14635580,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635585,"byte_end":14635592,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635597,"byte_end":14635631,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636768,"byte_end":14636776,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635736,"byte_end":14635793,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635798,"byte_end":14635801,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635806,"byte_end":14635882,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635887,"byte_end":14635960,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635965,"byte_end":14635968,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14635973,"byte_end":14636014,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636019,"byte_end":14636022,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636027,"byte_end":14636069,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636074,"byte_end":14636118,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636123,"byte_end":14636167,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636172,"byte_end":14636175,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636180,"byte_end":14636194,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636199,"byte_end":14636202,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636207,"byte_end":14636220,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636225,"byte_end":14636299,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636304,"byte_end":14636309,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636314,"byte_end":14636336,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636341,"byte_end":14636371,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636376,"byte_end":14636406,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636411,"byte_end":14636414,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636419,"byte_end":14636455,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636460,"byte_end":14636505,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636510,"byte_end":14636513,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636518,"byte_end":14636562,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636567,"byte_end":14636592,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636597,"byte_end":14636657,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636662,"byte_end":14636667,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636672,"byte_end":14636677,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636682,"byte_end":14636699,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636704,"byte_end":14636711,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636716,"byte_end":14636750,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7424},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637805,"byte_end":14637811,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636857,"byte_end":14636917,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636922,"byte_end":14636925,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14636930,"byte_end":14637007,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637012,"byte_end":14637092,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637097,"byte_end":14637100,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637105,"byte_end":14637183,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637188,"byte_end":14637235,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637240,"byte_end":14637243,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637248,"byte_end":14637262,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637267,"byte_end":14637270,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637275,"byte_end":14637288,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637293,"byte_end":14637367,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637372,"byte_end":14637377,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637382,"byte_end":14637412,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637417,"byte_end":14637487,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637492,"byte_end":14637497,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637502,"byte_end":14637519,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637524,"byte_end":14637531,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637536,"byte_end":14637539,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637544,"byte_end":14637558,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637563,"byte_end":14637566,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637571,"byte_end":14637650,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637655,"byte_end":14637693,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637698,"byte_end":14637701,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637706,"byte_end":14637748,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637753,"byte_end":14637787,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639069,"byte_end":14639076,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637881,"byte_end":14637961,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637966,"byte_end":14637969,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14637974,"byte_end":14638051,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638056,"byte_end":14638136,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638141,"byte_end":14638144,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638149,"byte_end":14638227,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638232,"byte_end":14638279,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638284,"byte_end":14638287,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638292,"byte_end":14638306,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638311,"byte_end":14638314,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638319,"byte_end":14638332,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638337,"byte_end":14638411,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638416,"byte_end":14638421,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638426,"byte_end":14638456,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638461,"byte_end":14638531,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638536,"byte_end":14638598,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638603,"byte_end":14638608,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638613,"byte_end":14638630,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638635,"byte_end":14638642,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638647,"byte_end":14638650,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638655,"byte_end":14638669,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638674,"byte_end":14638677,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638682,"byte_end":14638761,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638766,"byte_end":14638836,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638841,"byte_end":14638882,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638887,"byte_end":14638890,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638895,"byte_end":14638937,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14638942,"byte_end":14639012,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639017,"byte_end":14639051,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7431},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640403,"byte_end":14640409,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639215,"byte_end":14639292,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639297,"byte_end":14639300,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639305,"byte_end":14639382,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639387,"byte_end":14639467,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639472,"byte_end":14639475,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639480,"byte_end":14639558,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639563,"byte_end":14639610,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639615,"byte_end":14639618,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639623,"byte_end":14639637,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639642,"byte_end":14639645,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639650,"byte_end":14639663,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639668,"byte_end":14639742,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639747,"byte_end":14639752,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639757,"byte_end":14639787,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639792,"byte_end":14639795,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639800,"byte_end":14639868,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639873,"byte_end":14639935,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639940,"byte_end":14639945,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639950,"byte_end":14639967,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639972,"byte_end":14639979,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639984,"byte_end":14639987,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14639992,"byte_end":14640006,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640011,"byte_end":14640014,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640019,"byte_end":14640098,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640103,"byte_end":14640173,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640178,"byte_end":14640218,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640223,"byte_end":14640226,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640231,"byte_end":14640273,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640278,"byte_end":14640346,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640351,"byte_end":14640385,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7435},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640976,"byte_end":14640989,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640547,"byte_end":14640620,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640625,"byte_end":14640640,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640645,"byte_end":14640648,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640653,"byte_end":14640717,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640722,"byte_end":14640758,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640763,"byte_end":14640766,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640771,"byte_end":14640785,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640790,"byte_end":14640793,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640798,"byte_end":14640805,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640810,"byte_end":14640840,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640845,"byte_end":14640848,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640853,"byte_end":14640907,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640912,"byte_end":14640952,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14640957,"byte_end":14640964,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14646959,"byte_end":14646966,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":8447}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14646730,"byte_end":14646792,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14646793,"byte_end":14646796,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14646797,"byte_end":14646876,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7540},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647207,"byte_end":14647210,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647022,"byte_end":14647055,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647060,"byte_end":14647063,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647068,"byte_end":14647082,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647087,"byte_end":14647090,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647095,"byte_end":14647102,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647107,"byte_end":14647140,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647145,"byte_end":14647148,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647153,"byte_end":14647183,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647188,"byte_end":14647195,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7541},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647571,"byte_end":14647578,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647278,"byte_end":14647310,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647315,"byte_end":14647318,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647323,"byte_end":14647353,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647358,"byte_end":14647361,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647366,"byte_end":14647380,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647385,"byte_end":14647388,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647393,"byte_end":14647400,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647405,"byte_end":14647446,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647451,"byte_end":14647454,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647459,"byte_end":14647494,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647499,"byte_end":14647547,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647552,"byte_end":14647559,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7542},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648572,"byte_end":14648576,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647644,"byte_end":14647675,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647680,"byte_end":14647683,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647688,"byte_end":14647744,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647749,"byte_end":14647752,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647757,"byte_end":14647772,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647777,"byte_end":14647780,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647785,"byte_end":14647848,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647853,"byte_end":14647920,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647925,"byte_end":14647986,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647991,"byte_end":14647994,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647999,"byte_end":14648013,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648018,"byte_end":14648021,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648026,"byte_end":14648080,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648085,"byte_end":14648088,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648093,"byte_end":14648100,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648105,"byte_end":14648138,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648143,"byte_end":14648146,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648151,"byte_end":14648192,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648197,"byte_end":14648222,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648227,"byte_end":14648279,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648284,"byte_end":14648291,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648296,"byte_end":14648299,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648304,"byte_end":14648360,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648365,"byte_end":14648368,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648373,"byte_end":14648380,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648385,"byte_end":14648418,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648423,"byte_end":14648426,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648431,"byte_end":14648472,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648477,"byte_end":14648499,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648504,"byte_end":14648548,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648553,"byte_end":14648560,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7544},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649274,"byte_end":14649277,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648665,"byte_end":14648705,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648710,"byte_end":14648713,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648718,"byte_end":14648786,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648791,"byte_end":14648821,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648826,"byte_end":14648829,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648834,"byte_end":14648914,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648919,"byte_end":14648973,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648978,"byte_end":14648981,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14648986,"byte_end":14649000,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649005,"byte_end":14649008,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649013,"byte_end":14649020,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649025,"byte_end":14649066,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649071,"byte_end":14649074,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649079,"byte_end":14649126,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649131,"byte_end":14649134,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649139,"byte_end":14649151,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649156,"byte_end":14649194,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649199,"byte_end":14649211,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649216,"byte_end":14649250,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649255,"byte_end":14649262,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7545},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650307,"byte_end":14650320,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649335,"byte_end":14649381,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649386,"byte_end":14649389,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649394,"byte_end":14649463,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649468,"byte_end":14649484,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649489,"byte_end":14649492,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649497,"byte_end":14649563,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649568,"byte_end":14649637,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649642,"byte_end":14649686,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649691,"byte_end":14649694,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649699,"byte_end":14649759,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649764,"byte_end":14649844,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649849,"byte_end":14649892,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649897,"byte_end":14649900,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649905,"byte_end":14649919,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649924,"byte_end":14649927,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649932,"byte_end":14649939,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649944,"byte_end":14649977,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649982,"byte_end":14649985,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14649990,"byte_end":14650027,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650032,"byte_end":14650069,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650074,"byte_end":14650103,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650108,"byte_end":14650150,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650155,"byte_end":14650194,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650199,"byte_end":14650232,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650237,"byte_end":14650283,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650288,"byte_end":14650295,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7547},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651333,"byte_end":14651346,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650420,"byte_end":14650466,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650471,"byte_end":14650474,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650479,"byte_end":14650550,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650555,"byte_end":14650610,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650615,"byte_end":14650618,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650623,"byte_end":14650695,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650700,"byte_end":14650719,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650724,"byte_end":14650727,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650732,"byte_end":14650792,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650797,"byte_end":14650857,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650862,"byte_end":14650942,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650947,"byte_end":14650950,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650955,"byte_end":14650969,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650974,"byte_end":14650977,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650982,"byte_end":14650989,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14650994,"byte_end":14651035,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651040,"byte_end":14651043,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651048,"byte_end":14651091,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651096,"byte_end":14651099,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651104,"byte_end":14651133,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651138,"byte_end":14651196,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651201,"byte_end":14651204,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651209,"byte_end":14651242,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651247,"byte_end":14651309,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651314,"byte_end":14651321,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651813,"byte_end":14651827,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651454,"byte_end":14651526,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651531,"byte_end":14651534,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651539,"byte_end":14651611,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651616,"byte_end":14651619,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651624,"byte_end":14651638,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651643,"byte_end":14651646,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651651,"byte_end":14651658,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651663,"byte_end":14651696,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651701,"byte_end":14651704,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651709,"byte_end":14651748,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651753,"byte_end":14651789,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651794,"byte_end":14651801,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7550},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652078,"byte_end":14652093,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651895,"byte_end":14651954,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651959,"byte_end":14651962,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14651967,"byte_end":14652031,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652036,"byte_end":14652066,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7654},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":7655},{"krate":0,"index":7658},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7665},{"krate":0,"index":7668},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7675},{"krate":0,"index":7678},{"krate":0,"index":7681},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7688},{"krate":0,"index":7691},{"krate":0,"index":7694},{"krate":0,"index":7697},{"krate":0,"index":7810},{"krate":0,"index":7965}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656222,"byte_end":14656274,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656275,"byte_end":14656278,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656279,"byte_end":14656366,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656367,"byte_end":14656436,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656437,"byte_end":14656440,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656441,"byte_end":14656493,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656494,"byte_end":14656497,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656498,"byte_end":14656516,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656517,"byte_end":14656520,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656521,"byte_end":14656609,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656610,"byte_end":14656679,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656680,"byte_end":14656761,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656762,"byte_end":14656821,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656822,"byte_end":14656911,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656912,"byte_end":14656986,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14656987,"byte_end":14657079,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657080,"byte_end":14657162,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657163,"byte_end":14657245,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657246,"byte_end":14657249,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657250,"byte_end":14657282,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657283,"byte_end":14657321,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657322,"byte_end":14657360,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657361,"byte_end":14657401,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657402,"byte_end":14657448,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657449,"byte_end":14657495,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657496,"byte_end":14657540,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657541,"byte_end":14657581,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657582,"byte_end":14657629,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657630,"byte_end":14657670,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657671,"byte_end":14657674,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657675,"byte_end":14657709,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657710,"byte_end":14657713,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657714,"byte_end":14657804,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657805,"byte_end":14657870,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657871,"byte_end":14657874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657875,"byte_end":14657914,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657915,"byte_end":14657977,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657978,"byte_end":14657981,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657982,"byte_end":14657996,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14657997,"byte_end":14658000,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658001,"byte_end":14658030,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658031,"byte_end":14658034,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658035,"byte_end":14658048,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658049,"byte_end":14658123,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658124,"byte_end":14658129,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658130,"byte_end":14658164,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658165,"byte_end":14658168,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658169,"byte_end":14658227,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658228,"byte_end":14658262,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658263,"byte_end":14658266,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658267,"byte_end":14658277,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658278,"byte_end":14658336,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658337,"byte_end":14658385,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658386,"byte_end":14658391,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658392,"byte_end":14658397,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658398,"byte_end":14658408,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":14658409,"byte_end":14658416,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7746},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660092,"byte_end":14660105,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":7747},{"krate":0,"index":7748}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659514,"byte_end":14659574,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659575,"byte_end":14659578,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659579,"byte_end":14659645,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659646,"byte_end":14659649,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659650,"byte_end":14659741,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659742,"byte_end":14659782,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659783,"byte_end":14659786,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659787,"byte_end":14659801,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659802,"byte_end":14659805,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659806,"byte_end":14659813,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659814,"byte_end":14659888,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659889,"byte_end":14659894,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659895,"byte_end":14659933,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659934,"byte_end":14659937,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14659938,"byte_end":14660011,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660012,"byte_end":14660049,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660050,"byte_end":14660055,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660056,"byte_end":14660073,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660074,"byte_end":14660081,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":7747},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660200,"byte_end":14660204,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":7746},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660112,"byte_end":14660190,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":7748},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660546,"byte_end":14660561,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":7746},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660240,"byte_end":14660306,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660311,"byte_end":14660314,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660319,"byte_end":14660410,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660415,"byte_end":14660440,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660445,"byte_end":14660448,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660453,"byte_end":14660538,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7751},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660778,"byte_end":14660787,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7754},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660820,"byte_end":14660825,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7757},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660846,"byte_end":14660850,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":7749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7749},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660749,"byte_end":14660768,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":7751},{"krate":0,"index":7754},{"krate":0,"index":7757}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660700,"byte_end":14660739,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8469},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668454,"byte_end":14668465,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":8470}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667198,"byte_end":14667249,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667250,"byte_end":14667253,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667254,"byte_end":14667351,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667352,"byte_end":14667440,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667441,"byte_end":14667470,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667471,"byte_end":14667474,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667475,"byte_end":14667531,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667532,"byte_end":14667535,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667536,"byte_end":14667605,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667606,"byte_end":14667609,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667610,"byte_end":14667673,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667674,"byte_end":14667677,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667678,"byte_end":14667704,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667705,"byte_end":14667739,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667740,"byte_end":14667794,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667795,"byte_end":14667883,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667884,"byte_end":14667887,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667888,"byte_end":14667902,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667903,"byte_end":14667906,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667907,"byte_end":14667920,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667921,"byte_end":14667995,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14667996,"byte_end":14668001,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668002,"byte_end":14668024,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668025,"byte_end":14668061,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668062,"byte_end":14668092,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668093,"byte_end":14668096,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668097,"byte_end":14668159,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668160,"byte_end":14668203,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668204,"byte_end":14668207,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668208,"byte_end":14668260,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668261,"byte_end":14668290,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668291,"byte_end":14668346,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668347,"byte_end":14668387,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668388,"byte_end":14668393,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668394,"byte_end":14668399,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668400,"byte_end":14668417,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668418,"byte_end":14668425,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7864},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669287,"byte_end":14669291,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668537,"byte_end":14668614,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668619,"byte_end":14668622,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668627,"byte_end":14668688,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668693,"byte_end":14668696,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668701,"byte_end":14668794,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668799,"byte_end":14668867,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668872,"byte_end":14668875,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668880,"byte_end":14668894,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668899,"byte_end":14668946,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668951,"byte_end":14668954,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668959,"byte_end":14668972,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668977,"byte_end":14669051,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669056,"byte_end":14669061,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669066,"byte_end":14669102,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669107,"byte_end":14669110,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669115,"byte_end":14669174,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669179,"byte_end":14669184,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669189,"byte_end":14669206,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669211,"byte_end":14669218,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669223,"byte_end":14669226,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669231,"byte_end":14669269,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7869},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670457,"byte_end":14670463,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669924,"byte_end":14669979,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669984,"byte_end":14669987,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14669992,"byte_end":14670084,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670089,"byte_end":14670092,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670097,"byte_end":14670112,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670117,"byte_end":14670120,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670125,"byte_end":14670138,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670143,"byte_end":14670217,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670222,"byte_end":14670227,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670232,"byte_end":14670268,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670273,"byte_end":14670276,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670281,"byte_end":14670340,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670345,"byte_end":14670395,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670400,"byte_end":14670405,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670410,"byte_end":14670427,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670432,"byte_end":14670439,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7872},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671627,"byte_end":14671635,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670692,"byte_end":14670737,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670742,"byte_end":14670745,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670750,"byte_end":14670841,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670846,"byte_end":14670938,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670943,"byte_end":14670946,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670951,"byte_end":14670981,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14670986,"byte_end":14671066,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671071,"byte_end":14671074,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671079,"byte_end":14671094,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671099,"byte_end":14671102,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671107,"byte_end":14671120,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671125,"byte_end":14671199,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671204,"byte_end":14671209,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671214,"byte_end":14671250,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671255,"byte_end":14671285,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671290,"byte_end":14671293,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671298,"byte_end":14671357,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671362,"byte_end":14671405,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671410,"byte_end":14671413,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671418,"byte_end":14671470,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671475,"byte_end":14671508,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671513,"byte_end":14671561,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671566,"byte_end":14671571,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671576,"byte_end":14671581,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671586,"byte_end":14671603,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671608,"byte_end":14671615,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7873},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672911,"byte_end":14672924,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"into_incoming","qualname":"<TcpListener>::into_incoming","value":"pub fn into_incoming(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream over the connections being received on this\n listener.","sig":null,"attributes":[{"value":"/ Turn this into a stream over the connections being received on this","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671762,"byte_end":14671833,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ listener.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671838,"byte_end":14671851,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671856,"byte_end":14671859,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The returned stream is infinite and will also not yield","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671864,"byte_end":14671923,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/ the peer's [`SocketAddr`] structure. Iterating over it is equivalent to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14671928,"byte_end":14672003,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ calling [`TcpListener::accept`] in a loop.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672008,"byte_end":14672054,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672059,"byte_end":14672062,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672067,"byte_end":14672082,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672087,"byte_end":14672090,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Merge the incoming connections of multiple sockets into one [`Stream`]:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672095,"byte_end":14672170,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672175,"byte_end":14672178,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672183,"byte_end":14672196,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672201,"byte_end":14672275,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672280,"byte_end":14672285,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672290,"byte_end":14672326,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672331,"byte_end":14672334,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Our server listens on multiple ports for some reason","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672339,"byte_end":14672398,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ let listeners = vec![","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672403,"byte_end":14672428,"line_start":172,"line_end":172,"column_start":5,"column_end":30}},{"value":"/     TcpListener::bind(\"[::0]:8080\").await?,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672433,"byte_end":14672480,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/     TcpListener::bind(\"[::0]:12345\").await?,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672485,"byte_end":14672533,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/     TcpListener::bind(\"[::0]:5678\").await?,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672538,"byte_end":14672585,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/ ];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672590,"byte_end":14672596,"line_start":176,"line_end":176,"column_start":5,"column_end":11}},{"value":"/ // Iterate over all incoming connections","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672601,"byte_end":14672645,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/ let incoming = futures::stream::select_all(","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672650,"byte_end":14672697,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/     listeners.into_iter()","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672702,"byte_end":14672731,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/         .map(TcpListener::into_incoming)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672736,"byte_end":14672780,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/         .map(Box::pin)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672785,"byte_end":14672811,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672816,"byte_end":14672822,"line_start":182,"line_end":182,"column_start":5,"column_end":11}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672827,"byte_end":14672832,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672837,"byte_end":14672854,"line_start":184,"line_end":184,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672859,"byte_end":14672866,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14672871,"byte_end":14672899,"line_start":186,"line_end":186,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7878},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673726,"byte_end":14673736,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673181,"byte_end":14673242,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673247,"byte_end":14673250,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673255,"byte_end":14673350,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673355,"byte_end":14673369,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673374,"byte_end":14673377,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673382,"byte_end":14673396,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673401,"byte_end":14673404,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673409,"byte_end":14673422,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673427,"byte_end":14673501,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673506,"byte_end":14673511,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673516,"byte_end":14673552,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673557,"byte_end":14673560,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673565,"byte_end":14673627,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673632,"byte_end":14673670,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673675,"byte_end":14673680,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673685,"byte_end":14673702,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673707,"byte_end":14673714,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7879},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674376,"byte_end":14674384,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":7881}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673825,"byte_end":14673866,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673867,"byte_end":14673870,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673871,"byte_end":14673969,"line_start":218,"line_end":218,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14673970,"byte_end":14674028,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674029,"byte_end":14674032,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674033,"byte_end":14674093,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674094,"byte_end":14674097,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674098,"byte_end":14674178,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674179,"byte_end":14674236,"line_start":224,"line_end":224,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674237,"byte_end":14674281,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674282,"byte_end":14674364,"line_start":226,"line_end":226,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":8492},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678254,"byte_end":14678263,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":8493}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14676696,"byte_end":14676749,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14676750,"byte_end":14676753,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14676754,"byte_end":14676851,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14676852,"byte_end":14676945,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14676946,"byte_end":14677029,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677030,"byte_end":14677033,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677034,"byte_end":14677130,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677131,"byte_end":14677214,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677215,"byte_end":14677218,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677219,"byte_end":14677280,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677281,"byte_end":14677284,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677285,"byte_end":14677338,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677339,"byte_end":14677393,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677394,"byte_end":14677433,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677434,"byte_end":14677512,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677513,"byte_end":14677593,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677594,"byte_end":14677664,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677665,"byte_end":14677720,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677721,"byte_end":14677805,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677806,"byte_end":14677809,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677810,"byte_end":14677825,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677826,"byte_end":14677829,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677830,"byte_end":14677843,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677844,"byte_end":14677918,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677919,"byte_end":14677924,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677925,"byte_end":14677959,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677960,"byte_end":14677990,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677991,"byte_end":14677994,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14677995,"byte_end":14678060,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678061,"byte_end":14678105,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678106,"byte_end":14678109,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678110,"byte_end":14678144,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678145,"byte_end":14678186,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678187,"byte_end":14678192,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678193,"byte_end":14678210,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678211,"byte_end":14678218,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679028,"byte_end":14679035,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678347,"byte_end":14678411,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678416,"byte_end":14678419,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678424,"byte_end":14678508,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678513,"byte_end":14678598,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678603,"byte_end":14678659,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678664,"byte_end":14678667,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678672,"byte_end":14678714,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678719,"byte_end":14678722,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678727,"byte_end":14678741,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678746,"byte_end":14678749,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678754,"byte_end":14678767,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678772,"byte_end":14678846,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678851,"byte_end":14678856,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678861,"byte_end":14678895,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678900,"byte_end":14678903,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678908,"byte_end":14678966,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678971,"byte_end":14678976,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678981,"byte_end":14678998,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679003,"byte_end":14679010,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7937},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680204,"byte_end":14680214,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679788,"byte_end":14679851,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679856,"byte_end":14679859,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679864,"byte_end":14679879,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679884,"byte_end":14679887,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679892,"byte_end":14679905,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679910,"byte_end":14679984,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679989,"byte_end":14679994,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14679999,"byte_end":14680033,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680038,"byte_end":14680041,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680046,"byte_end":14680107,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680112,"byte_end":14680148,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680153,"byte_end":14680158,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680163,"byte_end":14680180,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680185,"byte_end":14680192,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7938},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680721,"byte_end":14680730,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680305,"byte_end":14680369,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680374,"byte_end":14680377,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680382,"byte_end":14680397,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680402,"byte_end":14680405,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680410,"byte_end":14680423,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680428,"byte_end":14680502,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680507,"byte_end":14680512,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680517,"byte_end":14680551,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680556,"byte_end":14680559,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680564,"byte_end":14680625,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680630,"byte_end":14680665,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680670,"byte_end":14680675,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680680,"byte_end":14680697,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680702,"byte_end":14680709,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7939},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681385,"byte_end":14681388,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680820,"byte_end":14680878,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680883,"byte_end":14680886,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680891,"byte_end":14680951,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680956,"byte_end":14680959,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14680964,"byte_end":14680996,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681001,"byte_end":14681004,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681009,"byte_end":14681023,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681028,"byte_end":14681031,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681036,"byte_end":14681049,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681054,"byte_end":14681128,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681133,"byte_end":14681138,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681143,"byte_end":14681177,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681182,"byte_end":14681185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681190,"byte_end":14681251,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681256,"byte_end":14681259,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681264,"byte_end":14681289,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681294,"byte_end":14681329,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681334,"byte_end":14681339,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681344,"byte_end":14681361,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681366,"byte_end":14681373,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7940},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682027,"byte_end":14682034,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681465,"byte_end":14681523,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681528,"byte_end":14681531,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681536,"byte_end":14681612,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681617,"byte_end":14681638,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681643,"byte_end":14681646,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681651,"byte_end":14681665,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681670,"byte_end":14681673,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681678,"byte_end":14681691,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681696,"byte_end":14681770,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681775,"byte_end":14681780,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681785,"byte_end":14681819,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681824,"byte_end":14681827,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681832,"byte_end":14681893,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681898,"byte_end":14681901,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681906,"byte_end":14681931,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681936,"byte_end":14681971,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681976,"byte_end":14681981,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14681986,"byte_end":14682003,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682008,"byte_end":14682015,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7941},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682885,"byte_end":14682889,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682127,"byte_end":14682216,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682221,"byte_end":14682259,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682264,"byte_end":14682267,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682272,"byte_end":14682323,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682328,"byte_end":14682331,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682336,"byte_end":14682431,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682436,"byte_end":14682477,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682482,"byte_end":14682485,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682490,"byte_end":14682504,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682509,"byte_end":14682512,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682517,"byte_end":14682530,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682535,"byte_end":14682609,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682614,"byte_end":14682619,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682624,"byte_end":14682658,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682663,"byte_end":14682666,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682671,"byte_end":14682732,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682737,"byte_end":14682740,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682745,"byte_end":14682777,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682782,"byte_end":14682823,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682828,"byte_end":14682833,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682838,"byte_end":14682855,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682860,"byte_end":14682867,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7944},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683575,"byte_end":14683582,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14682984,"byte_end":14683046,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683051,"byte_end":14683054,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683059,"byte_end":14683123,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683128,"byte_end":14683131,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683136,"byte_end":14683176,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683181,"byte_end":14683184,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683189,"byte_end":14683203,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683208,"byte_end":14683211,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683216,"byte_end":14683229,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683234,"byte_end":14683308,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683313,"byte_end":14683318,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683323,"byte_end":14683357,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683362,"byte_end":14683365,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683370,"byte_end":14683431,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683436,"byte_end":14683439,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683444,"byte_end":14683474,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683479,"byte_end":14683519,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683524,"byte_end":14683529,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683534,"byte_end":14683551,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683556,"byte_end":14683563,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7945},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684466,"byte_end":14684477,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683664,"byte_end":14683726,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683731,"byte_end":14683734,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683739,"byte_end":14683808,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683813,"byte_end":14683886,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683891,"byte_end":14683964,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14683969,"byte_end":14684044,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684049,"byte_end":14684067,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684072,"byte_end":14684075,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684080,"byte_end":14684094,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684099,"byte_end":14684102,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684107,"byte_end":14684120,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684125,"byte_end":14684199,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684204,"byte_end":14684209,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684214,"byte_end":14684248,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684253,"byte_end":14684256,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684261,"byte_end":14684322,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684327,"byte_end":14684330,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684335,"byte_end":14684365,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684370,"byte_end":14684410,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684415,"byte_end":14684420,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684425,"byte_end":14684442,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684447,"byte_end":14684454,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7946},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685314,"byte_end":14685322,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684583,"byte_end":14684649,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684654,"byte_end":14684657,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684662,"byte_end":14684751,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684756,"byte_end":14684838,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684843,"byte_end":14684846,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684851,"byte_end":14684921,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684926,"byte_end":14684929,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684934,"byte_end":14684948,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684953,"byte_end":14684956,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684961,"byte_end":14684974,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14684979,"byte_end":14685053,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685058,"byte_end":14685063,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685068,"byte_end":14685095,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685100,"byte_end":14685103,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685108,"byte_end":14685142,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685147,"byte_end":14685150,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685155,"byte_end":14685216,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685221,"byte_end":14685258,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685263,"byte_end":14685268,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685273,"byte_end":14685290,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685295,"byte_end":14685302,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691188,"byte_end":14691197,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":8518}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14689934,"byte_end":14689951,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14689952,"byte_end":14689955,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14689956,"byte_end":14690053,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690054,"byte_end":14690099,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690100,"byte_end":14690103,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690104,"byte_end":14690203,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690204,"byte_end":14690297,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690298,"byte_end":14690301,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690302,"byte_end":14690363,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690364,"byte_end":14690367,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690368,"byte_end":14690394,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690395,"byte_end":14690433,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690434,"byte_end":14690464,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690465,"byte_end":14690509,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690510,"byte_end":14690550,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690551,"byte_end":14690613,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690614,"byte_end":14690668,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690669,"byte_end":14690753,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690754,"byte_end":14690757,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690758,"byte_end":14690773,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690774,"byte_end":14690777,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690778,"byte_end":14690791,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690792,"byte_end":14690866,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690867,"byte_end":14690872,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690873,"byte_end":14690907,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690908,"byte_end":14690911,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690912,"byte_end":14690970,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14690971,"byte_end":14691005,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691006,"byte_end":14691009,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691010,"byte_end":14691020,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691021,"byte_end":14691079,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691080,"byte_end":14691128,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691129,"byte_end":14691134,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691135,"byte_end":14691140,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691141,"byte_end":14691151,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691152,"byte_end":14691159,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7989},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691852,"byte_end":14691856,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691265,"byte_end":14691313,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691318,"byte_end":14691321,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691326,"byte_end":14691421,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691426,"byte_end":14691490,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691495,"byte_end":14691498,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691503,"byte_end":14691541,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691546,"byte_end":14691549,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691554,"byte_end":14691568,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691573,"byte_end":14691576,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691581,"byte_end":14691594,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691599,"byte_end":14691673,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691678,"byte_end":14691683,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691688,"byte_end":14691722,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691727,"byte_end":14691730,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691735,"byte_end":14691790,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691795,"byte_end":14691800,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691805,"byte_end":14691822,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691827,"byte_end":14691834,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7994},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693135,"byte_end":14693144,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692479,"byte_end":14692543,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692548,"byte_end":14692551,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692556,"byte_end":14692644,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692649,"byte_end":14692672,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692677,"byte_end":14692680,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692685,"byte_end":14692699,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692704,"byte_end":14692707,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692712,"byte_end":14692725,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692730,"byte_end":14692804,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692809,"byte_end":14692814,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692819,"byte_end":14692853,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692858,"byte_end":14692861,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692866,"byte_end":14692922,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692927,"byte_end":14692983,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14692988,"byte_end":14693038,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693043,"byte_end":14693079,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693084,"byte_end":14693089,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693094,"byte_end":14693111,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693116,"byte_end":14693123,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693860,"byte_end":14693870,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693328,"byte_end":14693389,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693394,"byte_end":14693397,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693402,"byte_end":14693490,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693495,"byte_end":14693514,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693519,"byte_end":14693522,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693527,"byte_end":14693541,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693546,"byte_end":14693549,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693554,"byte_end":14693567,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693572,"byte_end":14693646,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693651,"byte_end":14693656,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693661,"byte_end":14693695,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693700,"byte_end":14693703,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693708,"byte_end":14693763,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693768,"byte_end":14693804,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693809,"byte_end":14693814,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693819,"byte_end":14693836,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14693841,"byte_end":14693848,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7998},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694914,"byte_end":14694921,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694056,"byte_end":14694106,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694111,"byte_end":14694114,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694119,"byte_end":14694171,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694176,"byte_end":14694179,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694184,"byte_end":14694198,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694203,"byte_end":14694206,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694211,"byte_end":14694224,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694229,"byte_end":14694303,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694308,"byte_end":14694313,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694318,"byte_end":14694352,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694357,"byte_end":14694360,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694365,"byte_end":14694409,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694414,"byte_end":14694455,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694460,"byte_end":14694502,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694507,"byte_end":14694547,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694552,"byte_end":14694602,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694607,"byte_end":14694613,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694618,"byte_end":14694621,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694626,"byte_end":14694681,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694686,"byte_end":14694689,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694694,"byte_end":14694726,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694731,"byte_end":14694799,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694804,"byte_end":14694852,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694857,"byte_end":14694862,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694867,"byte_end":14694884,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14694889,"byte_end":14694896,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8003},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696036,"byte_end":14696045,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695454,"byte_end":14695488,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695493,"byte_end":14695496,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695501,"byte_end":14695565,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695570,"byte_end":14695573,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695578,"byte_end":14695592,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695597,"byte_end":14695600,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695605,"byte_end":14695618,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695623,"byte_end":14695697,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695702,"byte_end":14695707,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695712,"byte_end":14695746,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695751,"byte_end":14695754,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695759,"byte_end":14695814,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695819,"byte_end":14695822,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695827,"byte_end":14695859,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695864,"byte_end":14695918,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695923,"byte_end":14695974,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695979,"byte_end":14695984,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14695989,"byte_end":14696006,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696011,"byte_end":14696018,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8006},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696773,"byte_end":14696782,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696159,"byte_end":14696224,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696229,"byte_end":14696232,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696237,"byte_end":14696303,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696308,"byte_end":14696311,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696316,"byte_end":14696330,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696335,"byte_end":14696338,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696343,"byte_end":14696356,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696361,"byte_end":14696435,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696440,"byte_end":14696445,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696450,"byte_end":14696484,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696489,"byte_end":14696492,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696497,"byte_end":14696552,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696557,"byte_end":14696560,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696565,"byte_end":14696597,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696602,"byte_end":14696656,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696661,"byte_end":14696710,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696715,"byte_end":14696720,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696725,"byte_end":14696743,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696748,"byte_end":14696755,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8009},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697674,"byte_end":14697681,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696896,"byte_end":14696944,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696949,"byte_end":14696952,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14696957,"byte_end":14697049,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697054,"byte_end":14697148,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697153,"byte_end":14697203,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697208,"byte_end":14697211,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697216,"byte_end":14697242,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697247,"byte_end":14697273,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697278,"byte_end":14697314,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697319,"byte_end":14697322,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697327,"byte_end":14697341,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697346,"byte_end":14697349,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697354,"byte_end":14697367,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697372,"byte_end":14697446,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697451,"byte_end":14697456,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697461,"byte_end":14697495,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697500,"byte_end":14697503,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697508,"byte_end":14697563,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697568,"byte_end":14697612,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697617,"byte_end":14697622,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697627,"byte_end":14697644,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14697649,"byte_end":14697656,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8015},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699120,"byte_end":14699124,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698384,"byte_end":14698460,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698465,"byte_end":14698468,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698473,"byte_end":14698545,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698550,"byte_end":14698607,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698612,"byte_end":14698615,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698620,"byte_end":14698652,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698657,"byte_end":14698660,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698665,"byte_end":14698679,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698684,"byte_end":14698687,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698692,"byte_end":14698705,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698710,"byte_end":14698784,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698789,"byte_end":14698794,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698799,"byte_end":14698833,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698838,"byte_end":14698841,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698846,"byte_end":14698905,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698910,"byte_end":14698954,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14698959,"byte_end":14699008,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699013,"byte_end":14699016,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699021,"byte_end":14699058,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699063,"byte_end":14699068,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699073,"byte_end":14699090,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699095,"byte_end":14699102,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8018},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699804,"byte_end":14699808,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699215,"byte_end":14699249,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699254,"byte_end":14699257,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699262,"byte_end":14699311,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699316,"byte_end":14699319,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699324,"byte_end":14699338,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699343,"byte_end":14699346,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699351,"byte_end":14699364,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699369,"byte_end":14699443,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699448,"byte_end":14699453,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699458,"byte_end":14699492,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699497,"byte_end":14699500,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699505,"byte_end":14699560,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699565,"byte_end":14699609,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699614,"byte_end":14699617,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699622,"byte_end":14699654,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699659,"byte_end":14699700,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699705,"byte_end":14699742,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699747,"byte_end":14699752,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699757,"byte_end":14699774,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699779,"byte_end":14699786,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8021},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700527,"byte_end":14700531,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699903,"byte_end":14699972,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699977,"byte_end":14699980,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14699985,"byte_end":14700036,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700041,"byte_end":14700044,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700049,"byte_end":14700063,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700068,"byte_end":14700071,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700076,"byte_end":14700089,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700094,"byte_end":14700168,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700173,"byte_end":14700178,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700183,"byte_end":14700217,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700222,"byte_end":14700225,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700230,"byte_end":14700285,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700290,"byte_end":14700334,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700339,"byte_end":14700342,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700347,"byte_end":14700379,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700384,"byte_end":14700425,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700430,"byte_end":14700465,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700470,"byte_end":14700475,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700480,"byte_end":14700497,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700502,"byte_end":14700509,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8024},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700838,"byte_end":14700847,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700626,"byte_end":14700690,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700695,"byte_end":14700698,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700703,"byte_end":14700769,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700774,"byte_end":14700777,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700782,"byte_end":14700826,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8025},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701100,"byte_end":14701113,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14700931,"byte_end":14700995,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701000,"byte_end":14701003,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701008,"byte_end":14701088,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":8026},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701452,"byte_end":14701469,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701211,"byte_end":14701280,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701285,"byte_end":14701288,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701293,"byte_end":14701367,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701372,"byte_end":14701375,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701380,"byte_end":14701440,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8027},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701814,"byte_end":14701835,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701561,"byte_end":14701630,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701635,"byte_end":14701638,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701643,"byte_end":14701717,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701722,"byte_end":14701725,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701730,"byte_end":14701740,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701745,"byte_end":14701748,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701753,"byte_end":14701802,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8028},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702178,"byte_end":14702194,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14701941,"byte_end":14702009,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702014,"byte_end":14702017,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702022,"byte_end":14702095,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702100,"byte_end":14702103,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702108,"byte_end":14702166,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8029},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702678,"byte_end":14702698,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702284,"byte_end":14702352,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702357,"byte_end":14702360,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702365,"byte_end":14702460,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702465,"byte_end":14702551,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702556,"byte_end":14702581,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702586,"byte_end":14702589,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702594,"byte_end":14702604,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702609,"byte_end":14702612,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702617,"byte_end":14702666,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8030},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703047,"byte_end":14703064,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702804,"byte_end":14702875,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702880,"byte_end":14702883,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702888,"byte_end":14702962,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702967,"byte_end":14702970,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14702975,"byte_end":14703035,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8031},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703413,"byte_end":14703434,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703156,"byte_end":14703227,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703232,"byte_end":14703235,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703240,"byte_end":14703316,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703321,"byte_end":14703324,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703329,"byte_end":14703339,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703344,"byte_end":14703347,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703352,"byte_end":14703401,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8032},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703728,"byte_end":14703731,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703540,"byte_end":14703598,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703603,"byte_end":14703606,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703611,"byte_end":14703671,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703676,"byte_end":14703679,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703684,"byte_end":14703716,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8033},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703993,"byte_end":14704000,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703808,"byte_end":14703866,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703871,"byte_end":14703874,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703879,"byte_end":14703955,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14703960,"byte_end":14703981,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8034},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705017,"byte_end":14705034,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704093,"byte_end":14704151,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704156,"byte_end":14704159,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704164,"byte_end":14704256,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704261,"byte_end":14704356,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704361,"byte_end":14704446,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704451,"byte_end":14704501,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704506,"byte_end":14704509,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704514,"byte_end":14704528,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704533,"byte_end":14704536,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704541,"byte_end":14704554,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704559,"byte_end":14704633,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704638,"byte_end":14704643,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704648,"byte_end":14704675,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704680,"byte_end":14704683,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704688,"byte_end":14704722,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704727,"byte_end":14704730,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704735,"byte_end":14704781,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704786,"byte_end":14704836,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704841,"byte_end":14704844,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704849,"byte_end":14704904,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704909,"byte_end":14704961,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704966,"byte_end":14704971,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704976,"byte_end":14704993,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14704998,"byte_end":14705005,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8035},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706097,"byte_end":14706114,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705214,"byte_end":14705274,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705279,"byte_end":14705282,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705287,"byte_end":14705379,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705384,"byte_end":14705478,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705483,"byte_end":14705516,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705521,"byte_end":14705524,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705529,"byte_end":14705543,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705548,"byte_end":14705551,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705556,"byte_end":14705569,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705574,"byte_end":14705648,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705653,"byte_end":14705658,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705663,"byte_end":14705704,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705709,"byte_end":14705712,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705717,"byte_end":14705751,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705756,"byte_end":14705759,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705764,"byte_end":14705851,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705856,"byte_end":14705924,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705929,"byte_end":14705983,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705988,"byte_end":14705991,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14705996,"byte_end":14706041,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706046,"byte_end":14706051,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706056,"byte_end":14706073,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706078,"byte_end":14706085,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8036},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706507,"byte_end":14706525,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706288,"byte_end":14706347,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706352,"byte_end":14706355,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706360,"byte_end":14706430,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706435,"byte_end":14706438,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706443,"byte_end":14706495,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8037},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706927,"byte_end":14706945,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706706,"byte_end":14706767,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706772,"byte_end":14706775,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706780,"byte_end":14706850,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706855,"byte_end":14706858,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14706863,"byte_end":14706915,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":8540},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","parent":null,"children":[{"krate":0,"index":8541}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"/ Types that pin data to its location in memory.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":14712753,"byte_end":14712803,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":14712804,"byte_end":14712807,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":14712808,"byte_end":14712898,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":8544},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8548},{"krate":0,"index":8551},{"krate":0,"index":8554},{"krate":0,"index":8557},{"krate":0,"index":8560},{"krate":0,"index":8563},{"krate":0,"index":8566},{"krate":0,"index":8569},{"krate":0,"index":8570},{"krate":0,"index":8573},{"krate":0,"index":8576}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"std\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11272,"byte_end":11328,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ A module for working with processes.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14712939,"byte_end":14712979,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14712980,"byte_end":14712983,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14712984,"byte_end":14713083,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ provides abort and exit for terminating the current process.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713084,"byte_end":14713148,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713149,"byte_end":14713152,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::process`].","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713153,"byte_end":14713202,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713203,"byte_end":14713206,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":14713207,"byte_end":14713277,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068217,"byte_end":14068225,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070124,"byte_end":14070131,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14075488,"byte_end":14075505,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077751,"byte_end":14077761,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078834,"byte_end":14078844,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078993,"byte_end":14079003,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082205,"byte_end":14082209,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082819,"byte_end":14082823,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083377,"byte_end":14083383,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083794,"byte_end":14083800,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084390,"byte_end":14084398,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088278,"byte_end":14088289,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088433,"byte_end":14088444,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088609,"byte_end":14088620,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088988,"byte_end":14088997,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":14090849,"byte_end":14090866,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":14092279,"byte_end":14092296,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242617,"byte_end":14242628,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242808,"byte_end":14242819,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":14243848,"byte_end":14243861,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":14244048,"byte_end":14244061,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":14245326,"byte_end":14245330,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":14245584,"byte_end":14245588,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":14246581,"byte_end":14246588,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":14246848,"byte_end":14246855,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":14248327,"byte_end":14248331,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":14248565,"byte_end":14248569,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":14249747,"byte_end":14249754,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":14249997,"byte_end":14250004,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14242231,"byte_end":14242232,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251934,"byte_end":14251941,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252834,"byte_end":14252840,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252870,"byte_end":14252876,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932648,"byte_end":13932661,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932888,"byte_end":13932901,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933537,"byte_end":13933549,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933576,"byte_end":13933588,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254527,"byte_end":14254528,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":14255341,"byte_end":14255350,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":14256603,"byte_end":14256612,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14003956,"byte_end":14003965,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14004172,"byte_end":14004181,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14004221,"byte_end":14004230,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005311,"byte_end":14005320,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005527,"byte_end":14005536,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005576,"byte_end":14005585,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":14006955,"byte_end":14006960,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":14007178,"byte_end":14007183,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":14008221,"byte_end":14008227,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":14008339,"byte_end":14008345,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":14009296,"byte_end":14009305,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":14009534,"byte_end":14009543,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":14011842,"byte_end":14011848,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":14011960,"byte_end":14011966,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":14012623,"byte_end":14012628,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":14012813,"byte_end":14012818,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":14013511,"byte_end":14013520,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":14013627,"byte_end":14013636,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":14014652,"byte_end":14014660,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":14014874,"byte_end":14014882,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":14016151,"byte_end":14016157,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":14016322,"byte_end":14016328,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":14017125,"byte_end":14017134,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":14017253,"byte_end":14017262,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018101,"byte_end":14018111,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018245,"byte_end":14018255,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018296,"byte_end":14018306,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019100,"byte_end":14019113,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019247,"byte_end":14019260,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019304,"byte_end":14019317,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":14020230,"byte_end":14020240,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":14020433,"byte_end":14020443,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":14021403,"byte_end":14021416,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":14021565,"byte_end":14021578,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":14022609,"byte_end":14022613,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":14022768,"byte_end":14022772,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":14023795,"byte_end":14023803,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":14024011,"byte_end":14024019,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":14025028,"byte_end":14025036,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":14025244,"byte_end":14025252,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":14026220,"byte_end":14026227,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":14026376,"byte_end":14026383,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":14027103,"byte_end":14027113,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":14027229,"byte_end":14027239,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":14028357,"byte_end":14028365,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":14028573,"byte_end":14028581,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":14029600,"byte_end":14029608,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":14029816,"byte_end":14029824,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":14030557,"byte_end":14030560,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":14030712,"byte_end":14030715,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":14031400,"byte_end":14031409,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":14031524,"byte_end":14031533,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":14032705,"byte_end":14032716,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":14032903,"byte_end":14032914,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":14034136,"byte_end":14034150,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":14034335,"byte_end":14034349,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":14035755,"byte_end":14035764,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":14035879,"byte_end":14035888,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":14037057,"byte_end":14037068,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":14037255,"byte_end":14037266,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":14038514,"byte_end":14038528,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":14038713,"byte_end":14038727,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":14040296,"byte_end":14040304,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":14040518,"byte_end":14040526,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":14041582,"byte_end":14041592,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042039,"byte_end":14042048,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042072,"byte_end":14042081,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042211,"byte_end":14042220,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":14043433,"byte_end":14043449,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":14043678,"byte_end":14043694,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046077,"byte_end":14046091,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046121,"byte_end":14046135,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046338,"byte_end":14046352,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":14047550,"byte_end":14047554,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":14047759,"byte_end":14047763,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":14048748,"byte_end":14048752,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":14048866,"byte_end":14048870,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":14049990,"byte_end":14049999,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":14050181,"byte_end":14050190,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":14051533,"byte_end":14051539,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":14051740,"byte_end":14051746,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":14052949,"byte_end":14052953,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":14053124,"byte_end":14053128,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":14054173,"byte_end":14054182,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":14054347,"byte_end":14054356,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055210,"byte_end":14055223,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055259,"byte_end":14055272,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055484,"byte_end":14055497,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056527,"byte_end":14056543,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056573,"byte_end":14056589,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056724,"byte_end":14056740,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058002,"byte_end":14058005,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058245,"byte_end":14058248,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058450,"byte_end":14058453,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":14287076,"byte_end":14287087,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":14287198,"byte_end":14287209,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":14288426,"byte_end":14288431,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":14288614,"byte_end":14288619,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14290248,"byte_end":14290255,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14290458,"byte_end":14290465,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14291310,"byte_end":14291317,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":14292317,"byte_end":14292324,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":14292579,"byte_end":14292586,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":14293828,"byte_end":14293843,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":14294051,"byte_end":14294066,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14295312,"byte_end":14295319,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14295504,"byte_end":14295511,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296433,"byte_end":14296445,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296472,"byte_end":14296484,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":14297368,"byte_end":14297376,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":14297629,"byte_end":14297637,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":14298829,"byte_end":14298834,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":14299040,"byte_end":14299045,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":14299833,"byte_end":14299844,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":14300114,"byte_end":14300125,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3181},{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14003602,"byte_end":14003603,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059991,"byte_end":14059996,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060497,"byte_end":14060503,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061432,"byte_end":14061438,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062792,"byte_end":14062800,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14063055,"byte_end":14063063,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14064107,"byte_end":14064111,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14064336,"byte_end":14064340,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065280,"byte_end":14065286,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065855,"byte_end":14065865,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14067057,"byte_end":14067067,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":14308149,"byte_end":14308163,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308617,"byte_end":14308630,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308769,"byte_end":14308782,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309639,"byte_end":14309650,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309791,"byte_end":14309802,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309843,"byte_end":14309854,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3335},{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":14310779,"byte_end":14310790,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":14310990,"byte_end":14311001,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3366},{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":14312020,"byte_end":14312034,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":14312240,"byte_end":14312254,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325721,"byte_end":14325729,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326949,"byte_end":14326950,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328110,"byte_end":14328117,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328285,"byte_end":14328292,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328439,"byte_end":14328446,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328482,"byte_end":14328489,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14332641,"byte_end":14332651,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":14363556,"byte_end":14363561,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":14365483,"byte_end":14365497,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4502},{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":14366956,"byte_end":14366971,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":14368171,"byte_end":14368176,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4572},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14361925,"byte_end":14361926,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380953,"byte_end":14380958,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4640},{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382773,"byte_end":14382778,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384937,"byte_end":14384942,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14385184,"byte_end":14385189,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4685},{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14386334,"byte_end":14386339,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4690},{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":14388040,"byte_end":14388050,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":14388625,"byte_end":14388640,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4753},{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14389562,"byte_end":14389577,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14390727,"byte_end":14390732,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":14392049,"byte_end":14392067,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":14393421,"byte_end":14393439,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394259,"byte_end":14394263,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397935,"byte_end":14397939,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4905}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14398857,"byte_end":14398861,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4910},{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14379343,"byte_end":14379344,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":14401750,"byte_end":14401760,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5001},{"krate":0,"index":5002}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14401414,"byte_end":14401415,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":14407551,"byte_end":14407562,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5044},{"krate":0,"index":5045}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":14408074,"byte_end":14408085,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5074},{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":14408650,"byte_end":14408664,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":14409635,"byte_end":14409649,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5139},{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":14411134,"byte_end":14411153,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5172},{"krate":0,"index":5173}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14407252,"byte_end":14407253,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14411620,"byte_end":14411626,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14411879,"byte_end":14411891,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14412178,"byte_end":14412190,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14412321,"byte_end":14412333,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414314,"byte_end":14414323,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5288},{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415551,"byte_end":14415560,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14418300,"byte_end":14418309,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5300},{"krate":0,"index":5301}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14419763,"byte_end":14419772,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5305},{"krate":0,"index":5307}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14420694,"byte_end":14420703,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5310}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14421041,"byte_end":14421050,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427880,"byte_end":14427889,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5363},{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14433721,"byte_end":14433730,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14434628,"byte_end":14434637,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14434883,"byte_end":14434892,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5375}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439688,"byte_end":14439698,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441761,"byte_end":14441767,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445068,"byte_end":14445074,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5469}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445340,"byte_end":14445346,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445862,"byte_end":14445868,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14446218,"byte_end":14446224,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14446983,"byte_end":14446989,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14447513,"byte_end":14447519,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448797,"byte_end":14448802,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5519}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448921,"byte_end":14448926,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14449130,"byte_end":14449135,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5523},{"krate":0,"index":5525}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450320,"byte_end":14450326,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5551}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450445,"byte_end":14450451,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5553}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451436,"byte_end":14451440,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451559,"byte_end":14451563,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14453311,"byte_end":14453318,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5684},{"krate":0,"index":5685}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14456309,"byte_end":14456315,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5718},{"krate":0,"index":5720},{"krate":0,"index":5722}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14459796,"byte_end":14459802,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5862}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462654,"byte_end":14462659,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14464675,"byte_end":14464680,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14466818,"byte_end":14466823,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5901}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14470154,"byte_end":14470160,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5820},{"krate":0,"index":5822},{"krate":0,"index":5824}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14473641,"byte_end":14473647,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5939}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482923,"byte_end":14482935,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6042},{"krate":0,"index":6045},{"krate":0,"index":6049},{"krate":0,"index":6052}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490287,"byte_end":14490299,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6054}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490735,"byte_end":14490747,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491040,"byte_end":14491052,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6058}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491151,"byte_end":14491163,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6060}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491437,"byte_end":14491449,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493154,"byte_end":14493166,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6127},{"krate":0,"index":6130},{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496201,"byte_end":14496213,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497248,"byte_end":14497256,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6138},{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497593,"byte_end":14497601,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497768,"byte_end":14497780,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498073,"byte_end":14498085,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6147}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498184,"byte_end":14498196,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498380,"byte_end":14498392,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6151}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499617,"byte_end":14499627,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6208},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6215}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502839,"byte_end":14502849,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14503293,"byte_end":14503303,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14504325,"byte_end":14504335,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6229}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14504767,"byte_end":14504777,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505095,"byte_end":14505105,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6233}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505204,"byte_end":14505214,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6235}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505390,"byte_end":14505400,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6237}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14505891,"byte_end":14505908,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507071,"byte_end":14507078,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507103,"byte_end":14507110,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507132,"byte_end":14507139,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6350}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507206,"byte_end":14507213,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6352},{"krate":0,"index":6353},{"krate":0,"index":6358},{"krate":0,"index":6361},{"krate":0,"index":6367},{"krate":0,"index":6372},{"krate":0,"index":6378},{"krate":0,"index":6379}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515987,"byte_end":14515994,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14516786,"byte_end":14516797,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6393},{"krate":0,"index":6394}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14517705,"byte_end":14517716,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14519358,"byte_end":14519366,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6441},{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14523524,"byte_end":14523528,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14524094,"byte_end":14524098,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6455},{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14524252,"byte_end":14524256,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532559,"byte_end":14532569,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14535148,"byte_end":14535158,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8063}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535793,"byte_end":14535801,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6704},{"krate":0,"index":6708}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539764,"byte_end":14539772,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539925,"byte_end":14539933,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6712}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14540088,"byte_end":14540096,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8068}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542112,"byte_end":14542116,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6811},{"krate":0,"index":6816},{"krate":0,"index":6821},{"krate":0,"index":6826},{"krate":0,"index":6831},{"krate":0,"index":6835}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549884,"byte_end":14549888,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6840}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550383,"byte_end":14550387,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6842}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550501,"byte_end":14550505,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6844}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550986,"byte_end":14550990,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552154,"byte_end":14552158,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6857}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552647,"byte_end":14552651,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552840,"byte_end":14552844,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8088}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552960,"byte_end":14552964,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8090}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14553108,"byte_end":14553112,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8092}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554232,"byte_end":14554236,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554273,"byte_end":14554277,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554303,"byte_end":14554307,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554659,"byte_end":14554663,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6880},{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555898,"byte_end":14555907,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555944,"byte_end":14555953,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555969,"byte_end":14555978,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6893}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556369,"byte_end":14556378,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556686,"byte_end":14556695,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6900},{"krate":0,"index":6901}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556821,"byte_end":14556830,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6904}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14558391,"byte_end":14558400,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6928},{"krate":0,"index":6930}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582464,"byte_end":14582475,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14589264,"byte_end":14589275,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14589420,"byte_end":14589431,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8110},{"krate":0,"index":8111}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14595116,"byte_end":14595123,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7060}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14595322,"byte_end":14595329,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7062},{"krate":0,"index":7063}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610275,"byte_end":14610284,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7251},{"krate":0,"index":7252}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610489,"byte_end":14610498,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611244,"byte_end":14611254,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7270}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611763,"byte_end":14611773,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7272}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611866,"byte_end":14611876,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7274}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611982,"byte_end":14611992,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612149,"byte_end":14612159,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7281}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612284,"byte_end":14612294,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612324,"byte_end":14612333,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7284}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612964,"byte_end":14612968,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7307}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613441,"byte_end":14613445,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7310},{"krate":0,"index":7311}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613607,"byte_end":14613611,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7313}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613752,"byte_end":14613763,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614060,"byte_end":14614064,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614157,"byte_end":14614161,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614278,"byte_end":14614282,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614429,"byte_end":14614433,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616033,"byte_end":14616037,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7398},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7412},{"krate":0,"index":7415},{"krate":0,"index":7418},{"krate":0,"index":7421},{"krate":0,"index":7424},{"krate":0,"index":7427},{"krate":0,"index":7431},{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641199,"byte_end":14641202,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7437}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641431,"byte_end":14641434,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7439}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641729,"byte_end":14641731,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7441}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641934,"byte_end":14641938,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7443},{"krate":0,"index":7444}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642062,"byte_end":14642066,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642160,"byte_end":14642164,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642242,"byte_end":14642247,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7450}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642343,"byte_end":14642346,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7453}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642472,"byte_end":14642475,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642575,"byte_end":14642583,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7457}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642764,"byte_end":14642770,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7461}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642859,"byte_end":14642866,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7463}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646014,"byte_end":14646018,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7483}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646125,"byte_end":14646129,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646225,"byte_end":14646232,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647008,"byte_end":14647015,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7540},{"krate":0,"index":7541},{"krate":0,"index":7542},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7547},{"krate":0,"index":7549},{"krate":0,"index":7550}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652261,"byte_end":14652268,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7552}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652376,"byte_end":14652379,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652479,"byte_end":14652482,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7556}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652633,"byte_end":14652640,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7559}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652757,"byte_end":14652764,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652873,"byte_end":14652881,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652990,"byte_end":14652997,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7565}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653103,"byte_end":14653110,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7567},{"krate":0,"index":7568}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653289,"byte_end":14653296,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7571}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653491,"byte_end":14653498,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653655,"byte_end":14653662,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7579},{"krate":0,"index":7580}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653783,"byte_end":14653790,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7582}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653882,"byte_end":14653885,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654017,"byte_end":14654020,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654171,"byte_end":14654178,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7591}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654290,"byte_end":14654293,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654516,"byte_end":14654518,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7595}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654733,"byte_end":14654740,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654885,"byte_end":14654892,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7600}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14655434,"byte_end":14655441,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7607}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14655884,"byte_end":14655891,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7612}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14656020,"byte_end":14656027,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7614}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14656132,"byte_end":14656139,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7616}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660967,"byte_end":14660986,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14661154,"byte_end":14661173,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7763}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14661445,"byte_end":14661464,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662167,"byte_end":14662177,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7770},{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662472,"byte_end":14662484,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7773},{"krate":0,"index":7774}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662849,"byte_end":14662861,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7777},{"krate":0,"index":7778}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14666580,"byte_end":14666586,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7808},{"krate":0,"index":7809}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668519,"byte_end":14668530,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7864},{"krate":0,"index":7869},{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7878}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674505,"byte_end":14674513,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7883},{"krate":0,"index":7884}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674848,"byte_end":14674856,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675012,"byte_end":14675023,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7890}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675394,"byte_end":14675405,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675534,"byte_end":14675545,"line_start":264,"line_end":264,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8489}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675704,"byte_end":14675715,"line_start":270,"line_end":270,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678331,"byte_end":14678340,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7932},{"krate":0,"index":7937},{"krate":0,"index":7938},{"krate":0,"index":7939},{"krate":0,"index":7940},{"krate":0,"index":7941},{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7946}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685448,"byte_end":14685457,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7948},{"krate":0,"index":7949}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14686358,"byte_end":14686367,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7956},{"krate":0,"index":7957}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14687851,"byte_end":14687860,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688227,"byte_end":14688236,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688365,"byte_end":14688374,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8514}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688529,"byte_end":14688538,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8516}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691249,"byte_end":14691258,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7989},{"krate":0,"index":7994},{"krate":0,"index":7996},{"krate":0,"index":7998},{"krate":0,"index":8003},{"krate":0,"index":8006},{"krate":0,"index":8009},{"krate":0,"index":8015},{"krate":0,"index":8018},{"krate":0,"index":8021},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":8028},{"krate":0,"index":8029},{"krate":0,"index":8030},{"krate":0,"index":8031},{"krate":0,"index":8032},{"krate":0,"index":8033},{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8036},{"krate":0,"index":8037}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707153,"byte_end":14707162,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8039}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707519,"byte_end":14707528,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8535}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707657,"byte_end":14707666,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8537}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707821,"byte_end":14707830,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8539}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/extend.rs","byte_start":14715594,"byte_end":14715597,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14716156,"byte_end":14716159,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14716610,"byte_end":14716613,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8665}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717018,"byte_end":14717021,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8671}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717422,"byte_end":14717424,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8677}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717813,"byte_end":14717816,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8683}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/from_stream.rs","byte_start":14718551,"byte_end":14718557,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8707}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/product.rs","byte_start":14738707,"byte_end":14738713,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9253}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/sum.rs","byte_start":14740976,"byte_end":14740982,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9275}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/from_stream.rs","byte_start":14721012,"byte_end":14721018,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8735}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/product.rs","byte_start":14743241,"byte_end":14743247,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9299}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/sum.rs","byte_start":14745048,"byte_end":14745054,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9322}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14722469,"byte_end":14722475,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8760}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14723010,"byte_end":14723016,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8766}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14723511,"byte_end":14723517,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8772}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14724009,"byte_end":14724015,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8777}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14724516,"byte_end":14724522,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8783}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14725130,"byte_end":14725136,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8806}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14725585,"byte_end":14725591,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8812}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726043,"byte_end":14726049,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8818}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726495,"byte_end":14726501,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8823}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726956,"byte_end":14726962,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8829}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/extend.rs","byte_start":14728191,"byte_end":14728201,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8855}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/from_stream.rs","byte_start":14728741,"byte_end":14728751,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8879}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/extend.rs","byte_start":14729447,"byte_end":14729455,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8905}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/from_stream.rs","byte_start":14729969,"byte_end":14729977,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8930}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/extend.rs","byte_start":14730666,"byte_end":14730674,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8955}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/from_stream.rs","byte_start":14731164,"byte_end":14731172,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8979}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/extend.rs","byte_start":14731937,"byte_end":14731944,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9013}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/from_stream.rs","byte_start":14733231,"byte_end":14733238,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9046}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/extend.rs","byte_start":14734112,"byte_end":14734119,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9079}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/from_stream.rs","byte_start":14735568,"byte_end":14735575,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9111}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/extend.rs","byte_start":14736375,"byte_end":14736385,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9136}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/from_stream.rs","byte_start":14736878,"byte_end":14736888,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9160}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/extend.rs","byte_start":14737615,"byte_end":14737623,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9185}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/from_stream.rs","byte_start":14738160,"byte_end":14738168,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9209}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10910,"byte_end":10914,"line_start":300,"line_end":300,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10928,"byte_end":10934,"line_start":301,"line_end":301,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10948,"byte_end":10954,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10982,"byte_end":10984,"line_start":306,"line_end":306,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4289}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":14345022,"byte_end":14345029,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4397}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10998,"byte_end":11000,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4291}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":14345980,"byte_end":14345984,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5940}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":14474047,"byte_end":14474049,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5944}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":14474081,"byte_end":14474083,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5958}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":14474097,"byte_end":14474100,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5974}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11014,"byte_end":11021,"line_start":308,"line_end":308,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4292}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11035,"byte_end":11039,"line_start":309,"line_end":309,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4293}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11053,"byte_end":11060,"line_start":310,"line_end":310,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4324}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11131,"byte_end":11133,"line_start":315,"line_end":315,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6490}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11147,"byte_end":11151,"line_start":316,"line_end":316,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7241}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11165,"byte_end":11168,"line_start":317,"line_end":317,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":7654}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11263,"byte_end":11266,"line_start":323,"line_end":323,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":8540}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11341,"byte_end":11348,"line_start":325,"line_end":325,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8544}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":14068217,"byte_end":14068225,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14070124,"byte_end":14070131,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":14075488,"byte_end":14075505,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12319},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14077751,"byte_end":14077761,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078834,"byte_end":14078844,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2334},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":14078993,"byte_end":14079003,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2334},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082205,"byte_end":14082209,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":14082819,"byte_end":14082823,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2341},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083377,"byte_end":14083383,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":14083794,"byte_end":14083800,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2346},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14084390,"byte_end":14084398,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088278,"byte_end":14088289,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2371},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088433,"byte_end":14088444,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2371},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088609,"byte_end":14088620,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2371},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":14088988,"byte_end":14088997,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":14090849,"byte_end":14090866,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":14092279,"byte_end":14092296,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242617,"byte_end":14242628,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":12282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":14242808,"byte_end":14242819,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":12282},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":14243848,"byte_end":14243861,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":12241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":14244048,"byte_end":14244061,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":12241},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":14245326,"byte_end":14245330,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":12149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":14245584,"byte_end":14245588,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":12149},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":14246581,"byte_end":14246588,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":12104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":14246848,"byte_end":14246855,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":12104},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":14248327,"byte_end":14248331,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":12059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":14248565,"byte_end":14248569,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":12059},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":14249747,"byte_end":14249754,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":12014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":14249997,"byte_end":14250004,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":12014},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14235008,"byte_end":14235014,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13091},"to":{"krate":0,"index":2421}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":14242231,"byte_end":14242232,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2439},"to":{"krate":0,"index":2421}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":14251934,"byte_end":14251941,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2683},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252834,"byte_end":14252840,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":14252870,"byte_end":14252876,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932648,"byte_end":13932661,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":11977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13932888,"byte_end":13932901,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":11977},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933537,"byte_end":13933549,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2724},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13933576,"byte_end":13933588,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":14254527,"byte_end":14254528,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2753},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":14255341,"byte_end":14255350,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":14256603,"byte_end":14256612,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2786},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14003956,"byte_end":14003965,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14004172,"byte_end":14004181,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":14004221,"byte_end":14004230,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005311,"byte_end":14005320,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005527,"byte_end":14005536,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":14005576,"byte_end":14005585,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":14006955,"byte_end":14006960,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":14007178,"byte_end":14007183,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11928},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":14008221,"byte_end":14008227,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":14008339,"byte_end":14008345,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11892},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":14009296,"byte_end":14009305,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":14009534,"byte_end":14009543,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11839},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":14011842,"byte_end":14011848,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":14011960,"byte_end":14011966,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11803},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":14012623,"byte_end":14012628,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":14012813,"byte_end":14012818,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11763},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":14013511,"byte_end":14013520,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":14013627,"byte_end":14013636,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11723},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":14014652,"byte_end":14014660,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":14014874,"byte_end":14014882,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11678},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":14016151,"byte_end":14016157,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":14016322,"byte_end":14016328,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11629},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":14017125,"byte_end":14017134,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":14017253,"byte_end":14017262,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":11580},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018101,"byte_end":14018111,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018245,"byte_end":14018255,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":14018296,"byte_end":14018306,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":524},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019100,"byte_end":14019113,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019247,"byte_end":14019260,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":14019304,"byte_end":14019317,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":14020230,"byte_end":14020240,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":14020433,"byte_end":14020443,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11518},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":14021403,"byte_end":14021416,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":14021565,"byte_end":14021578,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11473},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":14022609,"byte_end":14022613,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":14022768,"byte_end":14022772,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":11430},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":14023795,"byte_end":14023803,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":11389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":14024011,"byte_end":14024019,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11389},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":14025028,"byte_end":14025036,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":14025244,"byte_end":14025252,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11348},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":14026220,"byte_end":14026227,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":14026376,"byte_end":14026383,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11299},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":14027103,"byte_end":14027113,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":11254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":14027229,"byte_end":14027239,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":11254},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":14028357,"byte_end":14028365,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":11213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":14028573,"byte_end":14028581,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11213},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":14029600,"byte_end":14029608,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":14029816,"byte_end":14029824,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11172},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":14030557,"byte_end":14030560,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":14030712,"byte_end":14030715,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11123},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":14031400,"byte_end":14031409,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":14031524,"byte_end":14031533,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11078},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":14032705,"byte_end":14032716,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":14032903,"byte_end":14032914,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11021},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":14034136,"byte_end":14034150,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":14034335,"byte_end":14034349,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10964},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":14035755,"byte_end":14035764,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":14035879,"byte_end":14035888,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10919},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":14037057,"byte_end":14037068,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":14037255,"byte_end":14037266,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10862},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":14038514,"byte_end":14038528,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":14038713,"byte_end":14038727,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10805},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":14040296,"byte_end":14040304,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":14040518,"byte_end":14040526,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10760},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":14041582,"byte_end":14041592,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042039,"byte_end":14042048,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042072,"byte_end":14042081,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":14042211,"byte_end":14042220,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":14043433,"byte_end":14043449,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":14043678,"byte_end":14043694,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10707},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046077,"byte_end":14046091,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046121,"byte_end":14046135,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":14046338,"byte_end":14046352,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1264},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":14047550,"byte_end":14047554,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":14047759,"byte_end":14047763,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10649},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":14048748,"byte_end":14048752,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":14048866,"byte_end":14048870,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10609},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":14049990,"byte_end":14049999,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":14050181,"byte_end":14050190,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10560},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":14051533,"byte_end":14051539,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":14051740,"byte_end":14051746,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10516},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":14052949,"byte_end":14052953,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":14053124,"byte_end":14053128,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10473},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":14054173,"byte_end":14054182,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":14054347,"byte_end":14054356,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10424},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055210,"byte_end":14055223,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055259,"byte_end":14055272,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":14055484,"byte_end":14055497,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1458},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056527,"byte_end":14056543,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056573,"byte_end":14056589,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":14056724,"byte_end":14056740,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058002,"byte_end":14058005,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10375},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058245,"byte_end":14058248,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":14058450,"byte_end":14058453,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10375},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":14287076,"byte_end":14287087,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":14287198,"byte_end":14287209,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10338},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":14288426,"byte_end":14288431,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":14288614,"byte_end":14288619,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10289},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14290248,"byte_end":14290255,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14290458,"byte_end":14290465,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10252},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":14291310,"byte_end":14291317,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10252},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":14292317,"byte_end":14292324,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":14292579,"byte_end":14292586,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10199},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":14293828,"byte_end":14293843,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":14294051,"byte_end":14294066,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10137},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14295312,"byte_end":14295319,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14295504,"byte_end":14295511,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10093},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296433,"byte_end":14296445,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3183},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":14296472,"byte_end":14296484,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3183},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":14297368,"byte_end":14297376,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":14297629,"byte_end":14297637,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10048},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":14298829,"byte_end":14298834,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":14299040,"byte_end":14299045,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10007},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":14299833,"byte_end":14299844,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":14300114,"byte_end":14300125,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9944},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13947849,"byte_end":13947855,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":30,"index":96},"to":{"krate":0,"index":1693}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":14003602,"byte_end":14003603,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1812},"to":{"krate":0,"index":1693}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":14059991,"byte_end":14059996,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3197},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14060497,"byte_end":14060503,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":14061432,"byte_end":14061438,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3203},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14062792,"byte_end":14062800,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9905},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":14063055,"byte_end":14063063,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9905},"to":{"krate":0,"index":3415}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14064107,"byte_end":14064111,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":9866},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":14064336,"byte_end":14064340,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":9866},"to":{"krate":0,"index":3415}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":14065280,"byte_end":14065286,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3212},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14065855,"byte_end":14065865,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3221},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":14067057,"byte_end":14067067,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3221},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":14308149,"byte_end":14308163,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308617,"byte_end":14308630,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":14308769,"byte_end":14308782,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3286},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309639,"byte_end":14309650,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309791,"byte_end":14309802,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":14309843,"byte_end":14309854,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3317},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":14310779,"byte_end":14310790,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":14310990,"byte_end":14311001,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":9809},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":14312020,"byte_end":14312034,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":9752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":14312240,"byte_end":14312254,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9752},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":14301506,"byte_end":14301512,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":30,"index":96},"to":{"krate":0,"index":3415}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":14315500,"byte_end":14315506,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":30,"index":96},"to":{"krate":0,"index":3432}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":14323833,"byte_end":14323839,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":30,"index":96},"to":{"krate":0,"index":3478}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":14325721,"byte_end":14325729,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3698},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":14326949,"byte_end":14326950,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3521},"to":{"krate":0,"index":3516}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328110,"byte_end":14328117,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3703},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328285,"byte_end":14328292,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":3415}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328439,"byte_end":14328446,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":3478}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":14328482,"byte_end":14328489,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3703},"to":{"krate":0,"index":3432}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":14329257,"byte_end":14329262,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":3576}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":14332641,"byte_end":14332651,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9703},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":14333848,"byte_end":14333853,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":3630}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":14363556,"byte_end":14363561,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9655},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":14365483,"byte_end":14365497,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4493},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":14366956,"byte_end":14366971,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4529},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":14368171,"byte_end":14368176,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9607},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14355628,"byte_end":14355635,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":38,"index":49},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":14361925,"byte_end":14361926,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4613},"to":{"krate":0,"index":4605}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":14380953,"byte_end":14380958,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5584},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14382773,"byte_end":14382778,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14384937,"byte_end":14384942,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9558},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14385184,"byte_end":14385189,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9558},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":14386334,"byte_end":14386339,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9558},"to":{"krate":38,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":14388040,"byte_end":14388050,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4713},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":14388625,"byte_end":14388640,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4746},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14389562,"byte_end":14389577,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":14390727,"byte_end":14390732,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4788},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":14392049,"byte_end":14392067,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4824},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":14393421,"byte_end":14393439,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4860},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14394259,"byte_end":14394263,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14397935,"byte_end":14397939,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9518},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":14398857,"byte_end":14398861,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9518},"to":{"krate":38,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14369345,"byte_end":14369349,"line_start":31,"line_end":31,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":38,"index":39},"to":{"krate":0,"index":4949}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":14379343,"byte_end":14379344,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4966},"to":{"krate":0,"index":4949}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":14401750,"byte_end":14401760,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4994},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14400575,"byte_end":14400579,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":38,"index":47},"to":{"krate":0,"index":5012}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":14401414,"byte_end":14401415,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5015},"to":{"krate":0,"index":5012}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":14407551,"byte_end":14407562,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5038},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":14408074,"byte_end":14408085,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5067},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":14408650,"byte_end":14408664,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5100},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":14409635,"byte_end":14409649,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5130},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":14411134,"byte_end":14411153,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5165},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14402391,"byte_end":14402396,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":38,"index":42},"to":{"krate":0,"index":5199}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":14407252,"byte_end":14407253,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5212},"to":{"krate":0,"index":5199}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14411620,"byte_end":14411626,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14411879,"byte_end":14411891,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14412178,"byte_end":14412190,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":14412321,"byte_end":14412333,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5590},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14414314,"byte_end":14414323,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14415551,"byte_end":14415560,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14418300,"byte_end":14418309,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9473},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14419763,"byte_end":14419772,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9473},"to":{"krate":38,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14420694,"byte_end":14420703,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9473},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":14421041,"byte_end":14421050,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9473},"to":{"krate":38,"index":47}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14427880,"byte_end":14427889,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14433721,"byte_end":14433730,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":9432},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14434628,"byte_end":14434637,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":9432},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":14434883,"byte_end":14434892,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":9432},"to":{"krate":38,"index":47}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":14439688,"byte_end":14439698,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":9383},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14441761,"byte_end":14441767,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445068,"byte_end":14445074,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":47}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445340,"byte_end":14445346,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14445862,"byte_end":14445868,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14446218,"byte_end":14446224,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14446983,"byte_end":14446989,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":14447513,"byte_end":14447519,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5603},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448797,"byte_end":14448802,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14448921,"byte_end":14448926,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5516},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":14449130,"byte_end":14449135,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5516},"to":{"krate":38,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450320,"byte_end":14450326,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5548},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":14450445,"byte_end":14450451,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5548},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451436,"byte_end":14451440,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5576},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":14451559,"byte_end":14451563,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5576},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":14453311,"byte_end":14453318,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":9334},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14456309,"byte_end":14456315,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5825},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":14459796,"byte_end":14459802,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5825},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14462654,"byte_end":14462659,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14464675,"byte_end":14464680,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5863},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":14466818,"byte_end":14466823,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5863},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14470154,"byte_end":14470160,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5902},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":14473641,"byte_end":14473647,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5902},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14482923,"byte_end":14482935,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490287,"byte_end":14490299,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6023},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14490735,"byte_end":14490747,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6023},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491040,"byte_end":14491052,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6023},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491151,"byte_end":14491163,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6023},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":14491437,"byte_end":14491449,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6023},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14493154,"byte_end":14493166,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14496201,"byte_end":14496213,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6120},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497248,"byte_end":14497256,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6134},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497593,"byte_end":14497601,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6134},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14497768,"byte_end":14497780,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6120},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498073,"byte_end":14498085,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6120},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498184,"byte_end":14498196,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6120},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":14498380,"byte_end":14498392,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6120},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14499617,"byte_end":14499627,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14502839,"byte_end":14502849,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6248},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14503293,"byte_end":14503303,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6248},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14504325,"byte_end":14504335,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6248},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14504767,"byte_end":14504777,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6248},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505095,"byte_end":14505105,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6248},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505204,"byte_end":14505214,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6248},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":14505390,"byte_end":14505400,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6248},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14505891,"byte_end":14505908,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507071,"byte_end":14507078,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6345},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507103,"byte_end":14507110,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6345},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507132,"byte_end":14507139,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6345},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14507206,"byte_end":14507213,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14515987,"byte_end":14515994,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6345},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14516786,"byte_end":14516797,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6382},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":14517705,"byte_end":14517716,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6382},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14519358,"byte_end":14519366,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14523524,"byte_end":14523528,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14524094,"byte_end":14524098,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":14524252,"byte_end":14524256,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14532559,"byte_end":14532569,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":14535148,"byte_end":14535158,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":8052},"to":{"krate":1,"index":5898}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14535793,"byte_end":14535801,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539764,"byte_end":14539772,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6694},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14539925,"byte_end":14539933,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6694},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":14540088,"byte_end":14540096,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6694},"to":{"krate":1,"index":5886}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14542112,"byte_end":14542116,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14549884,"byte_end":14549888,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8069},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550383,"byte_end":14550387,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8069},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550501,"byte_end":14550505,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8069},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14550986,"byte_end":14550990,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8069},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552154,"byte_end":14552158,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8069},"to":{"krate":38,"index":47}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552647,"byte_end":14552651,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8069},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552840,"byte_end":14552844,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8069},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14552960,"byte_end":14552964,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8069},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14553108,"byte_end":14553112,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8069},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554232,"byte_end":14554236,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554273,"byte_end":14554277,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554303,"byte_end":14554307,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6862},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14554659,"byte_end":14554663,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555898,"byte_end":14555907,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555944,"byte_end":14555953,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":3069}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14555969,"byte_end":14555978,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556369,"byte_end":14556378,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556686,"byte_end":14556695,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14556821,"byte_end":14556830,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6883},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":14558391,"byte_end":14558400,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14582464,"byte_end":14582475,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":8099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14589264,"byte_end":14589275,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":8099},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":14589420,"byte_end":14589431,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8099},"to":{"krate":1,"index":5836}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14595116,"byte_end":14595123,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":14595322,"byte_end":14595329,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8115},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610275,"byte_end":14610284,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":14610489,"byte_end":14610498,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8129},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611244,"byte_end":14611254,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":8140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611763,"byte_end":14611773,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":8140},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611866,"byte_end":14611876,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":8140},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14611982,"byte_end":14611992,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8140},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612149,"byte_end":14612159,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":8140},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612284,"byte_end":14612294,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8140},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":14612324,"byte_end":14612333,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":379}},"from":{"krate":1,"index":11636},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14612964,"byte_end":14612968,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":8166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613441,"byte_end":14613445,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":7978}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613607,"byte_end":14613611,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14613752,"byte_end":14613763,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7314},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614060,"byte_end":14614064,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614157,"byte_end":14614161,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614278,"byte_end":14614282,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":7827}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":14614429,"byte_end":14614433,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":8166},"to":{"krate":2,"index":8253}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14616033,"byte_end":14616037,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":8172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641199,"byte_end":14641202,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":389}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641431,"byte_end":14641434,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":390}},"from":{"krate":5,"index":5980},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641729,"byte_end":14641731,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":5,"index":4659},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14641934,"byte_end":14641938,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":8172},"to":{"krate":5,"index":669}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642062,"byte_end":14642066,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":8172},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642160,"byte_end":14642164,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":8172},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642242,"byte_end":14642247,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":395}},"from":{"krate":1,"index":3053},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642343,"byte_end":14642346,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642472,"byte_end":14642475,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":397}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642575,"byte_end":14642583,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":398}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642764,"byte_end":14642770,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":400}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14642859,"byte_end":14642866,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646014,"byte_end":14646018,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8172},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646125,"byte_end":14646129,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":1,"index":7530},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":14646225,"byte_end":14646232,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":454}},"from":{"krate":1,"index":7421},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14647008,"byte_end":14647015,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":8446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652261,"byte_end":14652268,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652376,"byte_end":14652379,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":457}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652479,"byte_end":14652482,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":458}},"from":{"krate":5,"index":321},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652633,"byte_end":14652640,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652757,"byte_end":14652764,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652873,"byte_end":14652881,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":461}},"from":{"krate":1,"index":3050},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14652990,"byte_end":14652997,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653103,"byte_end":14653110,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653289,"byte_end":14653296,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":7779}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653491,"byte_end":14653498,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":7792}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653655,"byte_end":14653662,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653783,"byte_end":14653790,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2654}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14653882,"byte_end":14653885,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":468}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654017,"byte_end":14654020,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":469}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654171,"byte_end":14654178,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654290,"byte_end":14654293,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":471}},"from":{"krate":5,"index":5980},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654516,"byte_end":14654518,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":472}},"from":{"krate":5,"index":4659},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654733,"byte_end":14654740,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14654885,"byte_end":14654892,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8446},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14655434,"byte_end":14655441,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8446},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14655884,"byte_end":14655891,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14656020,"byte_end":14656027,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":14656132,"byte_end":14656139,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8446},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14660967,"byte_end":14660986,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7749},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14661154,"byte_end":14661173,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7749},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14661445,"byte_end":14661464,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7749},"to":{"krate":2,"index":13091}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662167,"byte_end":14662177,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":482}},"from":{"krate":1,"index":11252},"to":{"krate":0,"index":7746}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662472,"byte_end":14662484,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":483}},"from":{"krate":1,"index":11276},"to":{"krate":0,"index":7746}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14662849,"byte_end":14662861,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":484}},"from":{"krate":1,"index":11279},"to":{"krate":0,"index":7746}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":14666580,"byte_end":14666586,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":486}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":7746}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14668519,"byte_end":14668530,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674505,"byte_end":14674513,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7879},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14674848,"byte_end":14674856,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7879},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675012,"byte_end":14675023,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675394,"byte_end":14675405,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8469},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675534,"byte_end":14675545,"line_start":264,"line_end":264,"column_start":24,"column_end":35},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8469},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":14675704,"byte_end":14675715,"line_start":270,"line_end":270,"column_start":24,"column_end":35},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8469},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14678331,"byte_end":14678340,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14685448,"byte_end":14685457,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8492},"to":{"krate":38,"index":39}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14686358,"byte_end":14686367,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8492},"to":{"krate":38,"index":42}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14687851,"byte_end":14687860,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8492},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688227,"byte_end":14688236,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8492},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688365,"byte_end":14688374,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8492},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":14688529,"byte_end":14688538,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8492},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14691249,"byte_end":14691258,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707153,"byte_end":14707162,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707519,"byte_end":14707528,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8517},"to":{"krate":1,"index":6961}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707657,"byte_end":14707666,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8517},"to":{"krate":1,"index":6963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":14707821,"byte_end":14707830,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8517},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/extend.rs","byte_start":14715594,"byte_end":14715597,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"kind":{"Impl":{"id":506}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14716156,"byte_end":14716159,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"kind":{"Impl":{"id":507}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14716610,"byte_end":14716613,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"kind":{"Impl":{"id":508}},"from":{"krate":5,"index":678},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717018,"byte_end":14717021,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":509}},"from":{"krate":5,"index":321},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717422,"byte_end":14717424,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":5,"index":4659},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":14717813,"byte_end":14717816,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"kind":{"Impl":{"id":511}},"from":{"krate":5,"index":5980},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/from_stream.rs","byte_start":14718551,"byte_end":14718557,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":512}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/product.rs","byte_start":14738707,"byte_end":14738713,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":513}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":3576}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/sum.rs","byte_start":14740976,"byte_end":14740982,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":514}},"from":{"krate":2,"index":46413},"to":{"krate":0,"index":3630}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/from_stream.rs","byte_start":14721012,"byte_end":14721018,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"kind":{"Impl":{"id":515}},"from":{"krate":2,"index":46286},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/product.rs","byte_start":14743241,"byte_end":14743247,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":516}},"from":{"krate":2,"index":46286},"to":{"krate":0,"index":3576}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/sum.rs","byte_start":14745048,"byte_end":14745054,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":517}},"from":{"krate":2,"index":46286},"to":{"krate":0,"index":3630}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14722469,"byte_end":14722475,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":518}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14723010,"byte_end":14723016,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"kind":{"Impl":{"id":519}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14723511,"byte_end":14723517,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14724009,"byte_end":14724015,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"kind":{"Impl":{"id":521}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":14724516,"byte_end":14724522,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"kind":{"Impl":{"id":522}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14725130,"byte_end":14725136,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":523}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14725585,"byte_end":14725591,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"kind":{"Impl":{"id":524}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726043,"byte_end":14726049,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"kind":{"Impl":{"id":525}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726495,"byte_end":14726501,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"kind":{"Impl":{"id":526}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14726956,"byte_end":14726962,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"kind":{"Impl":{"id":527}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/extend.rs","byte_start":14728191,"byte_end":14728201,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":528}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/from_stream.rs","byte_start":14728741,"byte_end":14728751,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"kind":{"Impl":{"id":529}},"from":{"krate":5,"index":806},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/extend.rs","byte_start":14729447,"byte_end":14729455,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"kind":{"Impl":{"id":530}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/from_stream.rs","byte_start":14729969,"byte_end":14729977,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"kind":{"Impl":{"id":531}},"from":{"krate":5,"index":1397},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/extend.rs","byte_start":14730666,"byte_end":14730674,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"kind":{"Impl":{"id":532}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/from_stream.rs","byte_start":14731164,"byte_end":14731172,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"kind":{"Impl":{"id":533}},"from":{"krate":5,"index":7463},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/extend.rs","byte_start":14731937,"byte_end":14731944,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":534}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/from_stream.rs","byte_start":14733231,"byte_end":14733238,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":535}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/extend.rs","byte_start":14734112,"byte_end":14734119,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/from_stream.rs","byte_start":14735568,"byte_end":14735575,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":537}},"from":{"krate":1,"index":2011},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/extend.rs","byte_start":14736375,"byte_end":14736385,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"kind":{"Impl":{"id":538}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/from_stream.rs","byte_start":14736878,"byte_end":14736888,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"kind":{"Impl":{"id":539}},"from":{"krate":5,"index":3354},"to":{"krate":0,"index":3469}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/extend.rs","byte_start":14737615,"byte_end":14737623,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"kind":{"Impl":{"id":540}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":3447}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/from_stream.rs","byte_start":14738160,"byte_end":14738168,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"kind":{"Impl":{"id":541}},"from":{"krate":5,"index":4167},"to":{"krate":0,"index":3469}}]}