{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9","program":"/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","value_bag","--edition=2018","/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"erased-serde1\"","--cfg","feature=\"error\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde1\"","--cfg","feature=\"serde1_fmt\"","--cfg","feature=\"serde1_lib\"","--cfg","feature=\"std\"","--cfg","feature=\"sval1_lib\"","-C","metadata=797a833c0f55924f","-C","extra-filename=-797a833c0f55924f","--out-dir","/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","-L","dependency=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps","--extern","ctor=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libctor-f6234815af81e50c.so","--extern","erased_serde1=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/liberased_serde-f9f35ade05138794.rmeta","--extern","serde1_lib=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libserde-7ae72bc30be1fa49.rmeta","--extern","serde1_fmt=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libserde_fmt-72d5871584bb9ded.rmeta","--extern","sval1_lib=/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libsval-a49711a8bdc4f693.rmeta","--cap-lints","allow","--cfg","value_bag_capture_ctor","--error-format=json","--sysroot","/home/qtao/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/qtao/Dev/projects/rbudget/backend/target/rls/debug/deps/libvalue_bag-797a833c0f55924f.rmeta"},"prelude":{"crate_id":{"name":"value_bag","disambiguator":[4196463847300359276,0]},"crate_root":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src","external_crates":[{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/primitive.rs","num":20,"id":{"name":"ctor","disambiguator":[18104799359949978945,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","num":21,"id":{"name":"serde","disambiguator":[13353710497034489576,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","num":22,"id":{"name":"serde_derive","disambiguator":[12111812958458064915,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","num":23,"id":{"name":"erased_serde","disambiguator":[16332757691032284507,0]}},{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","num":24,"id":{"name":"serde_fmt","disambiguator":[15960062228164920546,0]}}],"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":0,"byte_end":11161,"line_start":1,"line_end":383,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":745,"byte_end":750,"line_start":30,"line_end":30,"column_start":22,"column_end":27},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":0,"byte_end":11161,"line_start":1,"line_end":383,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":35},{"krate":0,"index":71},{"krate":0,"index":93},{"krate":0,"index":762},{"krate":0,"index":834},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":837}],"decl_id":null,"docs":" Structured values.","sig":null,"attributes":[{"value":"/ Structured values.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":23,"byte_end":26,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains the [`ValueBag`] type, a container for an anonymous structured value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":27,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ `ValueBag`s can be captured in various ways and then formatted, inspected, and serialized","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":121,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ without losing their original structure.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":215,"byte_end":259,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"no_std","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":398,"byte_end":408,"line_start":9,"line_end":9,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11657,"byte_end":11662,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":842}],"decl_id":null,"docs":" An error encountered while working with structured data.\n","sig":null,"attributes":[{"value":"/ An error encountered while working with structured data.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11568,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11879,"byte_end":11882,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"pub fn msg(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an error from a message.\n","sig":null,"attributes":[{"value":"/ Create an error from a message.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11832,"byte_end":11867,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12687,"byte_end":12692,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"name":"boxed","qualname":"<Error>::boxed","value":"pub fn boxed<E>(E) -> Self where E: Into<BoxedError>","parent":null,"children":[],"decl_id":null,"docs":" Create an error from a standard error type.\n","sig":null,"attributes":[{"value":"/ Create an error from a standard error type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12624,"byte_end":12671,"line_start":52,"line_end":52,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fill","qualname":"::fill","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":62}],"decl_id":null,"docs":" Deferred value initialization.","sig":null,"attributes":[{"value":"/ Deferred value initialization.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13103,"byte_end":13137,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13138,"byte_end":13141,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Fill`] trait is a way to bridge APIs that may not be directly","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13142,"byte_end":13213,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ compatible with other constructor methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13214,"byte_end":13260,"line_start":4,"line_end":4,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13261,"byte_end":13264,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The `Fill` trait is automatically implemented for closures, so can usually","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13265,"byte_end":13343,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ be used in libraries that can't implement the trait themselves.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13344,"byte_end":13411,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13412,"byte_end":13415,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13416,"byte_end":13423,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use value_bag::{ValueBag, fill::Slot};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13424,"byte_end":13466,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13467,"byte_end":13470,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&|slot: Slot| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13471,"byte_end":13522,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/     #[derive(Debug)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13523,"byte_end":13547,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     struct MyShortLivedValue;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13548,"byte_end":13581,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13582,"byte_end":13585,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/     slot.fill_debug(&MyShortLivedValue)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13586,"byte_end":13629,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13630,"byte_end":13637,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13638,"byte_end":13641,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"MyShortLivedValue\", format!(\"{:?}\", value));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13642,"byte_end":13702,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13703,"byte_end":13710,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13711,"byte_end":13714,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait can also be implemented manually:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13715,"byte_end":13762,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13763,"byte_end":13766,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13767,"byte_end":13774,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13775,"byte_end":13801,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ use value_bag::{ValueBag, Error, fill::{Slot, Fill}};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13802,"byte_end":13859,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13860,"byte_end":13863,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ struct FillDebug;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13864,"byte_end":13885,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13886,"byte_end":13889,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl Fill for FillDebug {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13890,"byte_end":13919,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/     fn fill(&self, slot: Slot) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13920,"byte_end":13977,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/         slot.fill_debug(&42i64 as &dyn Debug)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":13978,"byte_end":14027,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14028,"byte_end":14037,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14038,"byte_end":14043,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14044,"byte_end":14047,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&FillDebug);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14048,"byte_end":14096,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14097,"byte_end":14100,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14101,"byte_end":14138,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14139,"byte_end":14146,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14548,"byte_end":14552,"line_start":51,"line_end":51,"column_start":11,"column_end":15},"name":"Fill","qualname":"::fill::Fill","value":"Fill","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" A type that requires extra work to convert into a [`ValueBag`](../struct.ValueBag.html).","sig":null,"attributes":[{"value":"/ A type that requires extra work to convert into a [`ValueBag`](../struct.ValueBag.html).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14239,"byte_end":14331,"line_start":46,"line_end":46,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14332,"byte_end":14335,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This trait is an advanced initialization API.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14336,"byte_end":14385,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ It's intended for erased values coming from other logging frameworks that may need","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14386,"byte_end":14472,"line_start":49,"line_end":49,"column_start":1,"column_end":87}},{"value":"/ to perform extra work to determine the concrete type to use.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14473,"byte_end":14537,"line_start":50,"line_end":50,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14584,"byte_end":14588,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill::Fill::fill","value":"pub fn fill(&Self, Slot) -> Result<(), Error>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Fill a value.\n","sig":null,"attributes":[{"value":"/ Fill a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14559,"byte_end":14576,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14861,"byte_end":14865,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"Slot","qualname":"::fill::Slot","value":"Slot {  }","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" A value slot to fill using the [`Fill`](trait.Fill.html) trait.\n","sig":null,"attributes":[{"value":"/ A value slot to fill using the [`Fill`](trait.Fill.html) trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14782,"byte_end":14849,"line_start":65,"line_end":65,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15526,"byte_end":15534,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"fill_any","qualname":"<Slot>::fill_any","value":"pub fn fill_any<T>(Self, T) -> Result<(), Error> where T: Into<ValueBag>","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a value.","sig":null,"attributes":[{"value":"/ Fill the slot with a value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15390,"byte_end":15421,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15426,"byte_end":15429,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15434,"byte_end":15514,"line_start":90,"line_end":90,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33049,"byte_end":33060,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"try_capture","qualname":"<ValueBag>::try_capture","value":"pub fn try_capture<T>(&'v T) -> Option<Self> where T: ?Sized + 'static","parent":null,"children":[],"decl_id":null,"docs":" Try capture a raw value.","sig":null,"attributes":[{"value":"/ Try capture a raw value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32813,"byte_end":32841,"line_start":21,"line_end":21,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32846,"byte_end":32849,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method will return `Some` if the value is a simple primitive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32854,"byte_end":32923,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ that can be captured without losing its structure. In other cases","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32928,"byte_end":32997,"line_start":24,"line_end":24,"column_start":5,"column_end":74}},{"value":"/ this method will return `None`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33002,"byte_end":33037,"line_start":25,"line_end":25,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33402,"byte_end":33408,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<ValueBag>::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `u64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `u64` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33217,"byte_end":33253,"line_start":33,"line_end":33,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33258,"byte_end":33261,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33266,"byte_end":33334,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33339,"byte_end":33390,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33666,"byte_end":33672,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<ValueBag>::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `i64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `i64` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33481,"byte_end":33517,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33522,"byte_end":33525,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33530,"byte_end":33598,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33603,"byte_end":33654,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33931,"byte_end":33938,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<ValueBag>::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `u128` from this value.","sig":null,"attributes":[{"value":"/ Try get a `u128` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33745,"byte_end":33782,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33787,"byte_end":33790,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33795,"byte_end":33863,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":33868,"byte_end":33919,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34199,"byte_end":34206,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"to_i128","qualname":"<ValueBag>::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `i128` from this value.","sig":null,"attributes":[{"value":"/ Try get a `i128` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34013,"byte_end":34050,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34055,"byte_end":34058,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34063,"byte_end":34131,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34136,"byte_end":34187,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34466,"byte_end":34472,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<ValueBag>::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `f64` from this value.","sig":null,"attributes":[{"value":"/ Try get a `f64` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34281,"byte_end":34317,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34322,"byte_end":34325,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34330,"byte_end":34398,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34403,"byte_end":34454,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34731,"byte_end":34738,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"to_bool","qualname":"<ValueBag>::to_bool","value":"pub fn to_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `bool` from this value.","sig":null,"attributes":[{"value":"/ Try get a `bool` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34545,"byte_end":34582,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34587,"byte_end":34590,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34595,"byte_end":34663,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34668,"byte_end":34719,"line_start":76,"line_end":76,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34999,"byte_end":35006,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"to_char","qualname":"<ValueBag>::to_char","value":"pub fn to_char(&Self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `char` from this value.","sig":null,"attributes":[{"value":"/ Try get a `char` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34813,"byte_end":34850,"line_start":81,"line_end":81,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34855,"byte_end":34858,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34863,"byte_end":34931,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/ serialization implementations for complex ones.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":34936,"byte_end":34987,"line_start":84,"line_end":84,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35263,"byte_end":35278,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"to_borrowed_str","qualname":"<ValueBag>::to_borrowed_str","value":"pub fn to_borrowed_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `str` from this value.","sig":null,"attributes":[{"value":"/ Try get a `str` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35081,"byte_end":35117,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35122,"byte_end":35125,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This method is cheap for primitive types. It won't allocate an owned","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35130,"byte_end":35202,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ `String` if the value is a complex type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35207,"byte_end":35251,"line_start":92,"line_end":92,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35425,"byte_end":35427,"line_start":98,"line_end":98,"column_start":12,"column_end":14},"name":"is","qualname":"<ValueBag>::is","value":"pub fn is<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this value can be downcast to `T`.\n","sig":null,"attributes":[{"value":"/ Check whether this value can be downcast to `T`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35361,"byte_end":35413,"line_start":97,"line_end":97,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35558,"byte_end":35570,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<ValueBag>::downcast_ref","value":"pub fn downcast_ref<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Try downcast this value to `T`.\n","sig":null,"attributes":[{"value":"/ Try downcast this value to `T`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":35511,"byte_end":35546,"line_start":102,"line_end":102,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43290,"byte_end":43296,"line_start":361,"line_end":361,"column_start":16,"column_end":22},"name":"to_str","qualname":"<ValueBag>::to_str","value":"pub fn to_str(&Self) -> Option<Cow<, str>>","parent":null,"children":[],"decl_id":null,"docs":" Try get a `str` from this value.","sig":null,"attributes":[{"value":"/ Try get a `str` from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":42971,"byte_end":43007,"line_start":355,"line_end":355,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43016,"byte_end":43019,"line_start":356,"line_end":356,"column_start":9,"column_end":12}},{"value":"/ This method is cheap for primitive types, but may call arbitrary","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43028,"byte_end":43096,"line_start":357,"line_end":357,"column_start":9,"column_end":77}},{"value":"/ serialization implementations for complex ones. If the serialization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43105,"byte_end":43177,"line_start":358,"line_end":358,"column_start":9,"column_end":81}},{"value":"/ implementation produces a short lived string it will be allocated.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43186,"byte_end":43256,"line_start":359,"line_end":359,"column_start":9,"column_end":79}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43265,"byte_end":43274,"line_start":360,"line_end":360,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61399,"byte_end":61412,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"capture_error","qualname":"<ValueBag>::capture_error","value":"pub fn capture_error<T>(&'v T) -> Self where T: error::Error + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from an error.\n","sig":null,"attributes":[{"value":"/ Get a value from an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61357,"byte_end":61387,"line_start":10,"line_end":10,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61635,"byte_end":61649,"line_start":22,"line_end":22,"column_start":12,"column_end":26},"name":"from_dyn_error","qualname":"<ValueBag>::from_dyn_error","value":"pub fn from_dyn_error(&'v dyn error::Error + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a value from an erased value.\n","sig":null,"attributes":[{"value":"/ Get a value from an erased value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61572,"byte_end":61609,"line_start":20,"line_end":20,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61614,"byte_end":61623,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61851,"byte_end":61868,"line_start":30,"line_end":30,"column_start":12,"column_end":29},"name":"to_borrowed_error","qualname":"<ValueBag>::to_borrowed_error","value":"pub fn to_borrowed_error(&Self) -> Option<&dyn Error + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Try get an error from this value.\n","sig":null,"attributes":[{"value":"/ Try get an error from this value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61788,"byte_end":61825,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61830,"byte_end":61839,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62635,"byte_end":62645,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"fill_error","qualname":"<Slot>::fill_error","value":"pub fn fill_error<T>(Self, T) -> Result<(), crate::Error> where\nT: error::Error + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with an error.","sig":null,"attributes":[{"value":"/ Fill the slot with an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62498,"byte_end":62530,"line_start":57,"line_end":57,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62535,"byte_end":62538,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62543,"byte_end":62623,"line_start":59,"line_end":59,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62850,"byte_end":62864,"line_start":68,"line_end":68,"column_start":12,"column_end":26},"name":"fill_dyn_error","qualname":"<Slot>::fill_dyn_error","value":"pub fn fill_dyn_error(Self, &dyn error::Error + 'static)\n-> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with an error.\n","sig":null,"attributes":[{"value":"/ Fill the slot with an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62806,"byte_end":62838,"line_start":67,"line_end":67,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fill.rs","byte_start":64609,"byte_end":64618,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"from_fill","qualname":"<ValueBag>::from_fill","value":"pub fn from_fill<T>(&'v T) -> Self where T: Fill","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a fillable slot.\n","sig":null,"attributes":[{"value":"/ Get a value from a fillable slot.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fill.rs","byte_start":64560,"byte_end":64597,"line_start":5,"line_end":5,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65328,"byte_end":65341,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"capture_debug","qualname":"<ValueBag>::capture_debug","value":"pub fn capture_debug<T>(&'v T) -> Self where T: Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type.","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65121,"byte_end":65160,"line_start":15,"line_end":15,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65165,"byte_end":65168,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to capture the given value as a well-known primitive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65173,"byte_end":65254,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/ before resorting to using its `Debug` implementation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65259,"byte_end":65316,"line_start":18,"line_end":18,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65740,"byte_end":65755,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"name":"capture_display","qualname":"<ValueBag>::capture_display","value":"pub fn capture_display<T>(&'v T) -> Self where T: Display + 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type.","sig":null,"attributes":[{"value":"/ Get a value from a displayable type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65530,"byte_end":65570,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65575,"byte_end":65578,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to capture the given value as a well-known primitive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65583,"byte_end":65664,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/ before resorting to using its `Display` implementation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65669,"byte_end":65728,"line_start":31,"line_end":31,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66025,"byte_end":66035,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"from_debug","qualname":"<ValueBag>::from_debug","value":"pub fn from_debug<T>(&'v T) -> Self where T: Debug","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type without capturing support.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65948,"byte_end":66013,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66260,"byte_end":66272,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"from_display","qualname":"<ValueBag>::from_display","value":"pub fn from_display<T>(&'v T) -> Self where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a displayable type without capturing support.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66182,"byte_end":66248,"line_start":51,"line_end":51,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66514,"byte_end":66528,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"from_dyn_debug","qualname":"<ValueBag>::from_dyn_debug","value":"pub fn from_dyn_debug(&'v dyn Debug) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a debuggable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a debuggable type without capturing support.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66423,"byte_end":66488,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66493,"byte_end":66502,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66740,"byte_end":66756,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"from_dyn_display","qualname":"<ValueBag>::from_dyn_display","value":"pub fn from_dyn_display(&'v dyn Display) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a displayable type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a displayable type without capturing support.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66648,"byte_end":66714,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":66719,"byte_end":66728,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67639,"byte_end":67649,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"fill_debug","qualname":"<Slot>::fill_debug","value":"pub fn fill_debug<T>(Self, T) -> Result<(), Error> where T: Debug","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a debuggable value.","sig":null,"attributes":[{"value":"/ Fill the slot with a debuggable value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67492,"byte_end":67534,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67539,"byte_end":67542,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67547,"byte_end":67627,"line_start":111,"line_end":111,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67934,"byte_end":67946,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"fill_display","qualname":"<Slot>::fill_display","value":"pub fn fill_display<T>(Self, T) -> Result<(), Error> where T: Display","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a displayable value.","sig":null,"attributes":[{"value":"/ Fill the slot with a displayable value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67786,"byte_end":67829,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67834,"byte_end":67837,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67842,"byte_end":67922,"line_start":121,"line_end":121,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77113,"byte_end":77127,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"capture_serde1","qualname":"<ValueBag>::capture_serde1","value":"pub fn capture_serde1<T>(&'v T) -> Self where T: serde1_lib::Serialize +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a structured type.","sig":null,"attributes":[{"value":"/ Get a value from a structured type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":76906,"byte_end":76945,"line_start":16,"line_end":16,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":76950,"byte_end":76953,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to capture the given value as a well-known primitive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":76958,"byte_end":77039,"line_start":18,"line_end":18,"column_start":5,"column_end":86}},{"value":"/ before resorting to using its `Value` implementation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77044,"byte_end":77101,"line_start":19,"line_end":19,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77410,"byte_end":77421,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"from_serde1","qualname":"<ValueBag>::from_serde1","value":"pub fn from_serde1<T>(&'v T) -> Self where T: serde1_lib::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Get a value from a structured type without capturing support.\n","sig":null,"attributes":[{"value":"/ Get a value from a structured type without capturing support.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77333,"byte_end":77398,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":78065,"byte_end":78076,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"fill_serde1","qualname":"<Slot>::fill_serde1","value":"pub fn fill_serde1<T>(Self, T) -> Result<(), Error> where\nT: serde1_lib::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Fill the slot with a structured value.","sig":null,"attributes":[{"value":"/ Fill the slot with a structured value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77918,"byte_end":77960,"line_start":56,"line_end":56,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77965,"byte_end":77968,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The given value doesn't need to satisfy any particular lifetime constraints.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77973,"byte_end":78053,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":762},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":792},{"krate":0,"index":808}],"decl_id":null,"docs":" Value inspection.","sig":null,"attributes":[{"value":"/ Value inspection.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":94804,"byte_end":94825,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":94826,"byte_end":94829,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Visit`] trait provides a simple visitor API that can be used to inspect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":94830,"byte_end":94911,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ the structure of primitives stored in a [`ValueBag`](../struct.ValueBag.html).","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":94912,"byte_end":94994,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/ More complex datatypes can then be handled using `std::fmt`, `sval`, or `serde`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":94995,"byte_end":95079,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95080,"byte_end":95083,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95084,"byte_end":95091,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(feature = \"std\"))] fn main() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95092,"byte_end":95137,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/ #[cfg(feature = \"std\")]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95138,"byte_end":95165,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95166,"byte_end":95225,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95226,"byte_end":95270,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95271,"byte_end":95321,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95322,"byte_end":95371,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95372,"byte_end":95397,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/ use value_bag::{ValueBag, Error, visit::Visit};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95398,"byte_end":95449,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95450,"byte_end":95453,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95454,"byte_end":95503,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ struct MyVisit(Vec<u8>);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95504,"byte_end":95532,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ impl<'v> Visit<'v> for MyVisit {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95533,"byte_end":95569,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/     fn visit_any(&mut self, v: ValueBag) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95570,"byte_end":95637,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/         // Fallback to `Debug` if we didn't visit the value specially","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95638,"byte_end":95711,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/         write!(&mut self.0, \"{:?}\", v).map_err(|_| Error::msg(\"failed to write value\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95712,"byte_end":95803,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95804,"byte_end":95813,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95814,"byte_end":95817,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     fn visit_u64(&mut self, v: u64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95818,"byte_end":95880,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95881,"byte_end":95942,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95943,"byte_end":95961,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95962,"byte_end":95971,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95972,"byte_end":95975,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     fn visit_i64(&mut self, v: i64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":95976,"byte_end":96038,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96039,"byte_end":96100,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96101,"byte_end":96119,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96120,"byte_end":96129,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96130,"byte_end":96133,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     fn visit_f64(&mut self, v: f64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96134,"byte_end":96196,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96197,"byte_end":96257,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96258,"byte_end":96276,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96277,"byte_end":96286,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96287,"byte_end":96290,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     fn visit_str(&mut self, v: &str) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96291,"byte_end":96354,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96355,"byte_end":96386,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96387,"byte_end":96446,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96447,"byte_end":96478,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96479,"byte_end":96497,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96498,"byte_end":96507,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96508,"byte_end":96511,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     fn visit_bool(&mut self, v: bool) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96512,"byte_end":96576,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96577,"byte_end":96650,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96651,"byte_end":96669,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96670,"byte_end":96679,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96680,"byte_end":96685,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96686,"byte_end":96689,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96690,"byte_end":96728,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96729,"byte_end":96732,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut visitor = MyVisit(vec![]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96733,"byte_end":96771,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ value.visit(&mut visitor)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96772,"byte_end":96803,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96804,"byte_end":96816,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96817,"byte_end":96824,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96825,"byte_end":96832,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":777},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96953,"byte_end":96958,"line_start":67,"line_end":67,"column_start":11,"column_end":16},"name":"Visit","qualname":"::visit::Visit","value":"Visit<'v>","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":791}],"decl_id":null,"docs":" A visitor for a `ValueBag`.\n","sig":null,"attributes":[{"value":"/ A visitor for a `ValueBag`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96911,"byte_end":96942,"line_start":66,"line_end":66,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97326,"byte_end":97335,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"visit_any","qualname":"::visit::Visit::visit_any","value":"pub fn visit_any(&mut Self, ValueBag) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a `ValueBag`.","sig":null,"attributes":[{"value":"/ Visit a `ValueBag`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96969,"byte_end":96992,"line_start":68,"line_end":68,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":96997,"byte_end":97000,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This is the only required method on `Visit` and acts as a fallback for any","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97005,"byte_end":97083,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ more specific methods that aren't overridden.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97088,"byte_end":97137,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/ The `ValueBag` may be formatted using its `fmt::Debug` or `fmt::Display` implementation,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97142,"byte_end":97234,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ or serialized using its `sval::Value` or `serde::Serialize` implementation.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97239,"byte_end":97318,"line_start":73,"line_end":73,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97465,"byte_end":97474,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"visit_u64","qualname":"::visit::Visit::visit_u64","value":"pub fn visit_u64(&mut Self, u64) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit an unsigned integer.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned integer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97391,"byte_end":97421,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97426,"byte_end":97435,"line_start":77,"line_end":77,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97440,"byte_end":97457,"line_start":78,"line_end":78,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97719,"byte_end":97728,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"visit_i64","qualname":"::visit::Visit::visit_i64","value":"pub fn visit_i64(&mut Self, i64) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a signed integer.\n","sig":null,"attributes":[{"value":"/ Visit a signed integer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97648,"byte_end":97675,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97680,"byte_end":97689,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97694,"byte_end":97711,"line_start":87,"line_end":87,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97979,"byte_end":97989,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"visit_u128","qualname":"::visit::Visit::visit_u128","value":"pub fn visit_u128(&mut Self, u128) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a big unsigned integer.\n","sig":null,"attributes":[{"value":"/ Visit a big unsigned integer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97902,"byte_end":97935,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97940,"byte_end":97949,"line_start":95,"line_end":95,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":97954,"byte_end":97971,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98244,"byte_end":98254,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"visit_i128","qualname":"::visit::Visit::visit_i128","value":"pub fn visit_i128(&mut Self, i128) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a big signed integer.\n","sig":null,"attributes":[{"value":"/ Visit a big signed integer.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98169,"byte_end":98200,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98205,"byte_end":98214,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98219,"byte_end":98236,"line_start":105,"line_end":105,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98505,"byte_end":98514,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"visit_f64","qualname":"::visit::Visit::visit_f64","value":"pub fn visit_f64(&mut Self, f64) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a floating point.\n","sig":null,"attributes":[{"value":"/ Visit a floating point.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98434,"byte_end":98461,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98466,"byte_end":98475,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98480,"byte_end":98497,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98752,"byte_end":98762,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"visit_bool","qualname":"::visit::Visit::visit_bool","value":"pub fn visit_bool(&mut Self, bool) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a boolean.\n","sig":null,"attributes":[{"value":"/ Visit a boolean.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98688,"byte_end":98708,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98713,"byte_end":98722,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98727,"byte_end":98744,"line_start":123,"line_end":123,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99002,"byte_end":99011,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"visit_str","qualname":"::visit::Visit::visit_str","value":"pub fn visit_str(&mut Self, &str) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a string.\n","sig":null,"attributes":[{"value":"/ Visit a string.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98939,"byte_end":98958,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98963,"byte_end":98972,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":98977,"byte_end":98994,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99250,"byte_end":99268,"line_start":142,"line_end":142,"column_start":8,"column_end":26},"name":"visit_borrowed_str","qualname":"::visit::Visit::visit_borrowed_str","value":"pub fn visit_borrowed_str(&mut Self, &'v str) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a string.\n","sig":null,"attributes":[{"value":"/ Visit a string.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99187,"byte_end":99206,"line_start":139,"line_end":139,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99211,"byte_end":99220,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99225,"byte_end":99242,"line_start":141,"line_end":141,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99526,"byte_end":99536,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"visit_char","qualname":"::visit::Visit::visit_char","value":"pub fn visit_char(&mut Self, char) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit a Unicode character.\n","sig":null,"attributes":[{"value":"/ Visit a Unicode character.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99452,"byte_end":99482,"line_start":148,"line_end":148,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99487,"byte_end":99496,"line_start":149,"line_end":149,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99501,"byte_end":99518,"line_start":150,"line_end":150,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99849,"byte_end":99860,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"visit_error","qualname":"::visit::Visit::visit_error","value":"pub fn visit_error(&mut Self, &dyn crate::std::error::Error + 'static)\n-> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit an error.\n","sig":null,"attributes":[{"value":"/ Visit an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99756,"byte_end":99775,"line_start":158,"line_end":158,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99780,"byte_end":99789,"line_start":159,"line_end":159,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99794,"byte_end":99811,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"error\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":99816,"byte_end":99841,"line_start":161,"line_end":161,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":100248,"byte_end":100268,"line_start":173,"line_end":173,"column_start":8,"column_end":28},"name":"visit_borrowed_error","qualname":"::visit::Visit::visit_borrowed_error","value":"pub fn visit_borrowed_error(&mut Self,\n&'v dyn crate::std::error::Error + 'static) -> Result<(), Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Visit an error.\n","sig":null,"attributes":[{"value":"/ Visit an error.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":100155,"byte_end":100174,"line_start":169,"line_end":169,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":100179,"byte_end":100188,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"cfg(not(test))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":100193,"byte_end":100210,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"error\")","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":100215,"byte_end":100240,"line_start":172,"line_end":172,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102618,"byte_end":102623,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"visit","qualname":"<ValueBag>::visit","value":"pub fn visit<impl Visit<'v>: Visit>(&Self, impl Visit<'v>)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Visit this value using a simple visitor.","sig":null,"attributes":[{"value":"/ Visit this value using a simple visitor.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102362,"byte_end":102406,"line_start":258,"line_end":258,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102411,"byte_end":102414,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The visitor isn't strictly required to inspect the contents of a value bag.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102419,"byte_end":102498,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ It's useful for simple cases where a full framework like `serde` or `sval`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102503,"byte_end":102581,"line_start":261,"line_end":261,"column_start":5,"column_end":83}},{"value":"/ isn't necessary.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102586,"byte_end":102606,"line_start":262,"line_end":262,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10379,"byte_end":10387,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"ValueBag","qualname":"::ValueBag","value":"ValueBag {  }","parent":null,"children":[{"krate":0,"index":1124}],"decl_id":null,"docs":" A dynamic structured value.","sig":null,"attributes":[{"value":"/ A dynamic structured value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":753,"byte_end":784,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":785,"byte_end":788,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Capturing values","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":789,"byte_end":811,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":812,"byte_end":815,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There are a few ways to capture a value:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":816,"byte_end":860,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":861,"byte_end":864,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - Using the `ValueBag::capture_*` and `ValueBag::from_*` methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":865,"byte_end":934,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ - Using the standard `From` trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":935,"byte_end":973,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ - Using the `Fill` API.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":974,"byte_end":1001,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1002,"byte_end":1005,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::capture_*` methods","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1006,"byte_end":1052,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ `ValueBag` offers a few constructor methods that capture values of different kinds.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1057,"byte_end":1144,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ These methods require a `T: 'static` to support downcasting.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1145,"byte_end":1209,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1210,"byte_end":1213,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1214,"byte_end":1221,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1222,"byte_end":1250,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::capture_debug(&42i32);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1255,"byte_end":1303,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1304,"byte_end":1307,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42), value.to_i64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1308,"byte_end":1349,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1350,"byte_end":1357,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1358,"byte_end":1361,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Capturing a value using these methods will retain type information so that","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1362,"byte_end":1440,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ the contents of the bag can be serialized using an appropriate type.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1441,"byte_end":1513,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1514,"byte_end":1517,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ For cases where the `'static` bound can't be satisfied, there's also a few","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1518,"byte_end":1596,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ constructors that exclude it.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1597,"byte_end":1630,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1635,"byte_end":1642,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1643,"byte_end":1669,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1670,"byte_end":1698,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1699,"byte_end":1702,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_debug(&42i32);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1703,"byte_end":1748,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1749,"byte_end":1752,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1753,"byte_end":1790,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1791,"byte_end":1798,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1799,"byte_end":1802,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ These `ValueBag::from_*` methods are lossy though and `ValueBag::capture_*` should be preferred.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1803,"byte_end":1903,"line_start":70,"line_end":70,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1904,"byte_end":1907,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## Using the standard `From` trait","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1908,"byte_end":1946,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1947,"byte_end":1950,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Primitive types can be converted into a `ValueBag` using the standard `From` trait.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":1951,"byte_end":2038,"line_start":74,"line_end":74,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2039,"byte_end":2042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2051,"byte_end":2079,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2080,"byte_end":2083,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i32);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2084,"byte_end":2122,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2123,"byte_end":2126,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42), value.to_i64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2127,"byte_end":2168,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2169,"byte_end":2176,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ## Using the `Fill` API","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2181,"byte_end":2208,"line_start":84,"line_end":84,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2209,"byte_end":2212,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`fill`] module provides a way to bridge APIs that may not be directly","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2213,"byte_end":2291,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ compatible with other constructor methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2292,"byte_end":2338,"line_start":87,"line_end":87,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ The `Fill` trait is automatically implemented for closures, so can usually","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2343,"byte_end":2421,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ be used in libraries that can't implement the trait themselves.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2422,"byte_end":2489,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2494,"byte_end":2501,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use value_bag::{ValueBag, fill::Slot};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2502,"byte_end":2544,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&|slot: Slot| {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2549,"byte_end":2600,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     #[derive(Debug)]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2601,"byte_end":2625,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/     struct MyShortLivedValue;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2626,"byte_end":2659,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2660,"byte_end":2663,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/     slot.fill_debug(&MyShortLivedValue)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2664,"byte_end":2707,"line_start":99,"line_end":99,"column_start":1,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2708,"byte_end":2715,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"MyShortLivedValue\", format!(\"{:?}\", value));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2720,"byte_end":2780,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2781,"byte_end":2788,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2789,"byte_end":2792,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The trait can also be implemented manually:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2793,"byte_end":2840,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2841,"byte_end":2844,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2845,"byte_end":2852,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2853,"byte_end":2879,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/ use value_bag::{ValueBag, Error, fill::{Slot, Fill}};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2880,"byte_end":2937,"line_start":109,"line_end":109,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2938,"byte_end":2941,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ struct FillDebug;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2942,"byte_end":2963,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2964,"byte_end":2967,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ impl Fill for FillDebug {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2968,"byte_end":2997,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/     fn fill(&self, slot: Slot) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":2998,"byte_end":3055,"line_start":114,"line_end":114,"column_start":1,"column_end":58}},{"value":"/         slot.fill_debug(&42i32 as &dyn Debug)","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3056,"byte_end":3105,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3106,"byte_end":3115,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3116,"byte_end":3121,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from_fill(&FillDebug);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3126,"byte_end":3174,"line_start":119,"line_end":119,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3175,"byte_end":3178,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(None, value.to_i64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3179,"byte_end":3216,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3217,"byte_end":3224,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3225,"byte_end":3228,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Inspecting values","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3229,"byte_end":3252,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3253,"byte_end":3256,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Once you have a `ValueBag` there are also a few ways to inspect it:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3257,"byte_end":3328,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3329,"byte_end":3332,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - Using `std::fmt`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3333,"byte_end":3355,"line_start":128,"line_end":128,"column_start":1,"column_end":23}},{"value":"/ - Using `sval`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3356,"byte_end":3374,"line_start":129,"line_end":129,"column_start":1,"column_end":19}},{"value":"/ - Using `serde`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3375,"byte_end":3394,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/ - Using the `ValueBag::visit` method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3395,"byte_end":3436,"line_start":131,"line_end":131,"column_start":1,"column_end":42}},{"value":"/ - Using the `ValueBag::to_*` methods.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3437,"byte_end":3478,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/ - Using the `ValueBag::downcast_ref` method.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3479,"byte_end":3527,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3528,"byte_end":3531,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::visit` method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3532,"byte_end":3573,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3574,"byte_end":3577,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ The [`visit`] module provides a simple visitor API that can be used to inspect","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3578,"byte_end":3660,"line_start":137,"line_end":137,"column_start":1,"column_end":83}},{"value":"/ the structure of primitives stored in a `ValueBag`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3661,"byte_end":3716,"line_start":138,"line_end":138,"column_start":1,"column_end":56}},{"value":"/ More complex datatypes can then be handled using `std::fmt`, `sval`, or `serde`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3717,"byte_end":3801,"line_start":139,"line_end":139,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3802,"byte_end":3805,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3806,"byte_end":3813,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(feature = \"std\"))] fn main() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3814,"byte_end":3859,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ #[cfg(feature = \"std\")]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3860,"byte_end":3887,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3888,"byte_end":3947,"line_start":144,"line_end":144,"column_start":1,"column_end":60}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3948,"byte_end":3992,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":3993,"byte_end":4043,"line_start":146,"line_end":146,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4044,"byte_end":4093,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4094,"byte_end":4119,"line_start":148,"line_end":148,"column_start":1,"column_end":26}},{"value":"/ use value_bag::{ValueBag, Error, visit::Visit};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4120,"byte_end":4171,"line_start":149,"line_end":149,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4172,"byte_end":4175,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4176,"byte_end":4225,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/ struct MyVisit(Vec<u8>);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4226,"byte_end":4254,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ impl<'v> Visit<'v> for MyVisit {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4255,"byte_end":4291,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/     fn visit_any(&mut self, v: ValueBag) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4292,"byte_end":4359,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/         // Fallback to `Debug` if we didn't visit the value specially","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4360,"byte_end":4433,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/         write!(&mut self.0, \"{:?}\", v).map_err(|_| Error::msg(\"failed to write value\"))","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4434,"byte_end":4525,"line_start":156,"line_end":156,"column_start":1,"column_end":92}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4526,"byte_end":4535,"line_start":157,"line_end":157,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4536,"byte_end":4539,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/     fn visit_u64(&mut self, v: u64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4540,"byte_end":4602,"line_start":159,"line_end":159,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4603,"byte_end":4664,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4665,"byte_end":4683,"line_start":161,"line_end":161,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4684,"byte_end":4693,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4694,"byte_end":4697,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     fn visit_i64(&mut self, v: i64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4698,"byte_end":4760,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4761,"byte_end":4822,"line_start":165,"line_end":165,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4823,"byte_end":4841,"line_start":166,"line_end":166,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4842,"byte_end":4851,"line_start":167,"line_end":167,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4852,"byte_end":4855,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     fn visit_f64(&mut self, v: f64) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4856,"byte_end":4918,"line_start":169,"line_end":169,"column_start":1,"column_end":63}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4919,"byte_end":4979,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4980,"byte_end":4998,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":4999,"byte_end":5008,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5009,"byte_end":5012,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/     fn visit_str(&mut self, v: &str) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5013,"byte_end":5076,"line_start":174,"line_end":174,"column_start":1,"column_end":64}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5077,"byte_end":5108,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5109,"byte_end":5168,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5169,"byte_end":5200,"line_start":177,"line_end":177,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5201,"byte_end":5219,"line_start":178,"line_end":178,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5220,"byte_end":5229,"line_start":179,"line_end":179,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5230,"byte_end":5233,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     fn visit_bool(&mut self, v: bool) -> Result<(), Error> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5234,"byte_end":5298,"line_start":181,"line_end":181,"column_start":1,"column_end":65}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5299,"byte_end":5372,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5373,"byte_end":5391,"line_start":183,"line_end":183,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5392,"byte_end":5401,"line_start":184,"line_end":184,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5402,"byte_end":5407,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5408,"byte_end":5411,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5412,"byte_end":5450,"line_start":187,"line_end":187,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5451,"byte_end":5454,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let mut visitor = MyVisit(vec![]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5455,"byte_end":5493,"line_start":189,"line_end":189,"column_start":1,"column_end":39}},{"value":"/ value.visit(&mut visitor)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5494,"byte_end":5525,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5526,"byte_end":5538,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5539,"byte_end":5546,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5547,"byte_end":5554,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5555,"byte_end":5558,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Using `std::fmt`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5559,"byte_end":5582,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5583,"byte_end":5586,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Any `ValueBag` can be formatted using the `std::fmt` machinery as either `Debug`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5587,"byte_end":5671,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"/ or `Display`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5672,"byte_end":5689,"line_start":198,"line_end":198,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5690,"byte_end":5693,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5694,"byte_end":5701,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5702,"byte_end":5730,"line_start":201,"line_end":201,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5731,"byte_end":5734,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(true);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5735,"byte_end":5772,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5773,"byte_end":5776,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"true\", format!(\"{:?}\", value));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5777,"byte_end":5824,"line_start":205,"line_end":205,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5825,"byte_end":5832,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5833,"byte_end":5836,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ## Using `sval`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5837,"byte_end":5856,"line_start":208,"line_end":208,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5857,"byte_end":5860,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ When the `sval1` feature is enabled, any `ValueBag` can be serialized using `sval`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5861,"byte_end":5948,"line_start":210,"line_end":210,"column_start":1,"column_end":88}},{"value":"/ This makes it possible to visit any typed structure captured in the `ValueBag`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":5949,"byte_end":6032,"line_start":211,"line_end":211,"column_start":1,"column_end":84}},{"value":"/ including complex datatypes like maps and sequences.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6033,"byte_end":6089,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6090,"byte_end":6093,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `sval` doesn't need to allocate so can be used in no-std environments.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6094,"byte_end":6168,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6169,"byte_end":6172,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ First, enable the `sval1` feature in your `Cargo.toml`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6173,"byte_end":6232,"line_start":216,"line_end":216,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6233,"byte_end":6236,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6237,"byte_end":6248,"line_start":218,"line_end":218,"column_start":1,"column_end":12}},{"value":"/ [dependencies.value-bag]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6249,"byte_end":6277,"line_start":219,"line_end":219,"column_start":1,"column_end":29}},{"value":"/ features = [\"sval1\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6278,"byte_end":6302,"line_start":220,"line_end":220,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6303,"byte_end":6310,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ Then stream the contents of the `ValueBag` using `sval`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6315,"byte_end":6375,"line_start":223,"line_end":223,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6376,"byte_end":6379,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6380,"byte_end":6387,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"sval1\")))] fn main() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6388,"byte_end":6457,"line_start":226,"line_end":226,"column_start":1,"column_end":70}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"sval1\"))]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6458,"byte_end":6509,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6510,"byte_end":6569,"line_start":228,"line_end":228,"column_start":1,"column_end":60}},{"value":"/ # extern crate sval1_json as sval_json;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6570,"byte_end":6613,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6614,"byte_end":6642,"line_start":230,"line_end":230,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6643,"byte_end":6646,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6647,"byte_end":6685,"line_start":232,"line_end":232,"column_start":1,"column_end":39}},{"value":"/ let json = sval_json::to_string(value)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6686,"byte_end":6730,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6731,"byte_end":6743,"line_start":234,"line_end":234,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6744,"byte_end":6751,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6752,"byte_end":6759,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6760,"byte_end":6763,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6764,"byte_end":6771,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"sval1\")))] fn main() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6772,"byte_end":6841,"line_start":239,"line_end":239,"column_start":1,"column_end":70}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"sval1\"))]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6842,"byte_end":6893,"line_start":240,"line_end":240,"column_start":1,"column_end":52}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6894,"byte_end":6953,"line_start":241,"line_end":241,"column_start":1,"column_end":60}},{"value":"/ # extern crate sval1_lib as sval;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6954,"byte_end":6991,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ # fn escape(buf: &[u8]) -> &[u8] { buf }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":6992,"byte_end":7036,"line_start":243,"line_end":243,"column_start":1,"column_end":45}},{"value":"/ # fn itoa_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7037,"byte_end":7087,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ # fn ryu_fmt<T>(num: T) -> Vec<u8> { vec![] }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7088,"byte_end":7137,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7138,"byte_end":7166,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ use sval::stream::{self, Stream};","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7167,"byte_end":7204,"line_start":247,"line_end":247,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7205,"byte_end":7208,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ // Implement some simple custom serialization","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7209,"byte_end":7258,"line_start":249,"line_end":249,"column_start":1,"column_end":50}},{"value":"/ struct MyStream(Vec<u8>);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7259,"byte_end":7288,"line_start":250,"line_end":250,"column_start":1,"column_end":30}},{"value":"/ impl Stream for MyStream {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7289,"byte_end":7319,"line_start":251,"line_end":251,"column_start":1,"column_end":31}},{"value":"/     fn u64(&mut self, v: u64) -> stream::Result {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7320,"byte_end":7373,"line_start":252,"line_end":252,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7374,"byte_end":7435,"line_start":253,"line_end":253,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7436,"byte_end":7454,"line_start":254,"line_end":254,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7455,"byte_end":7464,"line_start":255,"line_end":255,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7465,"byte_end":7468,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     fn i64(&mut self, v: i64) -> stream::Result {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7469,"byte_end":7522,"line_start":257,"line_end":257,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(itoa_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7523,"byte_end":7584,"line_start":258,"line_end":258,"column_start":1,"column_end":62}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7585,"byte_end":7603,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7604,"byte_end":7613,"line_start":260,"line_end":260,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7614,"byte_end":7617,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     fn f64(&mut self, v: f64) -> stream::Result {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7618,"byte_end":7671,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/         self.0.extend_from_slice(ryu_fmt(v).as_slice());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7672,"byte_end":7732,"line_start":263,"line_end":263,"column_start":1,"column_end":61}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7733,"byte_end":7751,"line_start":264,"line_end":264,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7752,"byte_end":7761,"line_start":265,"line_end":265,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     fn str(&mut self, v: &str) -> stream::Result {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7766,"byte_end":7820,"line_start":267,"line_end":267,"column_start":1,"column_end":55}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7821,"byte_end":7852,"line_start":268,"line_end":268,"column_start":1,"column_end":32}},{"value":"/         self.0.extend_from_slice(escape(v.as_bytes()));","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7853,"byte_end":7912,"line_start":269,"line_end":269,"column_start":1,"column_end":60}},{"value":"/         self.0.push(b'\\\"');","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7913,"byte_end":7944,"line_start":270,"line_end":270,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7945,"byte_end":7963,"line_start":271,"line_end":271,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7964,"byte_end":7973,"line_start":272,"line_end":272,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7974,"byte_end":7977,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/     fn bool(&mut self, v: bool) -> stream::Result {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":7978,"byte_end":8033,"line_start":274,"line_end":274,"column_start":1,"column_end":56}},{"value":"/         self.0.extend_from_slice(if v { b\"true\" } else { b\"false\" });","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8034,"byte_end":8107,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/         Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8108,"byte_end":8126,"line_start":276,"line_end":276,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8127,"byte_end":8136,"line_start":277,"line_end":277,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8137,"byte_end":8142,"line_start":278,"line_end":278,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8143,"byte_end":8146,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8147,"byte_end":8185,"line_start":280,"line_end":280,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8186,"byte_end":8189,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ let mut stream = MyStream(vec![]);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8190,"byte_end":8228,"line_start":282,"line_end":282,"column_start":1,"column_end":39}},{"value":"/ sval::stream(&mut stream, &value)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8229,"byte_end":8268,"line_start":283,"line_end":283,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8269,"byte_end":8281,"line_start":284,"line_end":284,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8282,"byte_end":8289,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8290,"byte_end":8297,"line_start":286,"line_end":286,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ## Using `serde`","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8302,"byte_end":8322,"line_start":288,"line_end":288,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8323,"byte_end":8326,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ When the `serde1` feature is enabled, any `ValueBag` can be serialized using `serde`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8327,"byte_end":8416,"line_start":290,"line_end":290,"column_start":1,"column_end":90}},{"value":"/ This makes it possible to visit any typed structure captured in the `ValueBag`,","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8417,"byte_end":8500,"line_start":291,"line_end":291,"column_start":1,"column_end":84}},{"value":"/ including complex datatypes like maps and sequences.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8501,"byte_end":8557,"line_start":292,"line_end":292,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8558,"byte_end":8561,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ `serde` needs a few temporary allocations, so also brings in the `std` feature.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8562,"byte_end":8645,"line_start":294,"line_end":294,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8646,"byte_end":8649,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ First, enable the `serde1` feature in your `Cargo.toml`:","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8650,"byte_end":8710,"line_start":296,"line_end":296,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8711,"byte_end":8714,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8715,"byte_end":8726,"line_start":298,"line_end":298,"column_start":1,"column_end":12}},{"value":"/ [dependencies.value-bag]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8727,"byte_end":8755,"line_start":299,"line_end":299,"column_start":1,"column_end":29}},{"value":"/ features = [\"serde1\"]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8756,"byte_end":8781,"line_start":300,"line_end":300,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8782,"byte_end":8789,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8790,"byte_end":8793,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Then stream the contents of the `ValueBag` using `serde`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8794,"byte_end":8855,"line_start":303,"line_end":303,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8856,"byte_end":8859,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8860,"byte_end":8867,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ #[cfg(not(all(feature = \"std\", feature = \"serde1\")))] fn main() {}","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8868,"byte_end":8938,"line_start":306,"line_end":306,"column_start":1,"column_end":71}},{"value":"/ #[cfg(all(feature = \"std\", feature = \"serde1\"))]","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8939,"byte_end":8991,"line_start":307,"line_end":307,"column_start":1,"column_end":53}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":8992,"byte_end":9051,"line_start":308,"line_end":308,"column_start":1,"column_end":60}},{"value":"/ # extern crate serde1_json as serde_json;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9052,"byte_end":9097,"line_start":309,"line_end":309,"column_start":1,"column_end":46}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9098,"byte_end":9126,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9127,"byte_end":9130,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::from(42i64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9131,"byte_end":9169,"line_start":312,"line_end":312,"column_start":1,"column_end":39}},{"value":"/ let json = serde_json::to_string(&value)?;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9170,"byte_end":9216,"line_start":313,"line_end":313,"column_start":1,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9217,"byte_end":9229,"line_start":314,"line_end":314,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9230,"byte_end":9237,"line_start":315,"line_end":315,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9238,"byte_end":9245,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9246,"byte_end":9249,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Also see [`serde.rs`](https://serde.rs) for more examples of writing your own serializers.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9250,"byte_end":9344,"line_start":318,"line_end":318,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9345,"byte_end":9348,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::to_*` methods","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9349,"byte_end":9390,"line_start":320,"line_end":320,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9391,"byte_end":9394,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ `ValueBag` provides a set of methods for attempting to pull a concrete value out.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9395,"byte_end":9480,"line_start":322,"line_end":322,"column_start":1,"column_end":86}},{"value":"/ These are useful for ad-hoc analysis but aren't intended for exhaustively serializing","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9481,"byte_end":9570,"line_start":323,"line_end":323,"column_start":1,"column_end":90}},{"value":"/ the contents of a `ValueBag`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9571,"byte_end":9604,"line_start":324,"line_end":324,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9605,"byte_end":9608,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9609,"byte_end":9616,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9617,"byte_end":9645,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9646,"byte_end":9649,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ let value = ValueBag::capture_display(&42u64);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9650,"byte_end":9700,"line_start":329,"line_end":329,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9701,"byte_end":9704,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(42u64), value.to_u64());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9705,"byte_end":9749,"line_start":331,"line_end":331,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9750,"byte_end":9757,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9758,"byte_end":9761,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ## Using the `ValueBag::downcast_ref` method","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9762,"byte_end":9810,"line_start":334,"line_end":334,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9811,"byte_end":9814,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ When a `ValueBag` is created using one of the `capture_*` constructors, it can be downcast","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9815,"byte_end":9909,"line_start":336,"line_end":336,"column_start":1,"column_end":95}},{"value":"/ back to its original value.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9910,"byte_end":9941,"line_start":337,"line_end":337,"column_start":1,"column_end":32}},{"value":"/ This can also be useful for ad-hoc analysis where there's a common possible non-primitive","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":9942,"byte_end":10035,"line_start":338,"line_end":338,"column_start":1,"column_end":94}},{"value":"/ type that could be captured.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10036,"byte_end":10068,"line_start":339,"line_end":339,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10069,"byte_end":10072,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10073,"byte_end":10080,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug)] struct SystemTime;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10081,"byte_end":10122,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/ # fn now() -> SystemTime { SystemTime }","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10123,"byte_end":10166,"line_start":343,"line_end":343,"column_start":1,"column_end":44}},{"value":"/ use value_bag::ValueBag;","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10167,"byte_end":10195,"line_start":344,"line_end":344,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10196,"byte_end":10199,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ let timestamp = now();","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10200,"byte_end":10226,"line_start":346,"line_end":346,"column_start":1,"column_end":27}},{"value":"/ let value = ValueBag::capture_debug(&timestamp);","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10227,"byte_end":10279,"line_start":347,"line_end":347,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10280,"byte_end":10283,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ assert!(value.downcast_ref::<SystemTime>().is_some());","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10284,"byte_end":10342,"line_start":349,"line_end":349,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10343,"byte_end":10350,"line_start":350,"line_end":350,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10540,"byte_end":10546,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"by_ref","qualname":"<ValueBag>::by_ref","value":"pub fn by_ref<'u>(&'u Self) -> ValueBag","parent":null,"children":[],"decl_id":null,"docs":" Get a `ValueBag` from a reference to a `ValueBag`.\n","sig":null,"attributes":[{"value":"/ Get a `ValueBag` from a reference to a `ValueBag`.","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10460,"byte_end":10514,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10519,"byte_end":10528,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11820,"byte_end":11825,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12005,"byte_end":12010,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12332,"byte_end":12337,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12608,"byte_end":12613,"line_start":51,"line_end":51,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12895,"byte_end":12900,"line_start":63,"line_end":63,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12934,"byte_end":12939,"line_start":65,"line_end":65,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14650,"byte_end":14651,"line_start":56,"line_end":56,"column_start":18,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14953,"byte_end":14957,"line_start":70,"line_end":70,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15089,"byte_end":15093,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19085,"byte_end":19093,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19228,"byte_end":19236,"line_start":50,"line_end":50,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19372,"byte_end":19380,"line_start":57,"line_end":57,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19620,"byte_end":19628,"line_start":70,"line_end":70,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32794,"byte_end":32802,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":36147,"byte_end":36155,"line_start":118,"line_end":118,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":36338,"byte_end":36349,"line_start":124,"line_end":124,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":40204,"byte_end":40208,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":42948,"byte_end":42956,"line_start":354,"line_end":354,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43397,"byte_end":43401,"line_start":366,"line_end":366,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61338,"byte_end":61346,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62327,"byte_end":62328,"line_start":46,"line_end":46,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62479,"byte_end":62483,"line_start":56,"line_end":56,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fill.rs","byte_start":64541,"byte_end":64549,"line_start":4,"line_end":4,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65102,"byte_end":65110,"line_start":14,"line_end":14,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67047,"byte_end":67048,"line_start":83,"line_end":83,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67335,"byte_end":67336,"line_start":98,"line_end":98,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67473,"byte_end":67477,"line_start":108,"line_end":108,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":68142,"byte_end":68150,"line_start":132,"line_end":132,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":68339,"byte_end":68351,"line_start":136,"line_end":136,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":70751,"byte_end":70759,"line_start":229,"line_end":229,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":70950,"byte_end":70964,"line_start":233,"line_end":233,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":76887,"byte_end":76895,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77762,"byte_end":77763,"line_start":45,"line_end":45,"column_start":64,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77899,"byte_end":77903,"line_start":55,"line_end":55,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":78263,"byte_end":78271,"line_start":67,"line_end":67,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":78594,"byte_end":78607,"line_start":80,"line_end":80,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":79293,"byte_end":79306,"line_start":101,"line_end":101,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":79535,"byte_end":79549,"line_start":108,"line_end":108,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":83385,"byte_end":83402,"line_start":223,"line_end":223,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89043,"byte_end":89048,"line_start":409,"line_end":409,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89196,"byte_end":89207,"line_start":418,"line_end":418,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89344,"byte_end":89355,"line_start":424,"line_end":424,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89494,"byte_end":89505,"line_start":433,"line_end":433,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":23552,"byte_end":23560,"line_start":81,"line_end":81,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":24035,"byte_end":24043,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27219,"byte_end":27227,"line_start":182,"line_end":182,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27331,"byte_end":27339,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27458,"byte_end":27466,"line_start":196,"line_end":196,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27586,"byte_end":27594,"line_start":203,"line_end":203,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27714,"byte_end":27722,"line_start":210,"line_end":210,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27837,"byte_end":27845,"line_start":217,"line_end":217,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27966,"byte_end":27974,"line_start":224,"line_end":224,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28091,"byte_end":28099,"line_start":231,"line_end":231,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28217,"byte_end":28225,"line_start":238,"line_end":238,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28343,"byte_end":28351,"line_start":245,"line_end":245,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28464,"byte_end":28472,"line_start":252,"line_end":252,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28592,"byte_end":28600,"line_start":259,"line_end":259,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28717,"byte_end":28725,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28836,"byte_end":28844,"line_start":273,"line_end":273,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28955,"byte_end":28963,"line_start":280,"line_end":280,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29077,"byte_end":29085,"line_start":287,"line_end":287,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29200,"byte_end":29208,"line_start":294,"line_end":294,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29320,"byte_end":29328,"line_start":301,"line_end":301,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29456,"byte_end":29464,"line_start":308,"line_end":308,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29593,"byte_end":29601,"line_start":315,"line_end":315,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29730,"byte_end":29738,"line_start":322,"line_end":322,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29861,"byte_end":29869,"line_start":329,"line_end":329,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29996,"byte_end":30004,"line_start":336,"line_end":336,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30134,"byte_end":30142,"line_start":343,"line_end":343,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30268,"byte_end":30276,"line_start":350,"line_end":350,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30403,"byte_end":30411,"line_start":357,"line_end":357,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30538,"byte_end":30546,"line_start":364,"line_end":364,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30667,"byte_end":30675,"line_start":371,"line_end":371,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30800,"byte_end":30808,"line_start":378,"line_end":378,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30937,"byte_end":30945,"line_start":385,"line_end":385,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31071,"byte_end":31079,"line_start":392,"line_end":392,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31199,"byte_end":31207,"line_start":399,"line_end":399,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31327,"byte_end":31335,"line_start":406,"line_end":406,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31462,"byte_end":31470,"line_start":413,"line_end":413,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31707,"byte_end":31715,"line_start":429,"line_end":429,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102343,"byte_end":102351,"line_start":257,"line_end":257,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102754,"byte_end":102761,"line_start":266,"line_end":266,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10441,"byte_end":10449,"line_start":356,"line_end":356,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":626,"byte_end":630,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":35}},{"kind":"Mod","span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":665,"byte_end":670,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":762}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":11820,"byte_end":11825,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12005,"byte_end":12010,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12332,"byte_end":12337,"line_start":38,"line_end":38,"column_start":27,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12608,"byte_end":12613,"line_start":51,"line_end":51,"column_start":10,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12895,"byte_end":12900,"line_start":63,"line_end":63,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":841},"to":{"krate":4,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/error.rs","byte_start":12934,"byte_end":12939,"line_start":65,"line_end":65,"column_start":30,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":841},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14650,"byte_end":14651,"line_start":56,"line_end":56,"column_start":18,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":52},"to":{"krate":0,"index":49}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":14953,"byte_end":14957,"line_start":70,"line_end":70,"column_start":29,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":54},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/fill.rs","byte_start":15089,"byte_end":15093,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19085,"byte_end":19093,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19228,"byte_end":19236,"line_start":50,"line_end":50,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19372,"byte_end":19380,"line_start":57,"line_end":57,"column_start":29,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/impls.rs","byte_start":19620,"byte_end":19628,"line_start":70,"line_end":70,"column_start":35,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":32794,"byte_end":32802,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":36147,"byte_end":36155,"line_start":118,"line_end":118,"column_start":10,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":36338,"byte_end":36349,"line_start":124,"line_end":124,"column_start":42,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":199},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":40204,"byte_end":40208,"line_start":255,"line_end":255,"column_start":10,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":42948,"byte_end":42956,"line_start":354,"line_end":354,"column_start":14,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/cast/mod.rs","byte_start":43397,"byte_end":43401,"line_start":366,"line_end":366,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":61338,"byte_end":61346,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62327,"byte_end":62328,"line_start":46,"line_end":46,"column_start":51,"column_end":52},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":299}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/error.rs","byte_start":62479,"byte_end":62483,"line_start":56,"line_end":56,"column_start":14,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fill.rs","byte_start":64541,"byte_end":64549,"line_start":4,"line_end":4,"column_start":10,"column_end":18},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":65102,"byte_end":65110,"line_start":14,"line_end":14,"column_start":10,"column_end":18},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67047,"byte_end":67048,"line_start":83,"line_end":83,"column_start":53,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":373},"to":{"krate":0,"index":369}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67335,"byte_end":67336,"line_start":98,"line_end":98,"column_start":49,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":67473,"byte_end":67477,"line_start":108,"line_end":108,"column_start":14,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":68142,"byte_end":68150,"line_start":132,"line_end":132,"column_start":20,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":68339,"byte_end":68351,"line_start":136,"line_end":136,"column_start":54,"column_end":66},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":70751,"byte_end":70759,"line_start":229,"line_end":229,"column_start":22,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1122},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/fmt.rs","byte_start":70950,"byte_end":70964,"line_start":233,"line_end":233,"column_start":54,"column_end":68},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":428},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":76887,"byte_end":76895,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77762,"byte_end":77763,"line_start":45,"line_end":45,"column_start":64,"column_end":65},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":494},"to":{"krate":0,"index":490}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":77899,"byte_end":77903,"line_start":55,"line_end":55,"column_start":14,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":78263,"byte_end":78271,"line_start":67,"line_end":67,"column_start":36,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1122},"to":{"krate":21,"index":2134}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":78594,"byte_end":78607,"line_start":80,"line_end":80,"column_start":17,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":79293,"byte_end":79306,"line_start":101,"line_end":101,"column_start":45,"column_end":58},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":507},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":79535,"byte_end":79549,"line_start":108,"line_end":108,"column_start":42,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":522},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":83385,"byte_end":83402,"line_start":223,"line_end":223,"column_start":45,"column_end":62},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":548},"to":{"krate":21,"index":2137}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89043,"byte_end":89048,"line_start":409,"line_end":409,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89196,"byte_end":89207,"line_start":418,"line_end":418,"column_start":23,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89344,"byte_end":89355,"line_start":424,"line_end":424,"column_start":33,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1058},"to":{"krate":21,"index":9583}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/serde/v1.rs","byte_start":89494,"byte_end":89505,"line_start":433,"line_end":433,"column_start":36,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1058},"to":{"krate":4,"index":2546}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":23552,"byte_end":23560,"line_start":81,"line_end":81,"column_start":10,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":24035,"byte_end":24043,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27219,"byte_end":27227,"line_start":182,"line_end":182,"column_start":23,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27331,"byte_end":27339,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27458,"byte_end":27466,"line_start":196,"line_end":196,"column_start":24,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27586,"byte_end":27594,"line_start":203,"line_end":203,"column_start":24,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27714,"byte_end":27722,"line_start":210,"line_end":210,"column_start":24,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27837,"byte_end":27845,"line_start":217,"line_end":217,"column_start":26,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":27966,"byte_end":27974,"line_start":224,"line_end":224,"column_start":23,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28091,"byte_end":28099,"line_start":231,"line_end":231,"column_start":24,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28217,"byte_end":28225,"line_start":238,"line_end":238,"column_start":24,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28343,"byte_end":28351,"line_start":245,"line_end":245,"column_start":24,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28464,"byte_end":28472,"line_start":252,"line_end":252,"column_start":26,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28592,"byte_end":28600,"line_start":259,"line_end":259,"column_start":24,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28717,"byte_end":28725,"line_start":266,"line_end":266,"column_start":24,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28836,"byte_end":28844,"line_start":273,"line_end":273,"column_start":25,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":28955,"byte_end":28963,"line_start":280,"line_end":280,"column_start":25,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29077,"byte_end":29085,"line_start":287,"line_end":287,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29200,"byte_end":29208,"line_start":294,"line_end":294,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29320,"byte_end":29328,"line_start":301,"line_end":301,"column_start":27,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29456,"byte_end":29464,"line_start":308,"line_end":308,"column_start":28,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29593,"byte_end":29601,"line_start":315,"line_end":315,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29730,"byte_end":29738,"line_start":322,"line_end":322,"column_start":28,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29861,"byte_end":29869,"line_start":329,"line_end":329,"column_start":29,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":29996,"byte_end":30004,"line_start":336,"line_end":336,"column_start":30,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30134,"byte_end":30142,"line_start":343,"line_end":343,"column_start":27,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30268,"byte_end":30276,"line_start":350,"line_end":350,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30403,"byte_end":30411,"line_start":357,"line_end":357,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30538,"byte_end":30546,"line_start":364,"line_end":364,"column_start":28,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30667,"byte_end":30675,"line_start":371,"line_end":371,"column_start":29,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30800,"byte_end":30808,"line_start":378,"line_end":378,"column_start":30,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":30937,"byte_end":30945,"line_start":385,"line_end":385,"column_start":28,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31071,"byte_end":31079,"line_start":392,"line_end":392,"column_start":28,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31199,"byte_end":31207,"line_start":399,"line_end":399,"column_start":29,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31327,"byte_end":31335,"line_start":406,"line_end":406,"column_start":29,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31462,"byte_end":31470,"line_start":413,"line_end":413,"column_start":36,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/internal/mod.rs","byte_start":31707,"byte_end":31715,"line_start":429,"line_end":429,"column_start":35,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102343,"byte_end":102351,"line_start":257,"line_end":257,"column_start":10,"column_end":18},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/visit.rs","byte_start":102754,"byte_end":102761,"line_start":266,"line_end":266,"column_start":45,"column_end":52},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/qtao/.cargo/registry/src/github.com-1ecc6299db9ec823/value-bag-1.0.0-alpha.9/src/lib.rs","byte_start":10441,"byte_end":10449,"line_start":356,"line_end":356,"column_start":10,"column_end":18},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}}]}